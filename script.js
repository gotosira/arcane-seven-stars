// Language switching system
let currentLanguage = localStorage.getItem('language') || 'th';

const translations = {
    th: {
        title: "üåü ‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á üåü",
        subtitle: "üîÆ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì", 
        // Navigation
        navDaily: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ",
        navSpreads: "‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà", 
        navJournal: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å",
        navAnalytics: "‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥",
        navMeditation: "‡∏ó‡∏≥‡∏™‡∏°‡∏≤‡∏ò‡∏¥",
        // Settings
        settings: "‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤",
        soundEffects: "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö",
        backgroundMusic: "‡πÄ‡∏û‡∏•‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á",
        notifications: "‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
        theme: "‡∏ò‡∏µ‡∏°",
        language: "‡∏†‡∏≤‡∏©‡∏≤",
        themeDefault: "‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏°",
        themeDark: "‡∏°‡∏∑‡∏î", 
        themeGolden: "‡∏ó‡∏≠‡∏á",
        themeNature: "‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥",
        resetDaily: "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
        close: "‡∏õ‡∏¥‡∏î",
        // Daily Reading
        dailyReading: "‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
        dailyDescription: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        clickCard: "‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
        yourDailyCard: "‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì",
        share: "‡πÅ‡∏ä‡∏£‡πå",
        save: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", 
        read: "‡∏≠‡πà‡∏≤‡∏ô",
        luckyColor: "‡∏™‡∏µ‡∏°‡∏á‡∏Ñ‡∏•",
        luckyNumbers: "‡πÄ‡∏•‡∏Ç‡∏°‡∏á‡∏Ñ‡∏•", 
        luckyTime: "‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏µ",
        dailyAffirmation: "‡∏Ñ‡∏≥‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô",
        yourSelectedCard: "‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å",
        clickForNew: "‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡πÉ‡∏´‡∏°‡πà",
        // Three Cards Reading
        threeCardsTitle: "üîÆ ‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö",
        threeCardsDescription: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏î‡∏ß‡∏á‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î - ‡∏≠‡∏î‡∏µ‡∏ï ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
        pickThreeCards: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö",
        pickThreeCardsNew: "‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö‡πÉ‡∏´‡∏°‡πà",
        past: "‡∏≠‡∏î‡∏µ‡∏ï (Past)",
        present: "‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (Present)",
        future: "‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï (Future)",
        threeCardsSummary: "üåü ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö",
        saveReading: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡∏ô‡∏µ‡πâ",
        newReading: "‡∏î‡∏π‡πÑ‡∏û‡πà‡πÉ‡∏´‡∏°‡πà",
        or: "‡∏´‡∏£‡∏∑‡∏≠",
        // Reset button
        resetDaily: "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï",
        resetDailyTooltip: "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà",
        // Numerical table
        numericalTableTitle: "üìä ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö",
        numericalTableExplanation: "‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡πÑ‡∏û‡πà‡∏ó‡∏±‡πâ‡∏á 3 ‡πÉ‡∏ö ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏¢‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
        currentYam: "‡∏¢‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
        yamHighlightNote: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á üåü ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
        // Star Sevy-Taek
        navStarSevy: "‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡πÅ‡∏ó‡∏£‡∏Å",
        starSevyTitle: "‡∏ï‡∏≥‡∏£‡∏≤‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å",
        starSevySubtitle: "‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏´‡πà‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå ‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£ ‡∏û‡∏∏‡∏ò ‡∏û‡∏§‡∏´‡∏±‡∏™ ‡∏®‡∏∏‡∏Å‡∏£‡πå ‡πÄ‡∏™‡∏≤‡∏£‡πå",
        starSevyDefinition: "‡∏î‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏•‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•",
        starTaekDefinition: "‡∏î‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•",
        starCalculationTitle: "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å",
        birthDate: "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î",
        birthTime: "‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î",
        calculate: "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì",
        starSevy: "‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢",
        starTaek: "‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å",
        interpretation: "‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å",
        manualSelectionTitle: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á",
        selectSevyStar: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢",
        selectTaekStar: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å",
        interpretationResult: "‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°",
        guideTitle: "‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
        autoCalculationGuide: "‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
        autoCalculationDesc: "‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
        manualSelectionGuide: "‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á",
        manualSelectionDesc: "‡∏´‡∏≤‡∏Å‡∏ó‡∏£‡∏≤‡∏ö‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å dropdown ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
        interpretationGuide: "‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°",
        interpretationDesc: "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡∏£‡∏≤‡πÇ‡∏ö‡∏£‡∏≤‡∏ì‡πÑ‡∏ó‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏±‡∏ö‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å"
    },
    en: {
        title: "üåü Seven Wonderful Stars üåü",
        subtitle: "üîÆ Unlock the mysteries of your spiritual journey",
        // Navigation
        navDaily: "Today",
        navSpreads: "Card Spreads",
        navJournal: "Journal", 
        navAnalytics: "Analytics",
        navMeditation: "Meditation",
        // Settings
        settings: "Settings",
        soundEffects: "Sound Effects",
        backgroundMusic: "Background Music",
        notifications: "Daily Notifications",
        theme: "Theme",
        language: "Language",
        themeDefault: "Default",
        themeDark: "Dark",
        themeGolden: "Golden", 
        themeNature: "Nature",
        resetDaily: "Reset Daily Card",
        close: "Close",
        // Daily Reading
        dailyReading: "Daily Card Reading",
        dailyDescription: "Choose one card to reveal your daily fortune",
        clickCard: "Click the card below to reveal your daily fortune",
        yourDailyCard: "Your Daily Card",
        share: "Share",
        save: "Save",
        read: "Read Aloud",
        luckyColor: "Lucky Color",
        luckyNumbers: "Lucky Numbers", 
        luckyTime: "Lucky Time",
        dailyAffirmation: "Daily Affirmation",
        yourSelectedCard: "Your Selected Card",
        clickForNew: "Click to draw a new card",
        // Three Cards Reading
        threeCardsTitle: "üîÆ Pick 3 Cards",
        threeCardsDescription: "Choose 3 cards for a detailed reading - Past, Present, Future",
        pickThreeCards: "Pick 3 Cards",
        pickThreeCardsNew: "Pick 3 New Cards",
        past: "Past",
        present: "Present",
        future: "Future",
        threeCardsSummary: "üåü Three Cards Reading Summary",
        saveReading: "Save This Reading",
        newReading: "New Reading",
        or: "or",
        // Reset button
        resetDaily: "Reset",
        resetDailyTooltip: "Reset daily card to pick a new one",
        // Numerical table
        numericalTableTitle: "üìä 3-Card Numerical Table",
        numericalTableExplanation: "Table showing numerical sequences from all 3 cards with current Yam numbers highlighted",
        currentYam: "Current Yam",
        yamHighlightNote: "Red highlighted numbers üåü match the current Yam",
        // Star Sevy-Taek
        navStarSevy: "Star Sevy-Taek",
        starSevyTitle: "Star Sevy-Taek System",
        starSevySubtitle: "Science of 7 Stars - Sun, Moon, Mars, Mercury, Jupiter, Venus, Saturn",
        starSevyDefinition: "Sevy Star: A star positioned to enhance and empower the individual",
        starTaekDefinition: "Taek Star: A star positioned to create obstacles or challenges for the individual",
        starCalculationTitle: "Calculate Star Sevy-Taek",
        birthDate: "Birth Date",
        birthTime: "Birth Time",
        calculate: "Calculate",
        starSevy: "Sevy Star",
        starTaek: "Taek Star",
        interpretation: "Star Sevy-Taek Interpretation",
        manualSelectionTitle: "Manual Star Sevy-Taek Selection",
        selectSevyStar: "Select Sevy Star",
        selectTaekStar: "Select Taek Star",
        interpretationResult: "Interpretation Result",
        guideTitle: "User Guide",
        autoCalculationGuide: "Automatic Calculation",
        autoCalculationDesc: "Enter birth date and time for automatic star calculations",
        manualSelectionGuide: "Manual Selection",
        manualSelectionDesc: "If you know your stars, select from dropdowns for instant interpretation",
        interpretationGuide: "Interpretation",
        interpretationDesc: "System displays interpretation based on ancient Thai astrological texts when Sevy and Taek stars interact"
    }
};

// Daily quotes rotation
const dailyQuotes = {
    th: [
        "üîÆ ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏≤‡∏á‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì",
        "‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏ä‡∏∞‡∏ï‡∏≤‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏ó‡∏µ‡∏•‡∏∞‡πÉ‡∏ö‡πÑ‡∏û‡πà",
        "‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÑ‡∏£‡πâ‡∏Ç‡∏µ‡∏î‡∏à‡∏≥‡∏Å‡∏±‡∏î",
        "‡∏ó‡∏µ‡πà‡∏ã‡∏∂‡πà‡∏á‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡πÇ‡∏ö‡∏£‡∏≤‡∏ì‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà",
        "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
        "‡πÇ‡∏≠‡∏ö‡∏Å‡∏≠‡∏î‡∏û‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏®‡∏©‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì",
        "‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ"
    ],
    en: [
        "üîÆ Unlock the mysteries of your spiritual journey",
        "Discover your destiny, one card at a time",
        "Every moment holds infinite possibilities", 
        "Where ancient wisdom meets modern insight",
        "Transform your life through cosmic guidance",
        "Embrace the magic within you",
        "Your future begins with today's choice"
    ]
};

function switchLanguage(lang) {
    currentLanguage = lang;
    localStorage.setItem('language', lang);
    updateUILanguage();
    updateDailyQuote();
}

function updateUILanguage() {
    const t = translations[currentLanguage];
    
    // Update title and subtitle
    document.querySelector('h1').innerHTML = t.title;
    document.querySelector('.subtitle').textContent = t.subtitle;
    
    // Update navigation tabs
    const navTabs = document.querySelectorAll('.nav-tab');
    const navKeys = ['navDaily', 'navSpreads', 'navJournal', 'navAnalytics', 'navMeditation'];
    navTabs.forEach((tab, index) => {
        const icon = tab.querySelector('i').outerHTML;
        tab.innerHTML = `${icon} ${t[navKeys[index]]}`;
    });
    
    // Update main content sections
    updateMainContent(t);
    
    // Update 3-card section
    updateThreeCardsLanguage(t);
}

function updateThreeCardsLanguage(t) {
    // Update 3-card section title and description
    const threeCardsTitle = document.querySelector('.three-cards-section h3');
    if (threeCardsTitle) {
        threeCardsTitle.textContent = t.threeCardsTitle;
    }
    
    const threeCardsDescription = document.querySelector('.three-cards-section .description');
    if (threeCardsDescription) {
        threeCardsDescription.textContent = t.threeCardsDescription;
    }
    
    // Update section divider
    const sectionDivider = document.querySelector('.section-divider span');
    if (sectionDivider) {
        sectionDivider.textContent = t.or;
    }
    
    // Update button text
    const pickButton = document.getElementById('pick3CardsBtn');
    if (pickButton) {
        if (pickButton.innerHTML.includes('‡πÉ‡∏´‡∏°‡πà') || pickButton.innerHTML.includes('New')) {
            pickButton.innerHTML = `<i class="fas fa-redo"></i> ${t.pickThreeCardsNew}`;
        } else {
            pickButton.innerHTML = `<i class="fas fa-magic"></i> ${t.pickThreeCards}`;
        }
    }
    
    // Update position labels
    const pastLabel = document.querySelector('#pastCard').parentNode.querySelector('.position-label');
    const presentLabel = document.querySelector('#presentCard').parentNode.querySelector('.position-label');
    const futureLabel = document.querySelector('#futureCard').parentNode.querySelector('.position-label');
    
    if (pastLabel) pastLabel.textContent = t.past;
    if (presentLabel) presentLabel.textContent = t.present;
    if (futureLabel) futureLabel.textContent = t.future;
    
    // Update summary section
    const summaryTitle = document.querySelector('#threeCardsSummary h4');
    if (summaryTitle) {
        summaryTitle.textContent = t.threeCardsSummary;
    }
    
    // Update action buttons
    const saveButton = document.querySelector('[onclick="saveThreeCardsReading()"]');
    const resetButton = document.querySelector('[onclick="resetThreeCards()"]');
    
    if (saveButton) {
        saveButton.innerHTML = `<i class="fas fa-save"></i> ${t.saveReading}`;
    }
    if (resetButton) {
        resetButton.innerHTML = `<i class="fas fa-redo"></i> ${t.newReading}`;
    }
    
    // Update reset daily button
    const resetDailyBtn = document.querySelector('.reset-daily-btn');
    if (resetDailyBtn) {
        resetDailyBtn.innerHTML = `<i class="fas fa-redo"></i> ${t.resetDaily}`;
        resetDailyBtn.title = t.resetDailyTooltip;
    }
    
    // Update numerical table elements
    const numericalTableTitle = document.getElementById('numericalTableTitle');
    const numericalTableExplanation = document.getElementById('numericalTableExplanation');
    
    if (numericalTableTitle) {
        numericalTableTitle.textContent = t.numericalTableTitle;
    }
    if (numericalTableExplanation) {
        numericalTableExplanation.textContent = t.numericalTableExplanation;
    }
}

function updateMainContent(t) {
    // Daily Reading Tab
    const dailyTitle = document.querySelector('#dailyTab h2');
    if (dailyTitle) dailyTitle.textContent = t.dailyReading;
    
    const dailyDesc = document.querySelector('#dailyTab .description');
    if (dailyDesc) dailyDesc.textContent = t.dailyDescription;
    
    const statusText = document.getElementById('statusText');
    if (statusText && !hasPickedToday) statusText.textContent = t.clickCard;
    
    // Update settings
    const settingsTitle = document.querySelector('.settings-content h3');
    if (settingsTitle) {
        settingsTitle.innerHTML = `<i class="fas fa-cog"></i> ${t.settings}`;
    }
}

function updateDailyQuote() {
    const today = new Date();
    const dayOfYear = Math.floor((today - new Date(today.getFullYear(), 0, 0)) / (1000 * 60 * 60 * 24));
    const quotes = dailyQuotes[currentLanguage];
    const selectedQuote = quotes[dayOfYear % quotes.length];
    
    const quoteElement = document.getElementById('dailyQuote');
    if (quoteElement) {
        quoteElement.textContent = `"${selectedQuote}"`;
    }
}

// English translations for card meanings
const CARD_TRANSLATIONS = {
    '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞1.png': {
        name: 'Kumbha (Water Bearer)',
        meaning: 'Financial fortune, wealth, asset accumulation. Today is a good day for investment and savings.',
        description: 'This card signifies abundance and prosperity in life. It shows good financial opportunities, asset accumulation, and economic growth.'
    },
    '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞2.png': {
        name: 'Kumbha (Water Bearer)',
        meaning: 'Financial wealth, prosperity, returns from investments. Be careful with spending.',
        description: 'Wealth and prosperity, showing returns from past efforts and growth in financial stability.'
    },
    '‡∏Å‡∏±‡∏°‡∏°‡∏∞1.png': {
        name: 'Kamma (Karma)',
        meaning: 'Karma, actions, consequences. Today, do good deeds as you will receive good returns.',
        description: 'The card of karmic law, showing the consequences of actions that return to us. Good deeds bring happiness, bad deeds bring suffering.'
    },
    '‡∏Å‡∏±‡∏°‡∏°‡∏∞2.png': {
        name: 'Kamma (Karma)',
        meaning: 'Receiving consequences from past actions. Stay calm and patient, good things are coming.',
        description: 'Present actions determine the future. Use wisdom in all decisions and actions.'
    },
    '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á.png': {
        name: 'Kehang (Property)',
        meaning: 'Property, real estate, housing. Today is good for real estate matters.',
        description: 'Card of property and real estate, signifying investment in housing, land trading, and creating value from assets.'
    }
    // Add more translations as needed...
};

function getCardData(cardFile) {
    const originalData = CARD_DATA[cardFile];
    if (currentLanguage === 'en' && CARD_TRANSLATIONS[cardFile]) {
        return {
            ...originalData,
            name: CARD_TRANSLATIONS[cardFile].name,
            meaning: CARD_TRANSLATIONS[cardFile].meaning,
            description: CARD_TRANSLATIONS[cardFile].description
        };
    }
    return originalData;
}

// Enhanced Thai Fortune Cards Configuration
const CARD_DATA = {
    '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞1.png': {
        name: '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞ (Money)',
        innerText: 'affluence',
        meaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡∏´‡∏≤‡∏Ñ‡∏∏‡∏ì ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤',
        number:'6',
        description: '‡πÑ‡∏û‡πà‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡πÑ‡∏û‡πà‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏≥‡∏£‡∏ß‡∏¢ ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á‡πÑ‡∏´‡∏•‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏î‡πâ‡∏ú‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏ß‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏£‡∏ß‡∏°‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏î‡∏π‡πÅ‡∏•'
    },
    '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞2.png': {
        name: '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞ (Money)',
        innerText: 'Expense',
        number:'6',
        meaning: '‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö',
        description: '‡πÑ‡∏û‡πà‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢ ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πà‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏Ñ‡∏ß‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö ‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ü‡∏∏‡πà‡∏°‡πÄ‡∏ü‡∏∑‡∏≠‡∏¢ ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏µ ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡πÅ‡∏ï‡πà‡∏à‡∏á‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏£‡∏ß‡∏°‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏î‡∏π‡πÅ‡∏•'
    },
    '‡∏Å‡∏±‡∏°‡∏°‡∏∞1.png': {
        name: '‡∏Å‡∏±‡∏°‡∏°‡∏∞ (Karma)',
        innerText: 'Work',
        number:'2',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏∞‡∏°‡∏±‡∏Å‡πÄ‡∏Ç‡∏°‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö',
        description: '‡πÑ‡∏û‡πà‡∏Å‡∏±‡∏°‡∏°‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ä‡πà‡∏ß‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏• ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏î‡∏µ‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡∏Ñ‡∏ß‡∏£‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÉ‡∏à‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏ó‡πâ‡∏≠',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô ‡∏ß‡∏¥‡∏ñ‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏≠‡∏î‡∏µ‡∏ï‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Å‡∏≤‡∏£‡∏ñ‡∏∂‡∏á‡πÅ‡∏Å‡πà‡∏°‡∏£‡∏ì‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤'
    },
    '‡∏Å‡∏±‡∏°‡∏°‡∏∞2.png': {
        name: '‡∏Å‡∏±‡∏°‡∏°‡∏∞ (Karma)',
        innerText: 'Karma',
        number:'2',
        meaning: '‡∏Å‡∏£‡∏£‡∏°‡∏î‡∏µ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏Ñ‡∏ß‡∏£‡πÅ‡∏Å‡πà‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥',
        description: '‡πÑ‡∏û‡πà‡∏Å‡∏±‡∏°‡∏°‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏£‡∏£‡∏° ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Å‡∏é‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏£‡∏£‡∏° ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡πÑ‡∏õ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ ‡∏´‡∏≤‡∏Å‡∏ó‡∏≥‡∏î‡∏µ‡∏¢‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏´‡∏≤‡∏Å‡∏ó‡∏≥‡∏ä‡∏±‡πà‡∏ß‡∏¢‡πà‡∏≠‡∏°‡πÑ‡∏î‡πâ‡∏ä‡∏±‡πà‡∏ß ‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡∏ó‡∏±‡πâ‡∏á‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡πÅ‡∏ï‡πà‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡∏°‡∏µ‡πÉ‡∏à‡πÄ‡∏°‡∏ï‡∏ï‡∏≤ ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡∏≠‡∏î‡∏ó‡∏ô‡∏ï‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÅ‡∏•‡∏∞‡∏Å‡∏∏‡∏®‡∏•‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ö‡∏£‡∏£‡πÄ‡∏ó‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏£‡∏°‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô ‡∏ß‡∏¥‡∏ñ‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏≠‡∏î‡∏µ‡∏ï‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Å‡∏≤‡∏£‡∏ñ‡∏∂‡∏á‡πÅ‡∏Å‡πà‡∏°‡∏£‡∏ì‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤'
    },
    '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á.png': {
        name: '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á (House)',
        innerText: 'Property',
        number:'5',
        meaning: '‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ',
        description: '‡πÑ‡∏û‡πà‡πÄ‡∏Ñ‡∏´‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏°‡∏µ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏î‡∏µ ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏û‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏∏‡∏Ç ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏à‡∏∞‡∏ô‡∏≥‡∏û‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
        cardNameMeaning: '‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ'
    },
    '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á (2).png': {
        name: '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á (House)',
        innerText: 'Constructing',
        number:'5',
        meaning: '‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ ‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏Å‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô',
        description: '‡πÑ‡∏û‡πà‡πÄ‡∏Ñ‡∏´‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏ï‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô ‡∏ô‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏´‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        cardNameMeaning: '‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ'
    },
    '‡∏ç‡∏≤‡∏ï‡∏¥.png': {
        name: '‡∏ç‡∏≤‡∏ï‡∏¥ (Relatives)',
        innerText: 'Family',
        number:'6',
        meaning: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô',
        description: '‡πÑ‡∏û‡πà‡∏ç‡∏≤‡∏ï‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡πÄ‡∏ü‡∏∑‡πâ‡∏≠‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡πà‡∏Å‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô'
    },
    '‡∏ç‡∏≤‡∏ï‡∏¥2.png': {
        name: '‡∏ç‡∏≤‡∏ï‡∏¥ (Relatives)',
        innerText: 'Pass Away',
        number:'6',
        meaning: '‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÇ‡∏®‡∏Å‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πà‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÉ‡∏à',
        description: '‡πÑ‡∏û‡πà‡∏ç‡∏≤‡∏ï‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πà‡∏≤‡∏ß‡πÑ‡∏°‡πà‡∏î‡∏µ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏®‡∏£‡πâ‡∏≤ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏≠‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏à‡∏£‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏ö‡∏≠‡∏Å‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏´‡πà‡∏ß‡∏á‡πÉ‡∏¢ ‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡∏≠‡∏∏‡∏ó‡∏¥‡∏®‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏∏‡∏®‡∏•‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏•‡πà‡∏ß‡∏á‡∏•‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡∏à‡∏∞‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡πÑ‡∏õ',
        cardNameMeaning: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô'
    },
    '‡∏ï‡∏ô‡∏∏1.png': {
        name: '‡∏ï‡∏ô‡∏∏ (Body)',
        innerText: 'Bond',
        number:'1',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô ‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà ‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô',
        description: '‡πÑ‡∏û‡πà‡∏ï‡∏ô‡∏∏‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á ‡∏≠‡∏≤‡∏à‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ó‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏π‡πà‡πÅ‡∏ó‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡πÄ‡∏£‡∏≤ ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏£‡∏±‡∏Å ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏∑‡∏≠‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏•‡πâ‡∏≥‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏™‡∏¥‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏ó‡∏µ‡πà‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏°‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏™‡∏¥‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô'
    },
    '‡∏ï‡∏ô‡∏∏2.png': {
        name: '‡∏ï‡∏ô‡∏∏ (Body)',
        innerText: 'Physique',
        number:'1',
        meaning:'‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏¢‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏°‡∏µ‡∏û‡∏•‡∏±‡∏á ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏ï‡∏ô‡∏∏‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ ‡πÄ‡∏ô‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏à‡∏∞‡∏°‡∏µ‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏†‡∏≤‡∏û‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏Ñ‡∏∑‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏™‡∏¥‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏ó‡∏µ‡πà‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏°‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏™‡∏¥‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô'
    },
    '‡∏ó‡∏≤‡∏ô‡∏±‡∏á.png': {
        name: '‡∏ó‡∏≤‡∏ô‡∏±‡∏á (Sharing)',
        innerText: 'Sharing',
        number:'3',
        meaning:'‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏ô‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡πÄ‡∏ü‡∏∑‡πâ‡∏≠‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡πà ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏£‡∏°‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏à‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Å‡πà‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•'
    },
    '‡∏ó‡∏≤‡∏ô‡∏±‡∏á2.png': {
        name: '‡∏ó‡∏≤‡∏ô‡∏±‡∏á (Sharing)',
        innerText: 'Loss',
        number:'3',
        meaning:'‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ö‡∏∏‡∏ç‡∏Å‡∏∏‡∏®‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏ô‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢ ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤ ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞ ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÅ‡∏Å‡πà‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏°‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡πâ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡πÉ‡∏à‡∏£‡∏±‡∏Å‡∏à‡∏∞‡∏ô‡∏≥‡∏û‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏°‡∏≤‡∏™‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•'
    },
    '‡∏ó‡∏≤‡∏™‡∏≤1.png': {
        name: '‡∏ó‡∏≤‡∏™‡∏≤ (Public Service)',
        innerText: 'Underling',
        number:'7',
        meaning:'‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏™‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏™‡∏° ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏î‡∏ã‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏∑‡∏≠‡∏Å‡πâ‡∏≤‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏µ',
        cardNameMeaning: '‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ó‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡∏ó‡∏≤‡∏™ ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡πà‡∏≥‡∏ï‡πâ‡∏≠‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ó‡∏≤‡∏™‡∏≤2.png': {
        name: '‡∏ó‡∏≤‡∏™‡∏≤ (Public Service)',
        innerText: 'Submission',
        number:'7',
        meaning:'‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏∞‡∏ï‡∏±‡∏ß',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏™‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏•‡∏∞‡πÄ‡∏™‡∏£‡∏µ‡∏†‡∏≤‡∏û‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏≠ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏∏‡∏í‡∏¥‡∏†‡∏≤‡∏ß‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏Ñ‡∏≠‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
        cardNameMeaning: '‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ó‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡∏ó‡∏≤‡∏™ ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡πà‡∏≥‡∏ï‡πâ‡∏≠‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ó‡∏≤‡∏™‡∏µ.png': {
        name: '‡∏ó‡∏≤‡∏™‡∏µ (Private Service)',
        innerText: 'Servant',
        number:'4',
        meaning:'‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏á‡∏£‡∏±‡∏Å‡∏†‡∏±‡∏Å‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏™‡∏µ‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà ‡πÄ‡∏õ‡πá‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏´‡πá‡∏ô ‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û',
        cardNameMeaning: '‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏ç‡∏≤‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡∏ó‡∏≤‡∏™ ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡πà‡∏≥‡∏ï‡πâ‡∏≠‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ó‡∏≤‡∏™‡∏µ2.png': {
        name: '‡∏ó‡∏≤‡∏™‡∏µ (Private Service)',
        innerText: 'Affair',
        number:'4',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡πà‡∏≠‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏ó‡∏≤‡∏™‡∏µ‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏î‡∏∏‡∏•‡∏¢‡∏û‡∏¥‡∏ô‡∏¥‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
        cardNameMeaning: '‡πÄ‡∏´‡∏ô‡πá‡∏î‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏ç‡∏≤‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡∏ó‡∏≤‡∏™ ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡πà‡∏≥‡∏ï‡πâ‡∏≠‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏Å‡πá‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏î‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ò‡∏ô‡∏±‡∏á.png': {
        name: '‡∏ò‡∏ô‡∏±‡∏á (Savings)',
        innerText: 'Abundance',
        number:'6',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏π‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏• ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ',
        description: '‡πÑ‡∏û‡πà‡∏ò‡∏ô‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏• ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏π‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏•‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏î‡∏ó‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°',
        cardNameMeaning: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡πÜ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ò‡∏ô‡∏±‡∏á2.png': {
        name: '‡∏ò‡∏ô‡∏±‡∏á (Savings)',
        innerText: 'Virtue',
        number:'6',
        meaning: '‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≠‡∏ö‡∏ò‡∏£‡∏£‡∏°',
        description: '‡πÑ‡∏û‡πà‡∏ò‡∏ô‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏á‡∏≤‡∏° ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏á‡∏≤‡∏° ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ó‡∏≤‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≠‡∏ö‡∏ò‡∏£‡∏£‡∏°‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÉ‡∏à‡πÉ‡∏™‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÅ‡∏Å‡πà‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏à‡∏∞‡∏ô‡∏≥‡∏û‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏°‡∏≤‡∏™‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏£‡∏á‡πÜ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤'
    },
    '‡∏ô‡∏≤‡∏ß‡∏±‡∏á.png': {
        name: '‡∏ô‡∏≤‡∏ß‡∏±‡∏á (Travel)',
        innerText: 'Vehicle',
        number:'7',
        meaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢',
        description: '‡πÑ‡∏û‡πà‡∏ô‡∏≤‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏™‡∏π‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡∏ñ ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢'
    },
    '‡∏ô‡∏≤‡∏ß‡∏±‡∏á2.png': {
        name: '‡∏ô‡∏≤‡∏ß‡∏±‡∏á (Travel)',
        innerText: 'Exploration',
        number:'7',
        meaning: '‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÅ‡∏•‡∏∞‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏™‡∏π‡πà‡πÇ‡∏•‡∏Å‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÑ‡∏Å‡∏•',
        description: '‡πÑ‡∏û‡πà‡∏ô‡∏≤‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏û‡πà‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏Å‡∏• ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏´‡∏ß‡∏≤‡∏î‡∏Å‡∏•‡∏±‡∏ß‡∏ï‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏∏‡πâ‡∏ô‡πÄ‡∏Ñ‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢'
    },
    '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥1.png': {
        name: '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥ (Relationship)',
        innerText: 'Spouse',
        number:'3',
        meaning: '‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏≠‡∏á‡∏£‡∏π‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏±‡∏ï‡∏ô‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏û‡∏ö‡∏£‡∏±‡∏Å‡πÅ‡∏ó‡πâ ‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ô‡∏µ‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô',
        cardNameMeaning: '‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° ‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏Å‡∏±‡∏ô ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏° ‡∏à‡∏±‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤'
    },
    '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥2.png': {
        name: '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥ (Relationship)',
        innerText: 'Partnership',
        number:'3',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡∏° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏±‡∏ï‡∏ô‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏™‡∏±‡∏¢‡∏ó‡∏±‡∏®‡∏ô‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏£‡πà‡∏ß‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏ù‡πà‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ ‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á',
        cardNameMeaning: '‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏° ‡∏Ñ‡∏ô‡∏£‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏Å‡∏±‡∏ô ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏° ‡∏à‡∏±‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤'
    },
    '‡∏®‡∏∏‡∏†‡∏∞.png': {
        name: '‡∏®‡∏∏‡∏†‡∏∞ (Growth)',
        innerText: 'Blessed',
        number:'5',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏£‡∏¥‡∏°‡∏á‡∏Ñ‡∏• ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏£‡∏à‡∏≤‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        description: '‡πÑ‡∏û‡πà‡∏®‡∏∏‡∏†‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏£‡∏¥‡∏°‡∏á‡∏Ñ‡∏• ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á ‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏°‡∏á‡∏Ñ‡∏•‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏£‡∏¥‡∏°‡∏á‡∏Ñ‡∏•‡∏à‡∏∞‡∏¢‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏π‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ',
        cardNameMeaning: '‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡∏û‡∏¥‡∏ò‡∏µ ‡∏à‡∏≤‡∏£‡∏µ‡∏ï‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏á‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏â‡∏•‡∏≠‡∏á ‡∏™‡∏±‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏• ‡∏ú‡∏π‡πâ‡∏´‡∏•‡∏±‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏®‡∏≤‡∏™‡∏ô‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠'
    },
    '‡∏®‡∏∏‡∏†‡∏∞2.png': {
        name: '‡∏®‡∏∏‡∏†‡∏∞ (Growth)',
        innerText: 'Educate',
        number:'5',
        meaning: '‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏£‡∏π‡∏ö‡∏≤‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏ó‡∏≠‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ',
        description: '‡πÑ‡∏û‡πà‡∏®‡∏∏‡∏†‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πà‡∏≠ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏π‡πâ ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏™‡∏π‡πà‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Ñ‡∏∑‡∏≠‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡πÅ‡∏¢‡πà‡∏á‡πÑ‡∏õ‡πÑ‡∏î‡πâ ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
        cardNameMeaning: '‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡∏û‡∏¥‡∏ò‡∏µ ‡∏à‡∏≤‡∏£‡∏µ‡∏ï‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏á‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏â‡∏•‡∏≠‡∏á ‡∏™‡∏±‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏• ‡∏ú‡∏π‡πâ‡∏´‡∏•‡∏±‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏®‡∏≤‡∏™‡∏ô‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏ò‡∏µ‡∏Å‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠'
    },
    '‡∏õ‡∏¥‡∏ï‡∏≤1.png': {
        name: '‡∏õ‡∏¥‡∏ï‡∏≤ (Father)',
        innerText: 'Founder',
        number:'5',
        meaning: '‡∏û‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏Å‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏¥‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏Å‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏ß‡∏∞‡∏ú‡∏π‡πâ‡∏ô‡∏≥ ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ ‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏£‡∏î‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏£‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ',
        cardNameMeaning: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πÑ‡∏î‡πâ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏à‡∏≠‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°'
    },
    '‡∏õ‡∏¥‡∏ï‡∏≤2.png': {
        name: '‡∏õ‡∏¥‡∏ï‡∏≤ (Father)',
        innerText: 'Leader',
        number:'5',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏°‡πÅ‡∏Ç‡πá‡∏á',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏¥‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÅ‡∏•‡∏∞‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∏‡∏ï‡∏¥‡∏ò‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏≠‡∏ö‡∏á‡∏≥ ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡∏á‡∏ß‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤',
        cardNameMeaning: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πÑ‡∏î‡πâ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏à‡∏≠‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°'
    },
    '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞1.png': {
        name: '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞ (Child)',
        innerText: 'Offspring',
        number:'7',
        meaning: '‡∏•‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏£‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏Ñ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡∏à‡∏≤‡∏Å‡∏£‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡πà‡∏≤‡∏ß‡∏î‡∏µ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ö‡∏∏‡∏ï‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ô‡∏£‡∏∏‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏£‡πâ‡πÄ‡∏î‡∏µ‡∏¢‡∏á‡∏™‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡πá‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏î‡πá‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏™‡∏±‡∏á‡∏Ñ‡∏°',
        cardNameMeaning: '‡∏•‡∏π‡∏Å ‡∏ö‡∏∏‡∏ï‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏°‡∏±‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÜ'
    },
    '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞2.png': {
        name: '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞ (Child)',
        innerText: 'Karmic Bond',
        number:'7',
        meaning: '‡∏û‡∏±‡∏ô‡∏ò‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏´‡∏ô‡∏µ‡πâ‡∏ö‡∏∏‡∏ç‡∏Ñ‡∏∏‡∏ì‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏•‡∏π‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡∏£‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ',
        description: '‡πÑ‡∏û‡πà‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏û‡∏±‡∏ô‡∏ò‡∏∞‡∏Å‡∏£‡∏£‡∏° ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏•‡∏π‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏•‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏à‡∏≤‡∏Å‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏à‡∏£‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ï‡∏±‡∏ç‡∏ç‡∏π ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏Å‡∏ï‡∏±‡∏ç‡∏ç‡∏π‡∏ï‡πà‡∏≠‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏û‡∏±‡∏ô‡∏ò‡∏∞‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏∏‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÜ ‡πÑ‡∏õ',
        cardNameMeaning: '‡∏•‡∏π‡∏Å ‡∏ö‡∏∏‡∏ï‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏£‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏°‡∏±‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÜ'
    },
    '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞1.png': {
        name: '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞ (Illness)',
        innerText: 'Sickness',
        number:'3',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å‡∏Ç‡πå‡∏£‡πâ‡∏≠‡∏ô ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏π‡πÅ‡∏• ‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ',
        description: '‡πÑ‡∏û‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏à‡πá‡∏ö‡∏õ‡πà‡∏ß‡∏¢ ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏±‡∏á ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏ó‡∏≤‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡πÅ‡∏ï‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏Ñ‡∏∑‡∏≠‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢‡πÑ‡∏Ç‡πâ‡πÄ‡∏à‡πá‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏°‡∏µ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏£‡πâ‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏á‡∏≠‡∏≥‡∏û‡∏£‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏•‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤'
    },
    '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞2.png': {
        name: '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞ (Illness)',
        innerText: 'Persistence',
        number:'3',
        meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏≠‡∏î‡∏ó‡∏ô‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡∏Å‡∏≤‡∏£‡∏ü‡∏∑‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏π‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏ó‡πâ‡∏≠',
        description: '‡πÑ‡∏û‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡πÅ‡∏û‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ü‡∏∑‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏û‡πâ‡∏ô‡∏ß‡∏¥‡∏Å‡∏§‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏î‡∏ó‡∏ô‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÅ‡∏•‡∏∞‡∏Å‡πâ‡∏≤‡∏ß‡πÑ‡∏õ‡∏ó‡∏µ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏£‡∏•‡∏∏‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
        cardNameMeaning: '‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢‡πÑ‡∏Ç‡πâ‡πÄ‡∏à‡πá‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏°‡∏µ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏£‡πâ‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏¥‡∏î‡∏ö‡∏±‡∏á‡∏≠‡∏≥‡∏û‡∏£‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏•‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤'
    },
    '‡∏û‡∏±‡∏ô‡∏ò‡∏∏1.png': {
        name: '‡∏û‡∏±‡∏ô‡∏ò‡∏∏ (Affinity)',
        innerText: 'Heritage',
        number:'2',
        meaning:'‡∏°‡∏£‡∏î‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏≠‡∏î ‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏Ñ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡πÉ‡∏ô‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©',
        description:'‡πÑ‡∏û‡πà‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏°‡∏£‡∏î‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏™‡∏¥‡πà‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∏‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ ‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏°‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©‡πÑ‡∏î‡πâ‡∏™‡∏±‡πà‡∏á‡∏™‡∏°‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏∏‡πà‡∏ô‡∏•‡∏π‡∏Å‡∏£‡∏∏‡πà‡∏ô‡∏´‡∏•‡∏≤‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏¢‡∏∏‡∏Ñ‡∏™‡∏°‡∏±‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏£‡∏î‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏á‡∏≤‡∏°',
        cardNameMeaning: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏ú‡πà‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏õ‡∏π‡πà‡∏¢‡πà‡∏≤‡∏ï‡∏≤‡∏¢‡∏≤‡∏¢‡∏ç‡∏≤‡∏ï‡∏¥‡∏™‡∏ô‡∏¥‡∏ó‡∏°‡∏¥‡∏ï‡∏£‡∏™‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏ç‡∏≤‡∏ï‡∏¥'
    },
    '‡∏û‡∏±‡∏ô‡∏ò‡∏∏2.png': {
        name: '‡∏û‡∏±‡∏ô‡∏ò‡∏∏ (Kinship)',
        innerText: 'Affinity',
        number:'2',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ù‡∏±‡∏á‡∏•‡∏∂‡∏Å‡πÉ‡∏ô‡πÉ‡∏à',
        description:'‡πÑ‡∏û‡πà‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å‡∏Ç‡πå ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏Ñ‡∏∑‡∏≠‡∏Ç‡∏∏‡∏°‡∏û‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏ú‡πà‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏õ‡∏π‡πà‡∏¢‡πà‡∏≤‡∏ï‡∏≤‡∏¢‡∏≤‡∏¢‡∏ç‡∏≤‡∏ï‡∏¥‡∏™‡∏ô‡∏¥‡∏ó‡∏°‡∏¥‡∏ï‡∏£‡∏™‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏ç‡∏≤‡∏ï‡∏¥'
    },
    '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á.png': {
        name: '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á (Mate)',
        innerText: 'Affection',
        number:'2',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏Å‡πà‡∏Å‡∏±‡∏ô ‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏ô‡∏ä‡∏∑‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡πà‡∏ß‡∏á‡πÉ‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏π‡πà‡∏£‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
        cardNameMeaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô'
    },
    '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á2.png': {
        name: '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á (Mate)',
        innerText: 'Parting ways',
        number:'2',
        meaning:'‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÇ‡∏®‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤',
        description:'‡πÑ‡∏û‡πà‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏ó‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏•‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏®‡∏£‡πâ‡∏≤‡πÇ‡∏®‡∏Å ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏ó‡∏≤‡∏á‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏≠‡∏†‡∏±‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤',
        cardNameMeaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô'
    },
    '‡πÇ‡∏†‡∏Ñ‡∏≤1.png': {
        name: '‡πÇ‡∏†‡∏Ñ‡∏≤ (Real Estate)',
        innerText: 'Resources',
        number:'3',
        meaning:'‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÑ‡∏î‡πâ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤',
        description:'‡πÑ‡∏û‡πà‡πÇ‡∏†‡∏Ñ‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏Ñ‡∏ß‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
        cardNameMeaning: '‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏ô ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏Å ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏¢‡∏ß‡∏î‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß'
    },
    '‡πÇ‡∏†‡∏Ñ‡∏≤2.png': {
        name: '‡πÇ‡∏†‡∏Ñ‡∏≤ (Real Estate)',
        innerText:'Inventory',
        number:'3',
        meaning:'‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö',
        description:'‡πÑ‡∏û‡πà‡πÇ‡∏†‡∏Ñ‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏≥‡∏à‡∏±‡∏î‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ',
        cardNameMeaning: '‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏∑‡∏≠‡∏ô ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏Å ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏°‡∏≤‡∏´‡∏≤‡∏Å‡∏¥‡∏ô ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏¢‡∏ß‡∏î‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß'
    },
    '‡∏°‡∏£‡∏ì‡∏∞1.png': {
        name: '‡∏°‡∏£‡∏ì‡∏∞(Death)',
        innerText:'Demise',
        number:'1',
        meaning:'‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏´‡∏ç‡πà ‡∏à‡∏∏‡∏î‡∏à‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏Å‡πà‡∏≤ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏£‡∏ì‡∏∞ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡∏†‡∏≤‡∏û ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏Å‡πà‡∏≤‡πÜ ‡∏à‡∏∞‡∏à‡∏ö‡∏•‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡∏≤‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏≠‡∏≤‡∏à‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏•‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏î‡∏µ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏•‡πÜ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏î‡πâ‡∏ß‡∏¢'
    },
    '‡∏°‡∏£‡∏ì‡∏∞2.png': {
        name: '‡∏°‡∏£‡∏ì‡∏∞(Death)',
        innerText: 'Longing',
        number:'1',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏¢‡∏´‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡πÑ‡∏õ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏•‡∏∑‡∏°',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏£‡∏ì‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏´‡∏¢‡∏´‡∏≤ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏´‡∏¢‡∏´‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏á‡∏≥‡πÉ‡∏à‡∏à‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏£‡∏á‡∏à‡∏≥‡∏î‡∏µ‡πÜ ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡∏£‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏Å‡∏≤‡∏£‡∏£‡∏≥‡∏•‡∏∂‡∏Å‡∏ñ‡∏∂‡∏á‡∏≠‡∏î‡∏µ‡∏ï‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏ç‡∏´‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏≠‡∏≤‡∏à‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏•‡πÜ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏• ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏î‡∏µ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏Å‡∏•‡πÜ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏î‡πâ‡∏ß‡∏¢'
    },
    '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤1.png': {
        name: '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤ (Middle)',
        innerText: 'Harmonious',
        number:'2',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏°‡∏Å‡∏•‡∏∑‡∏ô ‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏±‡∏Ñ‡∏Ñ‡∏µ ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏ô‡πÄ‡∏≠‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡πÉ‡∏î‡∏ó‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏°‡∏Å‡∏•‡∏∑‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏î‡∏∏‡∏• ‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏ô‡πÄ‡∏≠‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏î‡∏ó‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏û‡πà‡πÅ‡∏´‡πà‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤‡∏™‡∏≠‡∏ô ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡∏´‡∏≤‡∏à‡∏∏‡∏î‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏°‡∏Å‡∏•‡∏∑‡∏ô ‡∏Ç‡πâ‡∏≠‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏™‡∏ï‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏π‡∏Å‡∏ó‡∏∞‡∏¢‡∏≠‡∏¢ ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÑ‡∏õ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á'
    },
    '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤2.png': {
        name: '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤ (Middle)',
        innerText: 'Equilibrium',
        number:'2',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£ ‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏à‡∏∏‡∏î‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏ô‡πÄ‡∏≠‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏• ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏•‡∏∏‡∏à‡∏∏‡∏î‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏ó‡∏∏‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏°‡∏Å‡∏•‡∏∑‡∏ô‡∏Å‡∏±‡∏ô ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏≤‡∏î‡πÑ‡∏õ ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏†‡∏≤‡∏ß‡∏∞‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏î‡πâ‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏•‡∏∞‡∏•‡∏∞‡πÄ‡∏•‡∏¢‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏î ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÑ‡∏ß‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
        cardNameMeaning: '‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ñ‡∏π‡∏Å‡∏ó‡∏∞‡∏¢‡∏≠‡∏¢ ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ‡πÑ‡∏õ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á'
    },
    '‡∏°‡∏≤‡∏ï‡∏≤1.png': {
        name: '‡∏°‡∏≤‡∏ï‡∏≤(Mother)',
        innerText: 'Guardian',
        number:'4',
        meaning:'‡πÅ‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏≤‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏™‡∏°‡∏≠ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏°‡πà ‡∏Ñ‡∏£‡∏π ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÄ‡∏°‡∏ï‡∏ï‡∏≤ ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏£‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏°‡πà‡∏Ñ‡∏∑‡∏≠‡∏û‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡πÇ‡∏•‡∏Å',
        cardNameMeaning: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏î‡∏π‡πÅ‡∏• ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏∑‡πà‡∏ô'
    },
    '‡∏°‡∏≤‡∏ï‡∏≤2.png': {
        name: '‡∏°‡∏≤‡∏ï‡∏≤(Mother)',
        innerText: 'Caregiver',
        number:'4',
        meaning:'‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏™‡πà‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
        description:'‡πÑ‡∏û‡πà‡∏°‡∏≤‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏• ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏ñ‡∏±‡∏°‡∏†‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏£‡∏±‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
        cardNameMeaning: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏î‡∏π‡πÅ‡∏• ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏∑‡πà‡∏ô'
    },
    '‡∏•‡∏≤‡∏†‡∏∞1.png': {
        name: '‡∏•‡∏≤‡∏†‡∏∞ (Profit)',
        innerText: 'Fortune',
        number:'6',
        meaning:'‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á‡πÑ‡∏´‡∏•‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤',
        description:'‡πÑ‡∏û‡πà‡∏•‡∏≤‡∏†‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≥‡∏Å‡∏≥‡πÑ‡∏£‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏≠‡∏≤‡∏à‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î',
        cardNameMeaning: '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÑ‡∏î‡πâ‡∏•‡∏≤‡∏† ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞ ‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏°‡∏†‡∏û‡πÉ‡∏î ‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥'
    },
    '‡∏•‡∏≤‡∏†‡∏∞2.png': {
        name: '‡∏•‡∏≤‡∏†‡∏∞ (Profit)',
        innerText: 'Journey',
        number:'6',
        meaning:'‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÉ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏•‡∏≤‡∏î',
        description:'‡πÑ‡∏û‡πà‡∏•‡∏≤‡∏†‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≥‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÉ‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏ñ‡∏¥‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡∏•‡∏≤‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏∞‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏≤‡∏ß‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏™‡∏ö‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ï‡∏•‡∏≤‡∏î‡πÉ‡∏´‡∏°‡πà',
        cardNameMeaning: '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÑ‡∏î‡πâ‡∏•‡∏≤‡∏† ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞ ‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ‡∏ñ‡πâ‡∏≤‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏°‡∏†‡∏û‡πÉ‡∏î ‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥'
    },
    '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞1.png': {
        name: '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞(Friendship)',
        innerText: 'Companion',
        number:'4',
        meaning:'‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ó‡πâ‡πÅ‡∏•‡∏∞‡∏™‡∏´‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏ß‡πâ‡πÉ‡∏à‡πÑ‡∏î‡πâ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏ô‡∏¥‡∏ó ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏°‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÉ‡∏ô‡∏¢‡∏≤‡∏°‡∏•‡∏≥‡∏ö‡∏≤‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏û‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πà ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å‡∏Ç‡πå‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏∑‡∏≠‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏•‡πâ‡∏≥‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        cardNameMeaning: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏à‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤'
    },
    '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞2.png': {
        name: '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞(Friendship)',
        innerText: 'Discussion',
        number:'4',
        meaning:'‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏≤‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢',
        description:'‡πÑ‡∏û‡πà‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏≤‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡πÅ‡∏•‡∏∞‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏Å‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏´‡∏°‡∏π‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏Ñ‡∏ô',
        cardNameMeaning: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏à‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤'
    },
    '‡∏™‡∏±‡∏Å‡∏Å‡∏∞.png': {
        name: '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ (Recognition)',
        innerText: 'Superstar',
        number:'4',
        meaning:'‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏î‡∏≤‡∏ß‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô',
        description:'‡πÑ‡∏û‡πà‡∏™‡∏±‡∏Å‡∏Å‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥ ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏ß‡πâ‡∏≤‡∏á ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡πâ‡∏≤‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏™‡∏π‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏•‡∏∑‡∏°‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏á‡∏≤‡∏°',
        cardNameMeaning: '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏î‡∏≤‡∏ß‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô'
    },
    '‡∏™‡∏±‡∏Å‡∏Å‡∏∞2.png': {
        name: '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ (Recognition)',
        innerText: 'Bullied',
        number:'4',
        meaning:'‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏Ç‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏á‡πÅ‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡∏ï‡∏±‡∏ß‡∏£‡∏≠‡∏î',
        description:'‡πÑ‡∏û‡πà‡∏™‡∏±‡∏Å‡∏Å‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏Ç‡∏µ‡πà ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏á‡πÅ‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏Å‡∏î‡∏Ç‡∏µ‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏≠‡∏≤‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö ‡πÅ‡∏ï‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏£‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÉ‡∏´‡πâ‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô‡∏û‡πâ‡∏ô‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô',
        cardNameMeaning: '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏î‡∏≤‡∏ß‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô'
    },
    '‡∏´‡∏¥‡∏ô‡∏∞1.png': {
        name: '‡∏´‡∏¥‡∏ô‡∏∞ (Tough)',
        innerText: 'Vulgar',
        number:'7',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡πÑ‡∏°‡πà‡∏î‡∏µ',
        description:'‡πÑ‡∏û‡πà‡∏´‡∏¥‡∏ô‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢ ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡∏Ñ‡∏ß‡∏£‡∏ù‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå ‡∏û‡∏π‡∏î‡∏à‡∏≤‡πÉ‡∏´‡πâ‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡∏ô‡πà‡∏≤‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏ï‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏°‡∏≤‡∏£‡∏¢‡∏≤‡∏ó‡∏î‡∏µ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏™‡∏π‡πà‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ',
        cardNameMeaning: '‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∂‡∏î‡∏≠‡∏±‡∏î ‡πÅ‡∏•‡∏∞ ‡∏≠‡∏±‡∏ï‡∏Ñ‡∏±‡∏î ‡∏à‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏ó‡∏≥‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏õ‡∏°‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏à‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡πÄ‡∏ó‡∏∑‡∏≠‡∏ô‡πÉ‡∏à‡∏à‡∏≥‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏™‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏°‡∏î‡πâ‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏¢‡∏≠‡∏° ‡∏°‡∏±‡∏Å‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏Ç‡∏µ‡πà‡∏Ç‡πà‡∏°‡πÄ‡∏´‡∏á ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏ô‡∏±‡∏î'
    },
    '‡∏´‡∏¥‡∏ô‡∏∞2.png': {
        name: '‡∏´‡∏¥‡∏ô‡∏∞ (Tough)',
        innerText: 'Defilement',
        number:'7',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏•‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏Å‡∏û‡∏£‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏£‡∏¥‡∏¢‡∏ò‡∏£‡∏£‡∏° ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏î‡πÉ‡∏ä‡πâ',
        description:'‡πÑ‡∏û‡πà‡∏´‡∏¥‡∏ô‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏¥‡∏î‡∏®‡∏µ‡∏•‡∏ò‡∏£‡∏£‡∏° ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠ ‡∏Ñ‡∏ß‡∏£‡∏™‡∏≥‡∏ô‡∏∂‡∏Å‡∏ú‡∏¥‡∏î ‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ú‡∏¥‡∏î‡πÑ‡∏õ ‡∏Å‡∏≤‡∏£‡∏ä‡∏î‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ü‡∏∑‡πâ‡∏ô‡∏ü‡∏π‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏®‡∏£‡∏µ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà',
        cardNameMeaning: '‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∂‡∏î‡∏≠‡∏±‡∏î ‡πÅ‡∏•‡∏∞ ‡∏≠‡∏±‡∏ï‡∏Ñ‡∏±‡∏î ‡∏à‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏ó‡∏≥‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏õ‡∏°‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏à‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡πÄ‡∏ó‡∏∑‡∏≠‡∏ô‡πÉ‡∏à‡∏à‡∏≥‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏™‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏°‡∏î‡πâ‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡∏†‡∏≤‡∏ß‡∏∞‡∏à‡∏≥‡∏¢‡∏≠‡∏° ‡∏°‡∏±‡∏Å‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏Ç‡∏µ‡πà‡∏Ç‡πà‡∏°‡πÄ‡∏´‡∏á ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏ô‡∏±‡∏î'
    },
    '‡∏≠‡∏£‡∏¥1.png': {
        name: '‡∏≠‡∏£‡∏¥ (Trouble)',
        innerText: 'Obstacle',
        number:'5',
        meaning:'‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å',
        description:'‡πÑ‡∏û‡πà‡∏≠‡∏£‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å‡∏•‡∏≥‡∏ö‡∏≤‡∏Å ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö ‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏ó‡πâ‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô',
        cardNameMeaning: '‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏Å‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏è‡∏¥‡∏õ‡∏±‡∏Å‡∏©‡πå‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÅ‡∏°‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡πÉ‡∏î‡πÜ ‡∏Å‡πá‡∏ï‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
    },
    '‡∏≠‡∏£‡∏¥2.png': {
        name: '‡∏≠‡∏£‡∏¥ (Trouble)',
        innerText: 'Adversary',
        number:'5',
        meaning:'‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏≠‡∏£‡∏¥‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏®‡∏±‡∏ï‡∏£‡∏π ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏à‡∏ï‡∏ô‡∏≤‡πÑ‡∏°‡πà‡∏î‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏£‡πâ‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏™‡∏ï‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏≤‡∏ç‡∏â‡∏•‡∏≤‡∏î‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á',
        cardNameMeaning: '‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏Å‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏è‡∏¥‡∏õ‡∏±‡∏Å‡∏©‡πå‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÅ‡∏°‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≠‡∏Å‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡πÉ‡∏î‡πÜ ‡∏Å‡πá‡∏ï‡∏≤‡∏° ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
    },
    '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞1.png': {
        name: '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ (Will)',
        innerText: 'Will',  
        number:'1',
        meaning:'‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡πÄ‡∏à‡∏ï‡∏à‡∏≥‡∏ô‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏≠‡∏±‡∏ï‡∏ï‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡∏ï‡∏à‡∏≥‡∏ô‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏•‡∏∏‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡πà‡∏ß‡πÅ‡∏ô‡πà‡∏Ç‡∏≠‡∏á‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏ó‡πâ‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏à‡∏ï‡∏à‡∏≥‡∏ô‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤'
    },
    '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞2.png': {
        name: '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ (Self)',
        innerText: 'Want',
        number:'1',
        meaning:'‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏ß‡∏á‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°',
        description:'‡πÑ‡∏û‡πà‡∏≠‡∏±‡∏ï‡∏ï‡∏∞‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡∏ö‡∏£‡∏£‡∏•‡∏∏‡∏™‡∏¥‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ñ‡∏£‡∏≠‡∏ö‡∏á‡∏≥‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏•‡∏†‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏∏‡∏Å‡∏Ç‡πå ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏¢‡∏Å‡πÅ‡∏¢‡∏∞‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤'
    },
    '‡∏≠‡∏±‡∏ï‡∏ï‡∏≤.png': {
        name: '‡∏≠‡∏±‡∏ï‡∏ï‡∏≤(Mind)',
        innerText: 'Reflection',
        number:'1',
        meaning: '‡∏Å‡∏≤‡∏£‡πÑ‡∏ï‡∏£‡πà‡∏ï‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏∏‡πà‡∏ô‡∏Ñ‡∏¥‡∏î ‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ô‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ',
        description: '‡πÑ‡∏û‡πà‡∏≠‡∏±‡∏ï‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏ï‡∏£‡πà‡∏ï‡∏£‡∏≠‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÜ ‡∏Ñ‡∏¥‡∏î‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤ ‡∏Å‡∏≤‡∏£‡πÑ‡∏ï‡∏£‡πà‡∏ï‡∏£‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á‡∏à‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏´‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡∏ó‡∏≥‡∏™‡∏°‡∏≤‡∏ò‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏≠‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤'
    },
    '‡∏≠‡∏±‡∏ï‡∏ï‡∏≤2.png': {
        name: '‡∏≠‡∏±‡∏ï‡∏ï‡∏≤ (Mind)',
        innerText: 'Rejection',
        number:'1',
        meaning:'‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ï‡πâ‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≤‡∏ô‡∏ó‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
        description:'‡πÑ‡∏û‡πà‡∏≠‡∏±‡∏ï‡∏ï‡∏≤‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ï‡πâ‡∏≤‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≤‡∏ô‡∏ó‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡∏Å‡πá‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡πÉ‡∏î‡∏à‡∏∂‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏≠‡∏Å‡πâ‡∏≤‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏¢‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
        cardNameMeaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏£‡∏≤'
    }
};

// Application State
let dailyCard = null;
let hasPickedToday = false;
let cardHistory = [];
let journalEntries = [];
let currentTab = 'daily';
let currentTheme = 'default';
let soundEnabled = true;
let musicEnabled = false;
let notificationsEnabled = false;
let currentMeditation = null;

// DOM Elements - will be initialized when DOM is loaded
let cardGrid;
let statusText;
let revealedCard;
let dailyCardImage;
let cardName;
let cardMeaning;
let toggleHistoryBtn;
let clearHistoryBtn;
let historyGrid;

// User Management System
let currentUser = null;
let isUserLoggedIn = false;

class UserManager {
    constructor() {
        this.currentUser = null;
        this.isLoggedIn = false;
        // Your Google OAuth 2.0 client ID (needs proper setup in Google Cloud Console)
        this.googleClientId = "167508382816-6qhne506iv67hgfuc5ksbd8qp3hk7qos.apps.googleusercontent.com";
        this.demoMode = true; // Temporarily enable demo mode until OAuth is properly configured
        this.fallbackToDemo = true; // Enable automatic fallback to demo on OAuth errors
    }

    init() {
        this.loadUserFromStorage();
        this.initSocialProviders();
    }
    
    loadUserFromStorage() {
        const savedUser = localStorage.getItem('currentUser');
        if (savedUser) {
            currentUser = JSON.parse(savedUser);
            isUserLoggedIn = true;
            this.updateUIForLoggedInUser();
            this.loadUserData();
        }
    }
    
    async initSocialProviders() {
        // Always use demo mode for now to prevent Google API errors
        console.log('üéØ Social providers initialization - Demo mode active');
        
        // Check if we have a valid Google client ID
        const hasValidClientId = this.googleClientId && 
                                this.googleClientId !== "YOUR_GOOGLE_CLIENT_ID_HERE" && 
                                this.googleClientId.includes('.apps.googleusercontent.com');
        
        // Explicitly prevent any Google API initialization in demo mode
        if (this.demoMode) {
            console.log('üõ°Ô∏è Demo mode: Skipping Google Sign-In initialization to prevent API errors');
            return; // Exit early to prevent any Google API calls
        }
        
        // Load Google Sign-In script only if we have a valid client ID and not in demo mode
        if (hasValidClientId && !this.demoMode) {
            await this.loadGoogleSignInScript();
        }
        
        // Initialize Google Sign-In only if we have a valid client ID and not in demo mode
        if (typeof google !== 'undefined' && hasValidClientId && !this.demoMode) {
            try {
                await google.accounts.id.initialize({
                    client_id: this.googleClientId,
                    callback: this.handleGoogleSignIn.bind(this),
                    auto_select: false,
                    cancel_on_tap_outside: true
                });
                
                // Also initialize the button
                google.accounts.id.renderButton(
                    document.getElementById("googleSignInButton"),
                    { 
                        theme: "filled_blue", 
                        size: "large",
                        type: "standard",
                        text: "continue_with"
                    }
                );
                
                console.log('Google Sign-In initialized successfully with client ID:', this.googleClientId);
            } catch (error) {
                console.error('Failed to initialize Google Sign-In:', error);
                this.demoMode = true;
                console.log('Switched to demo mode due to initialization error');
            }
        } else {
            console.log('Google Sign-In running in demo mode. Reasons:');
            console.log('- Google API available:', typeof google !== 'undefined');
            console.log('- Valid client ID:', hasValidClientId);
            console.log('- Demo mode:', this.demoMode);
            console.log('- Current client ID:', this.googleClientId);
        }
        
        // Initialize Facebook SDK
        if (typeof FB !== 'undefined') {
            try {
                FB.init({
                    appId: 'YOUR_FACEBOOK_APP_ID', // Replace with actual app ID
                    cookie: true,
                    xfbml: true,
                    version: 'v18.0'
                });
                console.log('Facebook SDK initialized');
            } catch (error) {
                console.error('Failed to initialize Facebook SDK:', error);
            }
        }
    }

    async loadGoogleSignInScript() {
        return new Promise((resolve, reject) => {
            if (typeof google !== 'undefined') {
                resolve();
                return;
            }
            
            const script = document.createElement('script');
            script.src = 'https://accounts.google.com/gsi/client';
            script.async = true;
            script.defer = true;
            script.onload = () => resolve();
            script.onerror = () => reject(new Error('Failed to load Google Sign-In script'));
            document.head.appendChild(script);
        });
    }
     
     async handleGoogleSignIn(response) {
        try {
            // Decode the JWT token from Google
            const userInfo = JSON.parse(atob(response.credential.split('.')[1]));
            const user = {
                id: userInfo.sub,
                name: userInfo.name,
                email: userInfo.email,
                avatar: userInfo.picture,
                provider: 'google',
                joinDate: new Date().toISOString(),
                verified: userInfo.email_verified
            };
            
            this.loginUser(user);
            showNotification(`üéâ Welcome ${user.name}! Successfully signed in with Google.`, 'success');
        } catch (error) {
            console.error('Google sign-in error:', error);
                         showNotification('‚ùå Google sign-in failed. Please try again.', 'error');
         }
     }
    
    async handleFacebookSignIn() {
        return new Promise((resolve, reject) => {
            FB.login((response) => {
                if (response.authResponse) {
                    FB.api('/me', { fields: 'name,email,picture' }, (userInfo) => {
                        const user = {
                            id: userInfo.id,
                            name: userInfo.name,
                            email: userInfo.email,
                            avatar: userInfo.picture.data.url,
                            provider: 'facebook',
                            joinDate: new Date().toISOString()
                        };
                        this.loginUser(user);
                        resolve(user);
                    });
                } else {
                    reject('Facebook login cancelled');
                }
                         }, { scope: 'email' });
         });
     }
    
    // Simulated LINE login (requires actual LINE Login setup)
    async handleLineSignIn() {
                 // This would integrate with LINE Login API
         showNotification('LINE login will be available soon!', 'info');
     }
    
    async handleEmailSignIn(email, password) {
        // Simulated email authentication
        // In production, this would connect to your backend
        try {
            const user = {
                id: 'email_' + Date.now(),
                name: email.split('@')[0],
                email: email,
                avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(email)}&background=random`,
                provider: 'email',
                joinDate: new Date().toISOString()
            };
            
            this.loginUser(user);
            return user;
                 } catch (error) {
             throw new Error('Email sign-in failed');
         }
     }
    
    async handleEmailRegister(name, email, password) {
        // Simulated registration
        try {
            const user = {
                id: 'email_' + Date.now(),
                name: name,
                email: email,
                avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(name)}&background=random`,
                provider: 'email',
                joinDate: new Date().toISOString()
            };
            
            this.loginUser(user);
            return user;
                 } catch (error) {
             throw new Error('Registration failed');
         }
     }
    
    loginUser(user) {
        currentUser = user;
        isUserLoggedIn = true;
        
        // Save to localStorage
        localStorage.setItem('currentUser', JSON.stringify(user));
        
        // Update UI
        this.updateUIForLoggedInUser();
        
        // Load user's data
        this.loadUserData();
        
        // Close login modal
        closeLoginModal();
                 
         showNotification(`Welcome back, ${user.name}!`, 'success');
     }
    
    logoutUser() {
        currentUser = null;
        isUserLoggedIn = false;
        
        // Clear localStorage
        localStorage.removeItem('currentUser');
        localStorage.removeItem(`userData_${currentUser?.id}`);
        
        // Update UI
        this.updateUIForLoggedOutUser();
                 
         showNotification('Logged out successfully', 'info');
     }
    
    updateUIForLoggedInUser() {
        const loginBtn = document.getElementById('loginBtn');
        const userProfileBtn = document.getElementById('userProfileBtn');
        
        loginBtn.style.display = 'none';
        userProfileBtn.style.display = 'block';
        
        // Update user panel
        document.getElementById('userName').textContent = currentUser.name;
        document.getElementById('userEmail').textContent = currentUser.email;
        document.getElementById('userProvider').textContent = `via ${currentUser.provider}`;
        document.getElementById('userAvatar').src = currentUser.avatar;
        
                 // Update member since
         const joinDate = new Date(currentUser.joinDate);
         document.getElementById('userMemberSince').textContent = joinDate.toLocaleDateString();
     }
    
    updateUIForLoggedOutUser() {
        const loginBtn = document.getElementById('loginBtn');
        const userProfileBtn = document.getElementById('userProfileBtn');
        
        loginBtn.style.display = 'block';
        userProfileBtn.style.display = 'none';
        
                 // Close user panel if open
         const userPanel = document.getElementById('userPanel');
         userPanel.classList.remove('open');
     }
    
    saveUserData() {
        if (!isUserLoggedIn) return;
        
        const userData = {
            cardHistory: cardHistory,
            settings: {
                language: currentLanguage,
                theme: document.body.getAttribute('data-theme') || 'default',
                soundEnabled: document.getElementById('soundToggle')?.checked,
                musicEnabled: document.getElementById('musicToggle')?.checked,
                notificationsEnabled: document.getElementById('notificationsToggle')?.checked
            },
            stats: {
                totalCards: cardHistory.length,
                daysActive: this.calculateDaysActive(),
                lastVisit: new Date().toISOString()
            }
        };
        
        localStorage.setItem(`userData_${currentUser.id}`, JSON.stringify(userData));
    }
    
    loadUserData() {
        if (!isUserLoggedIn) return;
        
        const userData = localStorage.getItem(`userData_${currentUser.id}`);
        if (userData) {
            const data = JSON.parse(userData);
            
            // Load card history
            if (data.cardHistory) {
                cardHistory = data.cardHistory;
                renderHistory();
            }
            
            // Load settings
            if (data.settings) {
                if (data.settings.language) {
                    switchLanguage(data.settings.language);
                }
                if (data.settings.theme) {
                    changeTheme(data.settings.theme);
                }
            }
            
            // Update user stats in UI
            this.updateUserStats(data.stats);
        }
    }
    
    updateUserStats(stats) {
        if (stats) {
            document.getElementById('userCardCount').textContent = stats.totalCards || cardHistory.length;
            document.getElementById('userDaysActive').textContent = stats.daysActive || this.calculateDaysActive();
        }
    }
    
    calculateDaysActive() {
        if (cardHistory.length === 0) return 0;
        
        const dates = [...new Set(cardHistory.map(card => 
            new Date(card.date).toDateString()
        ))];
        return dates.length;
    }
    
    async syncUserData() {
        if (!isUserLoggedIn) return;
        
        showNotification('Syncing data...', 'info');
        
        // Simulate sync process
        setTimeout(() => {
            this.saveUserData();
            showNotification('Data synced successfully!', 'success');
        }, 1500);
    }
    
    exportUserData() {
        if (!isUserLoggedIn) return;
        
        const userData = {
            user: currentUser,
            cardHistory: cardHistory,
            exportDate: new Date().toISOString()
        };
        
        const dataStr = JSON.stringify(userData, null, 2);
        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);
        
        const exportFileDefaultName = `fortune-cards-data-${currentUser.name.replace(/\s+/g, '-')}.json`;
        
        const linkElement = document.createElement('a');
        linkElement.setAttribute('href', dataUri);
        linkElement.setAttribute('download', exportFileDefaultName);
        linkElement.click();
        
        showNotification('Data exported successfully!', 'success');
    }
}

// Initialize UserManager instance
const userManager = new UserManager();

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    try {
        // Initialize DOM elements first
        cardGrid = document.getElementById('cardGrid');
        statusText = document.getElementById('statusText');
        revealedCard = document.getElementById('revealedCard');
        dailyCardImage = document.getElementById('dailyCardImage');
        cardName = document.getElementById('cardName');
        cardMeaning = document.getElementById('cardMeaning');
        toggleHistoryBtn = document.getElementById('toggleHistory');
        clearHistoryBtn = document.getElementById('clearHistory');
        historyGrid = document.getElementById('historyGrid');
        
        // Ensure daily-reading section is visible from start
        const dailyReadingSection = document.querySelector('.daily-reading');
        if (dailyReadingSection) {
            dailyReadingSection.style.display = 'block';
            dailyReadingSection.style.visibility = 'visible';
        }
        
        // Initialize user management first
        userManager.init();
        
        loadFromStorage();
        
        // Initialize language system
        const savedLanguage = localStorage.getItem('language') || 'th';
        currentLanguage = savedLanguage;
        document.getElementById('languageSelect').value = savedLanguage;
        document.getElementById('languageSelect').addEventListener('change', function() {
            switchLanguage(this.value);
        });
        
        // Update UI with current language
        updateUILanguage();
        updateDailyQuote();
        
        checkDailyCard();
        setupEventListeners();
        renderHistory();
        
    } catch (error) {
        console.error('Error initializing app:', error);
    }
});

// Load data from localStorage
function loadFromStorage() {
    const storedDailyCard = localStorage.getItem('dailyCard');
    const storedDate = localStorage.getItem('dailyCardDate');
    const storedHistory = localStorage.getItem('cardHistory');
    
    const today = new Date().toDateString();
    
    if (storedDate === today && storedDailyCard) {
        dailyCard = JSON.parse(storedDailyCard);
        hasPickedToday = true;
    }
    
    if (storedHistory) {
        cardHistory = JSON.parse(storedHistory);
    }
}

// Save data to localStorage (with user support)
function saveToStorage() {
    const today = new Date().toDateString();
    
    if (dailyCard) {
        localStorage.setItem('dailyCard', JSON.stringify(dailyCard));
        localStorage.setItem('dailyCardDate', today);
    }
    
    localStorage.setItem('cardHistory', JSON.stringify(cardHistory));
    
    // Also save to user account if logged in
    if (isUserLoggedIn) {
        userManager.saveUserData();
    }
}

// Check if daily card has been picked today
function checkDailyCard() {
    // Always ensure daily-reading section is visible
    const dailyReadingSection = document.querySelector('.daily-reading');
    if (dailyReadingSection) {
        dailyReadingSection.style.display = 'block';
        dailyReadingSection.style.visibility = 'visible';
    }
    
    if (dailyCard && hasPickedToday) {
        console.log('=== checkDailyCard: Showing already picked card ===');
        // Show the already picked card
        const t = translations[currentLanguage];
        statusText.textContent = currentLanguage === 'th' ? '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : 'You have already picked your daily card';
        showRevealedCard(dailyCard);
        
        // Show lucky information for already picked card
        const luckyInfo = generateLuckyInfo(dailyCard.file);
        document.getElementById('luckyColor').textContent = luckyInfo.color;
        document.getElementById('luckyNumbers').textContent = luckyInfo.numbers;
        document.getElementById('luckyTime').textContent = luckyInfo.time;
        document.getElementById('luckyInfo').style.display = 'flex';
        
        // Show star information (‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢ ‡πÅ‡∏•‡∏∞ ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å)
        const yamInfo = calculateCurrentYam();
        const cardNumber = getCardNumber(dailyCard.file);
        
        // Get star info elements
        const starElements = {
            starSevy: document.getElementById('starSevy'),
            starTaek: document.getElementById('starTaek'),
            starDay: document.getElementById('starDay'),
            starPeriod: document.getElementById('starPeriod'),
            starTime: document.getElementById('starTime'),
            starInfo: document.getElementById('starInfo'),
            starExplanation: document.getElementById('starExplanation'),
            starSevyTaekInterpretation: document.getElementById('starSevyTaekInterpretation'),
            starInterpretationContent: document.getElementById('starInterpretationContent'),
            starDetailedInterpretation: document.getElementById('starDetailedInterpretation'),
            detailedInterpretationContent: document.getElementById('detailedInterpretationContent')
        };
        
        // Display star information
        if (starElements.starSevy) starElements.starSevy.textContent = `${cardNumber} (${getStarName(cardNumber)})`;
        if (starElements.starTaek) starElements.starTaek.textContent = `${yamInfo.yamNumber} (${getStarName(yamInfo.yamNumber)})`;
        if (starElements.starDay) starElements.starDay.textContent = yamInfo.dayName;
        if (starElements.starPeriod) starElements.starPeriod.textContent = yamInfo.periodName;
        if (starElements.starTime) starElements.starTime.textContent = yamInfo.time;
        
        // Display Star Sevy-Taek interpretation from the database
        const sevyStarKey = getStarKeyFromNumber(cardNumber);
        const taekStarKey = getStarKeyFromNumber(yamInfo.yamNumber);
        const interpretationKey = `${sevyStarKey}-${taekStarKey}`;
        
        // Debug info
        console.log(`Card number: ${cardNumber}, Yam number: ${yamInfo.yamNumber}`);
        console.log(`Star combination: ${sevyStarKey}-${taekStarKey}`);
        console.log(`Looking for interpretation key: ${interpretationKey}`);
        console.log(`STAR_SEVY_TAEK_DATABASE loaded: ${typeof STAR_SEVY_TAEK_DATABASE !== 'undefined'}`);
        if (typeof STAR_SEVY_TAEK_DATABASE !== 'undefined') {
            console.log(`Total interpretations available: ${Object.keys(STAR_SEVY_TAEK_DATABASE.interpretations).length}`);
            console.log(`Key exists: ${interpretationKey in STAR_SEVY_TAEK_DATABASE.interpretations}`);
        }
        
        if (typeof STAR_SEVY_TAEK_DATABASE !== 'undefined' && STAR_SEVY_TAEK_DATABASE.interpretations[interpretationKey]) {
            const interpretation = STAR_SEVY_TAEK_DATABASE.interpretations[interpretationKey];
            console.log(`‚úÖ Found interpretation (${interpretation.length} chars)`);
            
            // First section: Basic star info
            if (starElements.starInterpretationContent) {
                starElements.starInterpretationContent.innerHTML = `
                    <div class="star-combination-daily">
                        <h6>${getStarName(cardNumber)}‡πÄ‡∏™‡∏ß‡∏¢ - ${getStarName(yamInfo.yamNumber)}‡πÅ‡∏ó‡∏£‡∏Å</h6>
                        <div class="star-details-daily">
                            <span class="sevy-detail">
                                <i class="fas fa-star text-golden"></i> 
                                ‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢: ${getStarName(cardNumber)} (${cardNumber})
                            </span>
                            <span class="taek-detail">
                                <i class="fas fa-star-half-alt text-red"></i> 
                                ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å: ${getStarName(yamInfo.yamNumber)} (${yamInfo.yamNumber})
                            </span>
                        </div>
                        <div class="star-timing-info">
                            <p><strong>‡∏¢‡∏≤‡∏°:</strong> ${yamInfo.periodName} (${yamInfo.time})</p>
                            <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${yamInfo.dayName}</p>
                        </div>
                    </div>
                `;
            }
            if (starElements.starSevyTaekInterpretation) starElements.starSevyTaekInterpretation.classList.remove('hidden');
            
            // Second section: Detailed interpretation from scripture
            if (starElements.detailedInterpretationContent) {
                starElements.detailedInterpretationContent.innerHTML = `
                    <div class="detailed-star-interpretation">
                        <div class="scripture-reference">
                            <h6><i class="fas fa-scroll"></i> ${getStarName(cardNumber)}‡πÄ‡∏™‡∏ß‡∏¢ - ${getStarName(yamInfo.yamNumber)}‡πÅ‡∏ó‡∏£‡∏Å</h6>
                        </div>
                        <div class="interpretation-text">
                            <p><strong>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡∏£‡∏≤:</strong></p>
                            <div class="scripture-content">
                                <p style="white-space: pre-wrap; line-height: 1.8;">${interpretation}</p>
                            </div>
                        </div>
                        <div class="interpretation-guidance">
                            <h6><i class="fas fa-lightbulb"></i> ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h6>
                            <p>‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡∏£‡∏≤‡πÇ‡∏ö‡∏£‡∏≤‡∏ì‡πÑ‡∏ó‡∏¢ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏Å‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</p>
                        </div>
                    </div>
                `;
            }
            if (starElements.starDetailedInterpretation) starElements.starDetailedInterpretation.classList.remove('hidden');
            
        } else {
            console.warn('Star Sevy-Taek interpretation not found for key:', interpretationKey);
            // Show a fallback message in both sections
            if (starElements.starInterpretationContent) {
                starElements.starInterpretationContent.innerHTML = `
                    <div class="star-combination-daily">
                        <h6>${getStarName(cardNumber)}‡πÄ‡∏™‡∏ß‡∏¢ - ${getStarName(yamInfo.yamNumber)}‡πÅ‡∏ó‡∏£‡∏Å</h6>
                        <div class="star-details-daily">
                            <span class="sevy-detail">
                                <i class="fas fa-star text-golden"></i> 
                                ‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢: ${getStarName(cardNumber)} (${cardNumber})
                            </span>
                            <span class="taek-detail">
                                <i class="fas fa-star-half-alt text-red"></i> 
                                ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å: ${getStarName(yamInfo.yamNumber)} (${yamInfo.yamNumber})
                            </span>
                        </div>
                    </div>
                `;
            }
            if (starElements.starSevyTaekInterpretation) starElements.starSevyTaekInterpretation.classList.remove('hidden');
            
            if (starElements.detailedInterpretationContent) {
                starElements.detailedInterpretationContent.innerHTML = `
                    <div class="detailed-star-interpretation">
                        <p><strong>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡∏µ‡πâ</strong></p>
                        <p><em>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡∏£‡∏≤</em></p>
                    </div>
                `;
            }
            if (starElements.starDetailedInterpretation) starElements.starDetailedInterpretation.classList.remove('hidden');
        }
        
        // Show star info sections
        if (starElements.starInfo) starElements.starInfo.style.display = 'flex';
        if (starElements.starExplanation) starElements.starExplanation.style.display = 'block';
        
        // Star influence result section removed per user request
        // Only showing the star interpretation sections (starSevyTaekInterpretation and starDetailedInterpretation)
        
        // Show daily affirmation
        const affirmation = generateAffirmation(dailyCard.name);
        document.getElementById('dailyAffirmation').textContent = affirmation;
        
        // Hide shuffle controls when card is already picked
        const shuffleControls = document.getElementById('shuffleControls');
        if (shuffleControls) {
            shuffleControls.style.display = 'none';
        }
        
        // Keep the card grid visible but show the already picked card
        // Don't hide the grid - just ensure no new cards can be generated
    } else {
        // Allow card selection
        hasPickedToday = false;
        const t = translations[currentLanguage];
        statusText.textContent = t.clickCard || '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
        
        // Show shuffle controls when can pick new card
        const shuffleControls = document.getElementById('shuffleControls');
        if (shuffleControls) {
            shuffleControls.style.display = 'block';
        }
        
        generateCardGrid(); // Only generate cards when allowed to pick
    }
}

// Generate the card grid - single large card
function generateCardGrid() {
    const cardFiles = Object.keys(CARD_DATA);
    cardGrid.innerHTML = '';
    
    // Ensure daily-reading section is visible
    const dailyReadingSection = document.querySelector('.daily-reading');
    if (dailyReadingSection) {
        dailyReadingSection.style.display = 'block';
        dailyReadingSection.style.visibility = 'visible';
    }
    
    // Only show pickable card if not picked today
    if (!hasPickedToday) {
        const randomCardFile = cardFiles[Math.floor(Math.random() * cardFiles.length)];
        
        const cardElement = document.createElement('div');
        cardElement.className = 'card single-card';
        cardElement.dataset.cardFile = randomCardFile;
        
        const img = document.createElement('img');
        img.src = 'Card Back.png';
        img.alt = '‡∏Å‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
        
        cardElement.appendChild(img);
        cardGrid.appendChild(cardElement);
        
        // Add click event listener only if not picked today
        if (!hasPickedToday) {
            cardElement.addEventListener('click', () => handleCardClick(randomCardFile, cardElement));
        }
    } else {
        // Show the already picked card in the grid (disabled state)
        if (dailyCard) {
            const cardElement = document.createElement('div');
            cardElement.className = 'card single-card flipped disabled';
            cardElement.dataset.cardFile = dailyCard.file;
            
            const img = document.createElement('img');
            img.src = dailyCard.file;
            img.alt = dailyCard.name;
            
            cardElement.appendChild(img);
            cardElement.style.pointerEvents = 'none';
            cardElement.style.cursor = 'default';
            cardGrid.appendChild(cardElement);
        }
    }
}

// Handle card click
function handleCardClick(cardFile, cardElement) {
    // Prevent any clicks if daily card has already been picked
    if (hasPickedToday) {
        return;
    }
    
    // But add a small delay to prevent spam clicking
    if (cardElement.classList.contains('clicking')) {
        return;
    }
    
    cardElement.classList.add('clicking');
    
    // Disable all cards
    const allCards = document.querySelectorAll('.card');
    allCards.forEach(card => {
        card.style.pointerEvents = 'none';
        card.classList.add('loading');
    });
    
    // Animate card flip
    cardElement.classList.add('flipped');
    
    setTimeout(() => {
        // Reveal the selected card
        const cardData = getCardData(cardFile);
        const selectedCard = {
            file: cardFile,
            name: cardData.name,
            meaning: cardData.meaning,
            date: new Date().toISOString()
        };
        
        dailyCard = selectedCard;
        hasPickedToday = true; // Set to true to prevent picking again today
        
        // Update the card image to show the revealed card
        const cardImg = cardElement.querySelector('img');
        cardImg.src = cardFile;
        cardImg.alt = cardData.name;
        
        // Get current yam info and star influence for history
        const currentYamInfo = calculateCurrentYam();
        const currentStarInfluence = calculateStarInfluence(cardFile);
        
        // Enhanced card data with comprehensive star influence information
        const enhancedCard = {
            ...selectedCard,
            yamInfo: {
                yamNumber: currentYamInfo.yamNumber,
                dayName: currentYamInfo.dayName,
                periodName: currentYamInfo.periodName,
                time: currentYamInfo.time,
                periodType: currentYamInfo.periodType,
                yamSequence: currentYamInfo.yamSequence,
                currentTime: currentYamInfo.currentTime,
                thaiDay: currentYamInfo.thaiDay
            },
            starInfluence: {
                yamSevy: currentStarInfluence.sevyStar, // ‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢ (from card)
                yamTaek: currentStarInfluence.taekStar, // ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å (from current time)
                sevyStarName: currentStarInfluence.sevyStarName,
                taekStarName: currentStarInfluence.taekStarName,
                influence: currentStarInfluence.influence,
                lookupKey: `${currentStarInfluence.sevyStar}-${currentStarInfluence.taekStar}`,
                detailedInfluence: getDetailedStarInfluence(currentStarInfluence.sevyStar, currentStarInfluence.taekStar)
            },
            cardNumber: getCardNumber(cardFile),
            luckyInfo: generateLuckyInfo(cardFile),
            readingTimestamp: new Date().toISOString(),
            readingContext: 'daily-card'
        };
        
        // Add enhanced card to history
        cardHistory.unshift(enhancedCard);
        
        // Keep only last 50 records (increased for multiple daily picks)
        if (cardHistory.length > 50) {
            cardHistory = cardHistory.slice(0, 50);
        }
        
        saveToStorage();
        
        const t = translations[currentLanguage];
        statusText.textContent = currentLanguage === 'th' ? '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : 'You have picked your daily card';
        
        // Hide shuffle controls after picking a card
        const shuffleControls = document.getElementById('shuffleControls');
        if (shuffleControls) {
            shuffleControls.style.display = 'none';
        }
        
        showRevealedCard(selectedCard);
        renderHistory();
        
        // Keep the card visible but disable clicking
        cardElement.classList.remove('clicking');
        
        // Disable clicking on this specific card only
        cardElement.style.pointerEvents = 'none';
        cardElement.style.cursor = 'default';
        cardElement.classList.add('disabled');
        
        // Show lucky information
        const luckyInfo = generateLuckyInfo(cardFile);
        document.getElementById('luckyColor').textContent = luckyInfo.color;
        document.getElementById('luckyNumbers').textContent = luckyInfo.numbers;
        document.getElementById('luckyTime').textContent = luckyInfo.time;
        document.getElementById('luckyInfo').style.display = 'flex';
        
        // Show star information (‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢ ‡πÅ‡∏•‡∏∞ ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å) and calculate influence
        const starInfluence = calculateStarInfluence(cardFile);
        const { sevyStar, taekStar, sevyStarName, taekStarName, influence, yamInfo } = starInfluence;
        
        // Get star info elements
        const starElements = {
            starSevy: document.getElementById('starSevy'),
            starTaek: document.getElementById('starTaek'),
            starDay: document.getElementById('starDay'),
            starPeriod: document.getElementById('starPeriod'),
            starTime: document.getElementById('starTime'),
            starInfo: document.getElementById('starInfo'),
            starExplanation: document.getElementById('starExplanation')
        };
        
        // Display star information
        if (starElements.starSevy) starElements.starSevy.textContent = `${sevyStar} (${sevyStarName})`;
        if (starElements.starTaek) starElements.starTaek.textContent = `${taekStar} (${taekStarName})`;
        if (starElements.starDay) starElements.starDay.textContent = yamInfo.dayName;
        if (starElements.starPeriod) starElements.starPeriod.textContent = yamInfo.periodName;
        if (starElements.starTime) starElements.starTime.textContent = yamInfo.time;
        
        // Show star info sections
        if (starElements.starInfo) starElements.starInfo.style.display = 'flex';
        if (starElements.starExplanation) starElements.starExplanation.style.display = 'block';
        
        // Star influence result section removed per user request
        // Only showing the star interpretation sections (starSevyTaekInterpretation and starDetailedInterpretation)
        
        // Show daily affirmation
        const affirmation = generateAffirmation(selectedCard.name);
        document.getElementById('dailyAffirmation').textContent = affirmation;
        
        // Play sound effects
        playSound('successSound');
        
        showNotification('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ', 'success');
    }, 800);
}

// Show the revealed card
function showRevealedCard(card) {
    // Ensure the daily-reading section remains visible
    const dailyReadingSection = document.querySelector('.daily-reading');
    if (dailyReadingSection) {
        dailyReadingSection.style.display = 'block';
        dailyReadingSection.style.visibility = 'visible';
    }
    
    dailyCardImage.src = card.file;
    
    // Display card name and inner text
    const cardData = getCardData(card.file);
    if (cardData) {
        cardName.innerHTML = `${cardData.name}<br><span style="font-size: 0.8em; color: #666;">${cardData.innerText}</span>`;
        cardMeaning.textContent = cardData.meaning;
        
        // Add card name meaning section
        let cardNameMeaningElement = document.getElementById('cardNameMeaning');
        if (!cardNameMeaningElement) {
            cardNameMeaningElement = document.createElement('div');
            cardNameMeaningElement.id = 'cardNameMeaning';
            cardNameMeaningElement.style.marginTop = '15px';
            cardNameMeaningElement.style.padding = '15px';
            cardNameMeaningElement.style.backgroundColor = 'rgba(255, 215, 0, 0.15)';
            cardNameMeaningElement.style.borderRadius = '10px';
            cardNameMeaningElement.style.borderLeft = '4px solid #FFD700';
            cardNameMeaningElement.style.fontWeight = 'bold';
            cardNameMeaningElement.style.color = '#2d3436';
            cardMeaning.parentNode.appendChild(cardNameMeaningElement);
        }
        cardNameMeaningElement.innerHTML = `<strong>üìñ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏û‡πà:</strong><br>${cardData.cardNameMeaning}`;
        
        // Add description section
        let descriptionElement = document.getElementById('cardDescription');
        if (!descriptionElement) {
            descriptionElement = document.createElement('div');
            descriptionElement.id = 'cardDescription';
            descriptionElement.style.marginTop = '15px';
            descriptionElement.style.padding = '15px';
            descriptionElement.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';
            descriptionElement.style.borderRadius = '10px';
            descriptionElement.style.fontStyle = 'italic';
            cardMeaning.parentNode.appendChild(descriptionElement);
        }
        descriptionElement.innerHTML = `<strong>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:</strong><br>${cardData.description}`;
        

    } else {
        cardName.textContent = card.name;
        cardMeaning.textContent = card.meaning;
    }
    
    // Set revealed card background to match the card background
    revealedCard.style.background = 'linear-gradient(135deg, #81ecec, #74b9ff)';
    
    // Keep the original card grid background since the card stays visible
    // No need to change the background as the card remains in the grid
    
    revealedCard.style.display = 'block';
    revealedCard.classList.add('success');
    
    setTimeout(() => {
        revealedCard.classList.remove('success');
        
        // Double-check the daily-reading section visibility
        const dailyReadingAfter = document.querySelector('.daily-reading');
        if (dailyReadingAfter) {
            dailyReadingAfter.style.display = 'block';
            dailyReadingAfter.style.visibility = 'visible';
        }
    }, 500);
}

// Setup event listeners
function setupEventListeners() {
    toggleHistoryBtn.addEventListener('click', toggleHistory);
    clearHistoryBtn.addEventListener('click', clearHistory);
}

// Toggle history display
function toggleHistory() {
    const isHidden = historyGrid.style.display === 'none';
    historyGrid.style.display = isHidden ? 'grid' : 'none';
    toggleHistoryBtn.textContent = isHidden ? '‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥' : '‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥';
}

// Clear history
function clearHistory() {
    if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        cardHistory = [];
        localStorage.removeItem('cardHistory');
        renderHistory();
        showNotification('‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
    }
}

// Render history
function renderHistory() {
    historyGrid.innerHTML = '';
    
    if (cardHistory.length === 0) {
        historyGrid.innerHTML = '<p style="text-align: center; color: #666; grid-column: 1 / -1;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà</p>';
        return;
    }
    
    cardHistory.forEach(card => {
        const historyItem = document.createElement('div');
        historyItem.className = 'history-item';
        
        const date = new Date(card.date);
        const dateStr = date.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        
        historyItem.innerHTML = `
            <img src="${card.file}" alt="${card.name}">
            <h4>${card.name}</h4>
            <p class="date">${dateStr}</p>
        `;
        
        historyGrid.appendChild(historyItem);
    });
}

// Show notification
function showNotification(message, type = 'info') {
    // Create notification element
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 25px;
        background: ${type === 'success' ? '#00b894' : type === 'warning' ? '#fdcb6e' : '#0984e3'};
        color: white;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        z-index: 1000;
        font-weight: 600;
        transform: translateX(100%);
        transition: transform 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // Animate in
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Remove after 3 seconds
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// Manual reset daily card function
function manualResetDailyCard() {
    const t = translations[currentLanguage];
    const confirmMessage = currentLanguage === 'th' ? 
        '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?' : 
        'Do you want to reset your daily card to pick a new one?';
        
    if (confirm(confirmMessage)) {
        hasPickedToday = false;
        dailyCard = null;
        localStorage.removeItem('dailyCard');
        localStorage.removeItem('dailyCardDate');
        
        // Ensure daily-reading section is visible after reset
        const dailyReadingSection = document.querySelector('.daily-reading');
        if (dailyReadingSection) {
            dailyReadingSection.style.display = 'block';
            dailyReadingSection.style.visibility = 'visible';
        }
        
        // Update status text with current language
        statusText.textContent = t.clickCard || '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
        revealedCard.style.display = 'none';
        document.getElementById('luckyInfo').style.display = 'none';
        
        // Hide star info sections
        const starInfo = document.getElementById('starInfo');
        const starExplanation = document.getElementById('starExplanation');
        // starInfluenceResult removed per user request
        const starSevyTaekInterpretation = document.getElementById('starSevyTaekInterpretation');
        const starDetailedInterpretation = document.getElementById('starDetailedInterpretation');
        
        if (starInfo) starInfo.style.display = 'none';
        if (starExplanation) starExplanation.style.display = 'none';
        // starInfluenceResult hiding removed per user request
        if (starSevyTaekInterpretation) starSevyTaekInterpretation.classList.add('hidden');
        if (starDetailedInterpretation) starDetailedInterpretation.classList.add('hidden');
        
        // Hide card name meaning section if it exists
        const cardNameMeaningElement = document.getElementById('cardNameMeaning');
        if (cardNameMeaningElement) {
            cardNameMeaningElement.style.display = 'none';
        }
        
        // Hide description section if it exists
        const descriptionElement = document.getElementById('cardDescription');
        if (descriptionElement) {
            descriptionElement.style.display = 'none';
        }
        
        // Show shuffle controls when resetting (THIS WAS MISSING!)
        const shuffleControls = document.getElementById('shuffleControls');
        if (shuffleControls) {
            shuffleControls.style.display = 'block';
        }
        
        // Reset shuffle state
        isDailyShuffling = false;
        dailyShuffleCount = 0;
        const shuffleBtn = document.getElementById('shuffleBtn');
        const shuffleCounter = document.getElementById('shuffleCounter');
        if (shuffleBtn) {
            shuffleBtn.disabled = false;
            shuffleBtn.classList.remove('shuffling');
            shuffleBtn.innerHTML = '<i class="fas fa-sync-alt"></i> ‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
        }
        if (shuffleCounter) {
            shuffleCounter.style.display = 'none';
        }
        
        // Reset backgrounds to default
        const cardGrid = document.getElementById('cardGrid');
        cardGrid.style.background = 'linear-gradient(135deg, #81ecec, #74b9ff)';
        revealedCard.style.background = 'linear-gradient(135deg, #81ecec, #74b9ff)';
        
        // Clear the card grid and regenerate
        cardGrid.innerHTML = '';
        
        generateCardGrid();
        
        const successMessage = currentLanguage === 'th' ? 
            '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‚ú®' : 
            'Daily card reset successfully ‚ú®';
        showNotification(successMessage, 'success');
    }
}

// Reset daily card at midnight
function resetDailyCard() {
    const now = new Date();
    const midnight = new Date();
    midnight.setHours(24, 0, 0, 0);
    
    const timeUntilMidnight = midnight.getTime() - now.getTime();
    
    setTimeout(() => {
        hasPickedToday = false;
        dailyCard = null;
        localStorage.removeItem('dailyCard');
        localStorage.removeItem('dailyCardDate');
        
        statusText.textContent = '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
        revealedCard.style.display = 'none';
        
        // Reset backgrounds to default
        const cardGrid = document.getElementById('cardGrid');
        cardGrid.style.background = 'linear-gradient(135deg, #81ecec, #74b9ff)';
        revealedCard.style.background = 'linear-gradient(135deg, #81ecec, #74b9ff)';
        
        // Clear the card grid and regenerate
        cardGrid.innerHTML = '';
        
        generateCardGrid();
        
        // Set up for next day
        resetDailyCard();
    }, timeUntilMidnight);
}

// Initialize reset timer
resetDailyCard();

// Enhanced Features Implementation

// Tab Management
function showTab(tabName) {
    // Hide all tabs
    document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // Remove active class from all nav tabs
    document.querySelectorAll('.nav-tab').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // Show selected tab
    const selectedTab = document.getElementById(tabName + 'Tab');
    if (selectedTab) {
        selectedTab.classList.add('active');
    }
    
    // Add active class to nav tab
    event.target.classList.add('active');
    
    currentTab = tabName;
    
    // Ensure daily-reading section is visible when switching to daily tab
    if (tabName === 'daily') {
        const dailyReadingSection = document.querySelector('.daily-reading');
        if (dailyReadingSection) {
            dailyReadingSection.style.display = 'block';
            dailyReadingSection.style.visibility = 'visible';
        }
    }
    
    // Load specific tab content
    if (tabName === 'analytics') {
        loadAnalytics();
    } else if (tabName === 'journal') {
        loadJournal();
        populateJournalCardSelect();
    }
}

// Settings Management
function openSettings() {
    const panel = document.getElementById('settingsPanel');
    panel.classList.add('open');
}

function closeSettings() {
    const panel = document.getElementById('settingsPanel');
    panel.classList.remove('open');
}

// Theme Management
function changeTheme(theme) {
    document.body.setAttribute('data-theme', theme);
    currentTheme = theme;
    localStorage.setItem('selectedTheme', theme);
}

// Sound Management
function playSound(soundId) {
    if (!soundEnabled) return;
    
    const sound = document.getElementById(soundId);
    if (sound && sound.src) {
        sound.currentTime = 0;
        sound.play().catch(e => {
            // Silently handle missing sound files
            console.log('Sound not available:', soundId);
        });
    }
}

// Card Shuffling Functions for Daily Reading
let isDailyShuffling = false;
let dailyShuffleCount = 0;

function shuffleCards() {
    if (isDailyShuffling || hasPickedToday) return;
    
    const shuffleBtn = document.getElementById('shuffleBtn');
    const shuffleCounter = document.getElementById('shuffleCounter');
    const shuffleCountSpan = document.getElementById('shuffleCount');
    const shuffleProgressBar = document.getElementById('shuffleProgressBar');
    const statusText = document.getElementById('statusText');
    
    isDailyShuffling = true;
    dailyShuffleCount = 0;
    
    // Disable button and show counter
    shuffleBtn.disabled = true;
    shuffleBtn.classList.add('shuffling');
    shuffleBtn.innerHTML = '<i class="fas fa-sync-alt"></i> ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà...';
    shuffleCounter.style.display = 'block';
    
    // Update status text
    statusText.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå...';
    
    function performShuffle() {
        dailyShuffleCount++;
        shuffleCountSpan.textContent = dailyShuffleCount;
        
        // Update progress bar
        const progress = (dailyShuffleCount / 9) * 100;
        shuffleProgressBar.style.width = progress + '%';
        
        // Shuffle animation for cards
        animateCardShuffle();
        
        if (dailyShuffleCount < 9) {
            setTimeout(performShuffle, 800);
        } else {
            // Shuffling complete
            setTimeout(() => {
                isDailyShuffling = false;
                shuffleBtn.disabled = false;
                shuffleBtn.classList.remove('shuffling');
                shuffleBtn.innerHTML = '<i class="fas fa-sync-alt"></i> ‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
                shuffleCounter.style.display = 'none';
                shuffleProgressBar.style.width = '0%';
                statusText.textContent = '‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏û‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏î‡∏ß‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
                
                // Show completion effect
                const cardGrid = document.getElementById('cardGrid');
                cardGrid.classList.add('glow');
                setTimeout(() => {
                    cardGrid.classList.remove('glow');
                }, 2000);
                
                // Play completion sound
                playSound('shuffle-complete');
                
            }, 1000);
        }
    }
    
    performShuffle();
}

function animateCardShuffle() {
    const cards = document.querySelectorAll('.card');
    
    cards.forEach((card, index) => {
        setTimeout(() => {
            // Random shuffle animation
            const randomX = (Math.random() - 0.5) * 20;
            const randomY = (Math.random() - 0.5) * 20;
            const randomRotate = (Math.random() - 0.5) * 10;
            
            card.style.transition = 'transform 0.3s ease';
            card.style.transform = `translate(${randomX}px, ${randomY}px) rotate(${randomRotate}deg)`;
            
            // Return to original position
            setTimeout(() => {
                card.style.transform = 'translate(0, 0) rotate(0deg)';
            }, 300);
            
        }, index * 50);
    });
}

// Three Cards Reading System
let threeCardsReading = {
    cards: {
        past: null,
        present: null,
        future: null
    },
    isActive: false
};

function initializePick3Cards() {
    // Reset any existing reading
    resetThreeCards();
    
    // Set active state for 3-card reading
    threeCardsReading.isActive = true;
    threeCardsReading.cards = {
        past: null,
        present: null,
        future: null
    };
    
    // Show the display area
    const displayArea = document.getElementById('threeCardsDisplay');
    displayArea.style.display = 'block';
    
    // Hide start button and show reset button
    const startButton = document.getElementById('pick3CardsBtn');
    const resetButton = document.getElementById('reset3CardsBtn');
    if (startButton) startButton.style.display = 'none';
    if (resetButton) resetButton.style.display = 'inline-block';
    
    // Show instruction
    const instruction = document.getElementById('pickInstruction');
    if (instruction) instruction.style.display = 'block';
    
    // Ensure all card slots are clickable
    const positions = ['pastCard', 'presentCard', 'futureCard'];
    positions.forEach(position => {
        const cardSlot = document.getElementById(position);
        if (cardSlot) {
            cardSlot.classList.add('clickable');
            cardSlot.style.pointerEvents = 'auto';
            cardSlot.style.cursor = 'pointer';
            cardSlot.onclick = function() {
                const positionName = position.replace('Card', '');
                pickCardForSpecificPosition(positionName);
            };
                 }
     });
}

// Refresh three cards history display
function refreshThreeCardsHistory() {
    console.log('Refreshing three cards history...');
    const container = document.getElementById('threeCardsHistoryContainer');
    if (container) {
        container.innerHTML = '<div style="text-align: center; padding: 20px;"><i class="fas fa-spinner fa-spin"></i> ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>';
    }
    
    setTimeout(() => {
        if (typeof loadThreeCardsHistory === 'function') {
            console.log('Using advanced loadThreeCardsHistory function');
            loadThreeCardsHistory();
        } else {
            console.log('Using fallback loadThreeCardsHistoryFallback function');
            loadThreeCardsHistoryFallback();
        }
    }, 500);
}

// Create test data for three cards history (for demonstration)
function createTestThreeCardsHistory() {
    const testEntry = {
        type: 'three-cards',
        date: new Date().toISOString(),
        readingTimestamp: new Date().toISOString(),
        readingContext: 'three-cards-manual',
        cards: {
            past: {
                file: '‡∏ò‡∏ô‡∏±‡∏á2.png',
                name: '‡∏ò‡∏ô‡∏±‡∏á2',
                meaning: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á'
            },
            present: {
                file: '‡∏Å‡∏±‡∏°‡∏°‡∏∞1.png', 
                name: '‡∏Å‡∏±‡∏°‡∏°‡∏∞1',
                meaning: '‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏≠‡∏≤‡∏ä‡∏µ‡∏û'
            },
            future: {
                file: '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞1.png',
                name: '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞1', 
                meaning: '‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'
            }
        },
        summary: '‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ô‡∏µ‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
        yamInfo: {
            yamNumber: 3,
            dayName: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
            periodName: '‡∏¢‡∏≤‡∏°‡∏ö‡πà‡∏≤‡∏¢',
            time: '14:30-16:00',
            periodType: 'afternoon'
        },
        tableData: {
            rows: [
                { position: '‡∏≠‡∏î‡∏µ‡∏ï', cardNumber: 6, values: [6, 7, 1, 2, 3, 4, 5] },
                { position: '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', cardNumber: 3, values: [3, 4, 5, 6, 7, 1, 2] },
                { position: '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï', cardNumber: 5, values: [5, 6, 7, 1, 2, 3, 4] }
            ],
            columnSums: [14, 17, 13, 9, 12, 8, 11],
            highlightedNumbers: [3]
        },
        yamInfluences: [
            {
                position: 'past',
                positionThai: '‡∏≠‡∏î‡∏µ‡∏ï',
                cardNumber: 6,
                yamSevy: 6,
                yamTaek: 3,
                strengthLevel: 4,
                category: 'positive'
            },
            {
                position: 'present', 
                positionThai: '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
                cardNumber: 3,
                yamSevy: 3,
                yamTaek: 3,
                strengthLevel: 5,
                category: 'positive'
            },
            {
                position: 'future',
                positionThai: '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï', 
                cardNumber: 5,
                yamSevy: 5,
                yamTaek: 3,
                strengthLevel: 3,
                category: 'positive'
            }
        ],
        numericalAnalysis: {
            cardNumbers: [6, 3, 5],
            yamMatches: 5,
            overallCompatibility: 'excellent'
        }
    };
    
    let existingHistory = JSON.parse(localStorage.getItem('threeCardsHistory') || '[]');
    existingHistory.unshift(testEntry);
    localStorage.setItem('threeCardsHistory', JSON.stringify(existingHistory));
    
    console.log('Test three-cards history data created');
}

function pickCardForSpecificPosition(position) {
    console.log('Attempting to pick card for position:', position, 'Active:', threeCardsReading.isActive);
    
    if (!threeCardsReading.isActive) {
        console.log('Three cards reading is not active');
        return;
    }
    
    // Check if this position already has a card
    if (threeCardsReading.cards && threeCardsReading.cards[position]) {
        // Ask user if they want to replace the card
        const t = translations[currentLanguage];
        const confirmMessage = currentLanguage === 'th' ? 
            '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?' : 
            'You have already picked a card for this position. Do you want to pick a new one?';
        
        if (!confirm(confirmMessage)) {
            return;
        }
    }
    
    // Get random card that hasn't been picked yet for other positions
    const cardFiles = Object.keys(CARD_DATA);
    const usedCards = Object.values(threeCardsReading.cards)
        .filter(card => card !== null && card.position !== position)
        .map(card => card.file);
    
    let availableCards = cardFiles.filter(card => !usedCards.includes(card));
    
    if (availableCards.length === 0) {
        availableCards = cardFiles; // Fallback if somehow all cards used
    }
    
    const randomCardFile = availableCards[Math.floor(Math.random() * availableCards.length)];
    const cardData = getCardData(randomCardFile);
    
    // Store the picked card
    const cardInfo = {
        file: randomCardFile,
        name: cardData.name,
        meaning: cardData.meaning,
        position: position
    };
    threeCardsReading.cards[position] = cardInfo;
    
    // Animate card reveal
    const cardSlot = document.getElementById(position + 'Card');
    const meaningElement = document.getElementById(position + 'Meaning');
    
    cardSlot.classList.add('revealing');
    
    setTimeout(() => {
        // Update card image
        const img = cardSlot.querySelector('img');
        img.src = randomCardFile;
        img.alt = cardData.name;
        
        // Remove clickable class and add revealed class
        cardSlot.classList.remove('clickable', 'revealing');
        cardSlot.classList.add('revealed');
        cardSlot.removeAttribute('onclick');
        
        // Hide click indicator
        const clickIndicator = cardSlot.querySelector('.click-indicator');
        if (clickIndicator) {
            clickIndicator.style.display = 'none';
        }
        
        // Update meaning
        meaningElement.textContent = cardData.meaning;
        meaningElement.classList.remove('empty');
        
        // Check if all cards are picked
        checkAllCardsPicked();
        
    }, 400);
}

function checkAllCardsPicked() {
    const { past, present, future } = threeCardsReading.cards;
    
    if (past && present && future) {
        // All cards picked, show summary after a short delay
        setTimeout(() => {
            showThreeCardsSummary();
        }, 1000);
        
        // Hide instruction
        const instruction = document.getElementById('pickInstruction');
        instruction.style.display = 'none';
    }
}

function showThreeCardsSummary() {
    const summaryElement = document.getElementById('threeCardsSummary');
    const overallReadingElement = document.getElementById('overallReading');
    
    // Generate overall reading based on the three cards
    const cardsArray = [
        threeCardsReading.cards.past,
        threeCardsReading.cards.present, 
        threeCardsReading.cards.future
    ];
    const overallReading = generateThreeCardsReading(cardsArray);
    overallReadingElement.textContent = overallReading;
    
    // Generate numerical table
    generateNumericalTable(cardsArray);
    
    // Show summary with animation
    summaryElement.style.display = 'block';
    summaryElement.style.opacity = '0';
    summaryElement.style.transform = 'translateY(20px)';
    
    setTimeout(() => {
        summaryElement.style.transition = 'all 0.5s ease';
        summaryElement.style.opacity = '1';
        summaryElement.style.transform = 'translateY(0)';
    }, 100);
}

function generateThreeCardsReading(cards) {
    if (!cards || cards.length !== 3) return '';
    
    const [past, present, future] = cards;
    
    // Create a meaningful interpretation based on the three cards
    const interpretations = [
        `‡∏à‡∏≤‡∏Å‡∏≠‡∏î‡∏µ‡∏ï‡∏ó‡∏µ‡πà ${past.name} ‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà ${present.name} ‡πÅ‡∏•‡∏∞‡∏ô‡∏≥‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ó‡∏µ‡πà ${future.name} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà`,
        
        `‡πÑ‡∏û‡πà ${past.name} ‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏™‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ ${present.name} ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ô‡∏≥‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÅ‡∏´‡πà‡∏á ${future.name}`,
        
        `‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏à‡∏≤‡∏Å ${past.name} ‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï ‡∏ú‡πà‡∏≤‡∏ô ${present.name} ‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏à‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏™‡∏π‡πà ${future.name} ‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà`,
        
        `‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á ${past.name} ‡∏à‡∏≤‡∏Å‡∏≠‡∏î‡∏µ‡∏ï‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠ ${present.name} ‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏≤‡∏á‡∏™‡∏π‡πà ${future.name} ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏≠‡∏±‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ô‡∏µ‡πâ`
    ];
    
    const selectedInterpretation = interpretations[Math.floor(Math.random() * interpretations.length)];
    
    // Add some additional guidance based on card combinations
    let guidance = ' ';
    
    // Simple guidance based on card meanings
    if (present.meaning.includes('‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô') || present.meaning.includes('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á')) {
        guidance += '‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ';
    }
    
    if (future.meaning.includes('‡πÇ‡∏≠‡∏Å‡∏≤‡∏™') || future.meaning.includes('‡∏î‡∏µ')) {
        guidance += '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏î‡∏µ‡πÜ ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà ';
    }
    
    if (past.meaning.includes('‡∏Å‡∏£‡∏£‡∏°') || past.meaning.includes('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°')) {
        guidance += '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏î‡∏µ‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡∏î‡∏µ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ ';
    }
    
    guidance += '‡∏à‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏£‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏ß‡∏Å‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à';
    
    return selectedInterpretation + guidance;
}

function saveThreeCardsReading() {
    if (!threeCardsReading.cards || !threeCardsReading.cards.past || !threeCardsReading.cards.present || !threeCardsReading.cards.future) {
        alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
        return;
    }
    
    // Get current yam info
    const yamInfo = calculateCurrentYam();
    
    // Generate numerical table data
    const cardsArray = [
        threeCardsReading.cards.past,
        threeCardsReading.cards.present, 
        threeCardsReading.cards.future
    ];
    
    // Get card numbers and generate table
    const cardNumbers = cardsArray.map(card => {
        const cardData = CARD_DATA[card.file];
        return cardData && cardData.number ? parseInt(cardData.number) : 1;
    });
    
    const tableData = [];
    cardNumbers.forEach((cardNumber, index) => {
        const row = generateCardRow(cardNumber);
        tableData.push({
            position: index === 0 ? '‡∏≠‡∏î‡∏µ‡∏ï' : index === 1 ? '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô' : '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
            cardNumber: cardNumber,
            values: row
        });
    });
    
    // Calculate column sums
    const columnSums = [];
    for (let col = 0; col < 7; col++) {
        let sum = 0;
        tableData.forEach(row => {
            sum += row.values[col];
        });
        columnSums.push(sum);
    }
    
    // Calculate comprehensive yam influences for each card
    const yamInfluences = cardsArray.map((card, index) => {
        const cardNumber = getCardNumber(card.file);
        const detailedInfluence = getDetailedStarInfluence(cardNumber, yamInfo.yamNumber);
        const position = index === 0 ? 'past' : index === 1 ? 'present' : 'future';
        
        return {
            position: position,
            positionThai: index === 0 ? '‡∏≠‡∏î‡∏µ‡∏ï' : index === 1 ? '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô' : '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï',
            cardFile: card.file,
            cardName: card.name,
            cardNumber: cardNumber,
            yamSevy: cardNumber, // ‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢ (from card)
            yamTaek: yamInfo.yamNumber, // ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å (from current time)
            sevyStarName: getStarName(cardNumber),
            taekStarName: getStarName(yamInfo.yamNumber),
            basicInfluence: detailedInfluence.basicInfluence,
            detailedInfluence: detailedInfluence,
            strengthLevel: detailedInfluence.strengthLevel,
            category: detailedInfluence.category,
            recommendations: detailedInfluence.recommendations,
            timeAnalysis: detailedInfluence.timeAnalysis
        };
    });
    
    const reading = {
        type: 'three-cards',
        date: new Date().toISOString(),
        readingTimestamp: new Date().toISOString(),
        readingContext: 'three-cards-manual',
        cards: threeCardsReading.cards,
        summary: document.getElementById('overallReading').textContent,
        yamInfo: {
            yamNumber: yamInfo.yamNumber,
            dayName: yamInfo.dayName,
            periodName: yamInfo.periodName,
            time: yamInfo.time,
            periodType: yamInfo.periodType,
            yamSequence: yamInfo.yamSequence,
            currentTime: yamInfo.currentTime,
            thaiDay: yamInfo.thaiDay
        },
        tableData: {
            rows: tableData,
            columnSums: columnSums,
            highlightedNumbers: [yamInfo.yamNumber], // Numbers that match current yam
            positionNames: [
                ['‡∏≠‡∏±‡∏ï‡∏ï‡∏∞', '‡∏´‡∏¥‡∏ô‡∏∞', '‡∏ò‡∏ô‡∏±‡∏á', '‡∏õ‡∏¥‡∏ï‡∏≤', '‡∏°‡∏≤‡∏ï‡∏≤', '‡πÇ‡∏†‡∏Ñ‡∏≤', '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤'],
                ['‡∏ï‡∏ô‡∏∏', '‡∏Å‡∏∏‡∏°‡∏†‡∏∞', '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞', '‡∏û‡∏±‡∏ô‡∏ò‡∏∏', '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞', '‡∏≠‡∏£‡∏¥', '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥'], 
                ['‡∏°‡∏£‡∏ì‡∏∞', '‡∏Ñ‡∏∏‡∏Å‡∏∞', '‡∏Å‡∏±‡∏°‡∏°‡∏∞', '‡∏•‡∏≤‡∏†‡∏∞', '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞', '‡∏ó‡∏≤‡∏™‡∏≤', '‡∏ó‡∏≤‡∏™‡∏µ']
            ]
        },
        yamInfluences: yamInfluences,
        numericalAnalysis: {
            cardNumbers: cardNumbers,
            yamMatches: columnSums.filter(sum => sum === yamInfo.yamNumber).length + 
                        tableData.reduce((count, row) => count + row.values.filter(val => val === yamInfo.yamNumber).length, 0),
            strengthAnalysis: yamInfluences.map(inf => ({
                position: inf.positionThai,
                strength: inf.strengthLevel,
                category: inf.category
            })),
            overallCompatibility: calculateOverallCompatibility(yamInfluences)
        },
        detailedAnalysis: {
            recommendations: generateThreeCardRecommendations(yamInfluences, yamInfo),
            timeWindow: generateOptimalTimeWindow(yamInfo, yamInfluences),
            futureGuidance: generateFutureGuidance(cardsArray, yamInfluences)
        }
    };
    
    // Get existing journal entries
    let journalEntries = JSON.parse(localStorage.getItem('journalEntries') || '[]');
    
    // Add new reading to journal
    journalEntries.unshift(reading);
    
    // Keep only last 100 entries
    if (journalEntries.length > 100) {
        journalEntries = journalEntries.slice(0, 100);
    }
    
    // Save to localStorage
    localStorage.setItem('journalEntries', JSON.stringify(journalEntries));
    
    // Also save to separate three-cards history
    let threeCardsHistory = JSON.parse(localStorage.getItem('threeCardsHistory') || '[]');
    threeCardsHistory.unshift(reading);
    
    // Keep only last 50 three-card readings
    if (threeCardsHistory.length > 50) {
        threeCardsHistory = threeCardsHistory.slice(0, 50);
    }
    
    localStorage.setItem('threeCardsHistory', JSON.stringify(threeCardsHistory));
    
    // Show success message
    const t = translations[currentLanguage];
    const successMessage = currentLanguage === 'th' ? 
        '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡∏° üåü' : 
        'Three-card reading saved successfully! Including table and yam data üåü';
    alert(successMessage);
    
    // Update journal tab if it exists
    if (typeof loadJournalEntries === 'function') {
        loadJournalEntries();
    }
    
    // Update separate three-cards history display if visible
    setTimeout(() => {
        if (typeof loadThreeCardsHistory === 'function') {
            loadThreeCardsHistory();
        } else {
            // Also try fallback function
            loadThreeCardsHistoryFallback();
        }
    }, 200);
}

function resetThreeCards() {
    // Reset the reading state with correct structure
    threeCardsReading = {
        cards: {
            past: null,
            present: null,
            future: null
        },
        isActive: false
    };
    
    // Hide display area
    const displayArea = document.getElementById('threeCardsDisplay');
    displayArea.style.display = 'none';
    
    // Hide summary
    const summaryElement = document.getElementById('threeCardsSummary');
    summaryElement.style.display = 'none';
    
    // Hide instruction
    const instruction = document.getElementById('pickInstruction');
    if (instruction) {
        instruction.style.display = 'none';
    }
    
    // Reset card slots
    const positions = ['pastCard', 'presentCard', 'futureCard'];
    const meanings = ['pastMeaning', 'presentMeaning', 'futureMeaning'];
    const t = translations[currentLanguage];
    const defaultTexts = currentLanguage === 'th' ? 
        ['‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏≠‡∏î‡∏µ‡∏ï', '‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', '‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï'] :
        ['Click to pick Past card', 'Click to pick Present card', 'Click to pick Future card'];
    
    positions.forEach((position, index) => {
        const cardSlot = document.getElementById(position);
        const img = cardSlot.querySelector('img');
        
        // Reset image
        img.src = 'Card Back.png';
        img.alt = `Click to pick ${position.replace('Card', '')} Card`;
        
        // Reset classes and re-enable clicking
        cardSlot.classList.remove('revealed', 'revealing');
        cardSlot.classList.add('clickable');
        cardSlot.style.pointerEvents = 'auto';
        cardSlot.style.cursor = 'pointer';
        
        // Reset meaning
        const meaningElement = document.getElementById(meanings[index]);
        if (meaningElement) {
            meaningElement.textContent = defaultTexts[index];
            meaningElement.classList.add('empty');
            meaningElement.classList.remove('filled');
        }
    });
    
    // Reset buttons
    const startButton = document.getElementById('pick3CardsBtn');
    const resetButton = document.getElementById('reset3CardsBtn');
    
    if (startButton) {
        startButton.style.display = 'inline-block';
        const t = translations[currentLanguage];
        startButton.innerHTML = `<i class="fas fa-magic"></i> ${t.pickThreeCards || '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö'}`;
    }
    
    if (resetButton) {
        resetButton.style.display = 'none';
    }
}

// Generate numerical table for 3-card reading
function generateNumericalTable(cardsArray) {
    if (!cardsArray || cardsArray.length !== 3) return;
    
    // Get card numbers
    const cardNumbers = cardsArray.map(card => {
        const cardData = CARD_DATA[card.file];
        return cardData && cardData.number ? parseInt(cardData.number) : 1;
    });
    
    console.log('Card numbers:', cardNumbers);
    
    // Generate table rows based on card numbers
    const tableRows = [];
    
    cardNumbers.forEach((cardNumber, index) => {
        const row = generateCardRow(cardNumber);
        tableRows.push({
            cardNumber: cardNumber,
            values: row,
            cardName: cardsArray[index].name,
            position: index === 0 ? '‡∏≠‡∏î‡∏µ‡∏ï' : index === 1 ? '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô' : '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï'
        });
    });
    
    // Calculate column sums
    const columnSums = [];
    for (let col = 0; col < 7; col++) {
        let sum = 0;
        tableRows.forEach(row => {
            sum += row.values[col];
        });
        columnSums.push(sum);
    }
    
    // Get current yam number for highlighting
    const yamInfo = calculateCurrentYam();
    const currentYam = yamInfo.yamNumber;
    
    // Generate HTML table
    const tableContainer = document.getElementById('numericalTableContainer');
    if (!tableContainer) return;
    
    const t = translations[currentLanguage];
    const cardLabel = currentLanguage === 'th' ? '‡πÑ‡∏û‡πà' : 'Card';
    const sumLabel = currentLanguage === 'th' ? '‡∏£‡∏ß‡∏°' : 'Sum';
    
    // Thai fortune-telling position names for each column
    const positionNames = [
        ['‡∏≠‡∏±‡∏ï‡∏ï‡∏∞', '‡∏´‡∏¥‡∏ô‡∏∞', '‡∏ò‡∏ô‡∏±‡∏á', '‡∏õ‡∏¥‡∏ï‡∏≤', '‡∏°‡∏≤‡∏ï‡∏≤', '‡πÇ‡∏†‡∏Ñ‡∏≤', '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤'],
        ['‡∏ï‡∏ô‡∏∏', '‡∏Å‡∏∏‡∏°‡∏†‡∏∞', '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞', '‡∏û‡∏±‡∏ô‡∏ò‡∏∏', '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞', '‡∏≠‡∏£‡∏¥', '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥'], 
        ['‡∏°‡∏£‡∏ì‡∏∞', '‡∏Ñ‡∏∏‡∏Å‡∏∞', '‡∏Å‡∏±‡∏°‡∏°‡∏∞', '‡∏•‡∏≤‡∏†‡∏∞', '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞', '‡∏ó‡∏≤‡∏™‡∏≤', '‡∏ó‡∏≤‡∏™‡∏µ']
    ];
    
    let tableHTML = `
        <table class="numerical-table">
            <tbody>
    `;
    
    // Add card rows
    tableRows.forEach((row, rowIndex) => {
        tableHTML += `<tr class="card-row">`;
        tableHTML += `<td>${row.position}<br/><small>(${row.cardNumber})</small></td>`;
        
        row.values.forEach((value, colIndex) => {
            const isYamHighlight = value === currentYam;
            const highlightClass = isYamHighlight ? 'yam-highlight' : '';
            const positionName = positionNames[rowIndex] ? positionNames[rowIndex][colIndex] : '';
            tableHTML += `<td class="${highlightClass}">
                <div class="cell-number">${value}</div>
                <div class="cell-position">${positionName}</div>
            </td>`;
        });
        
        tableHTML += `</tr>`;
    });
    
    // Add separator line
    tableHTML += `<tr><td colspan="8" style="border: none; padding: 5px; background: #f0f0f0;"></td></tr>`;
    
    // Add sum row
    tableHTML += `<tr class="sum-row">`;
    tableHTML += `<td>${sumLabel}</td>`;
    
    columnSums.forEach(sum => {
        const isYamHighlight = sum === currentYam;
        const highlightClass = isYamHighlight ? 'yam-highlight' : '';
        tableHTML += `<td class="${highlightClass}">
            <div class="cell-number">${sum}</div>
        </td>`;
    });
    
    tableHTML += `</tr>`;
    tableHTML += `
            </tbody>
        </table>
    `;
    
    // Add yam information
    tableHTML += `
        <div class="yam-info-display">
            <strong>${t.currentYam}: ${currentYam}</strong> (${yamInfo.dayName}, ${yamInfo.time})<br/>
            <small>${t.yamHighlightNote}</small>
        </div>
    `;
    
    tableContainer.innerHTML = tableHTML;
}

// Generate a row of 7 numbers based on card number
function generateCardRow(cardNumber) {
    // Ensure card number is between 1-7
    cardNumber = Math.max(1, Math.min(7, cardNumber));
    
    const row = [];
    
    // Pattern based on the user's example:
    // Card 7: 7, 6, 5, 4, 3, 2, 1 (descending)
    // Card 4: 4, 5, 6, 7, 1, 2, 3 (ascending with wrap)
    // Card 1: 1, 2, 3, 4, 5, 6, 7 (ascending)
    
    // Determine if we should use ascending or descending pattern
    // Based on the example, it seems like higher numbers go descending
    // Let's use: 7 goes descending, others go ascending
    
    if (cardNumber === 7) {
        // Descending pattern for card 7
        for (let i = 0; i < 7; i++) {
            let value = cardNumber - i;
            
            // Handle wrapping (if goes below 1, wrap to 7)
            while (value < 1) {
                value = value + 7;
            }
            
            row.push(value);
        }
    } else {
        // Ascending pattern for other cards
        for (let i = 0; i < 7; i++) {
            let value = cardNumber + i;
            
            // Handle wrapping (if goes over 7, wrap to 1)
            while (value > 7) {
                value = value - 7;
            }
            
            row.push(value);
        }
    }
    
    return row;
}

// Get detailed star influence information
function getDetailedStarInfluence(sevyStar, taekStar) {
    const lookupKey = `${sevyStar}-${taekStar}`;
    const basicInfluence = STAR_INFLUENCE_TABLE[lookupKey] || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≥‡∏£‡∏≤';
    
    return {
        sevyStar: sevyStar,
        taekStar: taekStar,
        sevyStarName: getStarName(sevyStar),
        taekStarName: getStarName(taekStar),
        lookupKey: lookupKey,
        basicInfluence: basicInfluence,
        strengthLevel: calculateInfluenceStrength(sevyStar, taekStar),
        category: categorizeInfluence(basicInfluence),
        recommendations: generateInfluenceRecommendations(sevyStar, taekStar, basicInfluence),
        timeAnalysis: analyzeTimingInfluence(sevyStar, taekStar)
    };
}

// Calculate influence strength (1-5)
function calculateInfluenceStrength(sevyStar, taekStar) {
    // Same stars = very strong
    if (sevyStar === taekStar) return 5;
    
    // Adjacent numbers = moderate
    const diff = Math.abs(sevyStar - taekStar);
    if (diff === 1 || diff === 6) return 3; // 6 because 1-7 and 7-1 are adjacent in circular
    
    // Opposite numbers = strong contrast
    if (diff === 3 || diff === 4) return 4;
    
    // Others = moderate
    return 2;
}

// Categorize influence type
function categorizeInfluence(influence) {
    if (!influence || influence === '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≥‡∏£‡∏≤') return 'unknown';
    
    const positive = ['‡∏î‡∏µ', '‡πÄ‡∏à‡∏£‡∏¥‡∏ç', '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', '‡πÇ‡∏ä‡∏Ñ', '‡∏•‡∏≤‡¶≠', '‡∏Å‡∏≥‡πÑ‡∏£', '‡∏£‡∏∏‡πà‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á'];
    const negative = ['‡πÄ‡∏™‡∏µ‡∏¢', '‡∏Ç‡∏≤‡∏î', '‡∏•‡∏î', '‡∏´‡∏≤‡∏¢', '‡πÄ‡∏™‡∏∑‡πà‡∏≠‡∏°', '‡∏•‡∏≥‡∏ö‡∏≤‡∏Å', '‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ'];
    const neutral = ['‡∏õ‡∏Å‡∏ï‡∏¥', '‡∏Ñ‡∏á‡∏ó‡∏µ‡πà', '‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°', '‡∏™‡∏°‡∏î‡∏∏‡∏•'];
    
    const lowerInfluence = influence.toLowerCase();
    
    if (positive.some(word => lowerInfluence.includes(word))) return 'positive';
    if (negative.some(word => lowerInfluence.includes(word))) return 'negative';
    if (neutral.some(word => lowerInfluence.includes(word))) return 'neutral';
    
    return 'mixed';
}

// Generate recommendations based on star influence
function generateInfluenceRecommendations(sevyStar, taekStar, influence) {
    const recommendations = [];
    
    // Based on sevy star (card influence)
    const sevyAdvice = {
        1: "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",
        2: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå",
        3: "‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à",
        4: "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£",
        5: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏Å‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á",
        6: "‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô",
        7: "‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
    };
    
    recommendations.push(sevyAdvice[sevyStar] || "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏ç‡∏≤‡∏ì‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à");
    
    // Based on taek star (time influence)
    const taekAdvice = {
        1: "‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà",
        2: "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå",
        3: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô",
        4: "‡∏î‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏à‡∏≤",
        5: "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£",
        6: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô",
        7: "‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç"
    };
    
    recommendations.push(taekAdvice[taekStar] || "‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ");
    
    return recommendations;
}

// Analyze timing influence
function analyzeTimingInfluence(sevyStar, taekStar) {
    const analysis = {
        compatibility: 'moderate',
        timing: 'neutral',
        advice: '‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏ç‡∏≤‡∏ì‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à'
    };
    
    // Same numbers = very compatible
    if (sevyStar === taekStar) {
        analysis.compatibility = 'excellent';
        analysis.timing = 'perfect';
        analysis.advice = '‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏°‡∏≤‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÑ‡∏û‡πà';
    }
    // Adjacent numbers = good compatibility
    else if (Math.abs(sevyStar - taekStar) <= 1 || Math.abs(sevyStar - taekStar) >= 6) {
        analysis.compatibility = 'good';
        analysis.timing = 'favorable';
        analysis.advice = '‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
    }
    // Opposite numbers = challenging but potentially powerful
    else if (Math.abs(sevyStar - taekStar) >= 3 && Math.abs(sevyStar - taekStar) <= 4) {
        analysis.compatibility = 'challenging';
        analysis.timing = 'transformative';
        analysis.advice = '‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ';
    }
    
    return analysis;
}

// Calculate overall compatibility for three cards
function calculateOverallCompatibility(yamInfluences) {
    if (!yamInfluences || yamInfluences.length !== 3) return 'unknown';
    
    const totalStrength = yamInfluences.reduce((sum, inf) => sum + inf.strengthLevel, 0);
    const avgStrength = totalStrength / 3;
    
    const categories = yamInfluences.map(inf => inf.category);
    const positiveCount = categories.filter(cat => cat === 'positive').length;
    const negativeCount = categories.filter(cat => cat === 'negative').length;
    
    if (avgStrength >= 4 && positiveCount >= 2) return 'excellent';
    if (avgStrength >= 3.5 && positiveCount >= 1) return 'good';
    if (negativeCount >= 2) return 'challenging';
    return 'moderate';
}

// Generate recommendations for three-card reading
function generateThreeCardRecommendations(yamInfluences, yamInfo) {
    const recommendations = [];
    
    // Overall timing recommendation
    recommendations.push(`‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ (${yamInfo.dayName} ${yamInfo.time}) ‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏≤‡∏°${yamInfo.yamNumber} ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å‡πÑ‡∏û‡πà`);
    
    // Individual position recommendations
    yamInfluences.forEach(influence => {
        if (influence.recommendations && influence.recommendations.length > 0) {
            recommendations.push(`${influence.positionThai}: ${influence.recommendations[0]}`);
        }
    });
    
    // Overall compatibility advice
    const compatibility = calculateOverallCompatibility(yamInfluences);
    switch (compatibility) {
        case 'excellent':
            recommendations.push('‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤');
            break;
        case 'good':
            recommendations.push('‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏£‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à');
            break;
        case 'challenging':
            recommendations.push('‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏î‡∏ó‡∏ô');
            break;
        default:
            recommendations.push('‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏ç‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï');
    }
    
    return recommendations;
}

// Generate optimal time window
function generateOptimalTimeWindow(yamInfo, yamInfluences) {
    const strongInfluences = yamInfluences.filter(inf => inf.strengthLevel >= 4);
    
    if (strongInfluences.length >= 2) {
        return {
            period: 'current',
            description: `‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (${yamInfo.time}) ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏°‡∏≤‡∏Å`,
            duration: '3-7 ‡∏ß‡∏±‡∏ô',
            advice: '‡∏Ñ‡∏ß‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ'
        };
    }
    
    return {
        period: 'flexible',
        description: '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå',
        duration: '1-2 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå',
        advice: '‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ù‡πâ‡∏≤‡∏î‡∏π‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°'
    };
}

// Generate future guidance
function generateFutureGuidance(cardsArray, yamInfluences) {
    const futureCard = cardsArray[2]; // Future position
    const futureInfluence = yamInfluences[2];
    
    const guidance = {
        shortTerm: '',
        mediumTerm: '',
        longTerm: '',
        cautions: []
    };
    
    // Short term (1-3 months)
    guidance.shortTerm = `‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÉ‡∏Å‡∏•‡πâ ‡∏û‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á${futureCard.name}‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ${futureInfluence.basicInfluence}`;
    
    // Medium term (3-6 months)
    if (futureInfluence.category === 'positive') {
        guidance.mediumTerm = '‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤';
    } else if (futureInfluence.category === 'negative') {
        guidance.mediumTerm = '‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á';
    } else {
        guidance.mediumTerm = '‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß';
    }
    
    // Long term (6+ months)
    guidance.longTerm = '‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô';
    
    // Cautions
    yamInfluences.forEach(influence => {
        if (influence.category === 'negative' || influence.category === 'challenging') {
            guidance.cautions.push(`‡∏£‡∏∞‡∏ß‡∏±‡∏á${influence.positionThai}: ${influence.timeAnalysis.advice}`);
        }
    });
    
    return guidance;
}

// Get card number from CARD_DATA
function getCardNumber(cardFile) {
    // First try to get number from CARD_DATA
    const cardData = CARD_DATA[cardFile];
    if (cardData && cardData.number) {
        return parseInt(cardData.number);
    }
    
    // Fallback: Extract number from filename (e.g., "‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞1.png" -> 1, "‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞2.png" -> 2)
    const match = cardFile.match(/(\d+)/);
    if (match) {
        return parseInt(match[1]);
    }
    
    // If no number found, use first character code % 7 + 1 as fallback
    const firstChar = cardFile.charCodeAt(0);
    return (firstChar % 7) + 1;
}

// Lucky Information Generator
function generateLuckyInfo(cardFile) {
    const colors = ['‡πÅ‡∏î‡∏á', '‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß', '‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á', '‡∏°‡πà‡∏ß‡∏á', '‡∏ä‡∏°‡∏û‡∏π', '‡∏™‡πâ‡∏°'];
    const numbers = Array.from({length: 3}, () => Math.floor(Math.random() * 99) + 1);
    const times = ['06:00-09:00', '09:00-12:00', '12:00-15:00', '15:00-18:00', '18:00-21:00'];
    
    return {
        color: colors[Math.floor(Math.random() * colors.length)],
        numbers: numbers.join(', '),
        time: times[Math.floor(Math.random() * times.length)]
    };
}

// Daily Affirmations

function generateAffirmation(cardName) {
    const affirmations = {
        '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞': '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå',
        '‡∏Å‡∏±‡∏°‡∏°‡∏∞': '‡∏â‡∏±‡∏ô‡∏ó‡∏≥‡πÅ‡∏ï‡πà‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏î‡∏µ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤',
        '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á': '‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô',
        '‡∏ç‡∏≤‡∏ï‡∏¥': '‡∏â‡∏±‡∏ô‡∏•‡πâ‡∏≠‡∏°‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà',
        '‡∏ï‡∏ô‡∏∏': '‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏°‡∏î‡∏∏‡∏•',
        '‡∏ó‡∏≤‡∏ô‡∏±‡∏á': '‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡∏ô‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤',
        '‡∏ò‡∏ô‡∏±‡∏á': '‡∏â‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏°‡πà‡πÄ‡∏´‡∏•‡πá‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏î‡∏µ‡πÜ',
        '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏â‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô',
        '‡∏õ‡∏¥‡∏ï‡∏≤': '‡∏â‡∏±‡∏ô‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏≥‡∏•‡∏∂‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏á‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©',
        'default': '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà‡πÜ'
    };
    
    for (const key in affirmations) {
        if (cardName.includes(key)) {
            return affirmations[key];
        }
    }
    
    return affirmations.default;
}

// Star Influence Lookup Table (‡∏ï‡∏≥‡∏£‡∏≤‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å)
const STAR_INFLUENCE_TABLE = {
    // ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå‡πÄ‡∏™‡∏ß‡∏¢ (Sun) = 1
    '1-1': '‡∏£‡πâ‡∏≠‡∏ô‡∏£‡∏ô ‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡∏°‡πà',
    '1-2': '‡πÄ‡∏î‡∏∑‡∏≠‡∏î‡∏£‡πâ‡∏≠‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ',
    '1-3': '‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö',
    '1-4': '‡∏ö‡∏£‡∏£‡∏•‡∏∏‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡πÄ‡∏à‡∏£‡∏à‡∏≤',
    '1-5': '‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏à‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
    '1-6': '‡∏ñ‡∏π‡∏Å‡πÄ‡∏ö‡∏µ‡∏¢‡∏î‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô',
    '1-7': '‡∏ñ‡∏π‡∏Å‡∏´‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á ‡πÅ‡∏•‡∏∞ ‡πÇ‡∏¢‡∏ô‡πÇ‡∏ó‡∏©‡∏°‡∏≤‡πÉ‡∏´‡πâ',
    
    // ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏™‡∏ß‡∏¢ (Moon) = 2
    '2-1': '‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏π‡πà‡∏´‡∏π ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ñ‡∏π‡∏Å‡∏´‡∏•‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏≥',
    '2-2': '‡∏°‡∏±‡∏Å‡πÄ‡∏à‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á',
    '2-3': '‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡πà‡∏á‡πÄ‡∏•‡πá‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏¥‡∏©‡∏¢‡∏≤',
    '2-4': '‡∏°‡∏¥‡∏ï‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏∞',
    '2-5': '‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏∞‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ö‡∏∏‡∏ç‡∏Ñ‡∏∏‡∏ì',
    '2-6': '‡∏™‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏£‡∏Å‡∏û‡∏ö',
    '2-7': '‡∏ó‡∏≠‡∏î‡∏ó‡∏¥‡πâ‡∏á‡∏†‡∏≤‡∏£‡∏∞',
    
    // ‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£‡πÄ‡∏™‡∏ß‡∏¢ (Mars) = 3
    '3-1': '‡∏ñ‡∏π‡∏Å‡∏Ç‡∏±‡∏ö‡πÑ‡∏•‡πà ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏†‡∏≤‡∏û',
    '3-2': '‡∏ñ‡∏π‡∏Å‡∏ä‡∏±‡∏Å‡∏ä‡∏ß‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡πâ‡∏≠‡∏¢‡∏ï‡∏≤‡∏°',
    '3-3': '‡∏•‡∏∏‡πà‡∏°‡∏´‡∏•‡∏á‡∏ó‡∏∞‡∏ô‡∏á‡∏ï‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏ï‡∏ô',
    '3-4': '‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ú‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á‡∏†‡∏≤‡∏£‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô',
    '3-5': '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏î‡∏µ ‡∏ü‡πâ‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏ü‡πâ‡∏≠‡∏á',
    '3-6': '‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à',
    '3-7': '‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡πà‡∏á‡πÄ‡∏•‡πá‡∏á ‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÉ‡∏´‡πâ‡πÇ‡∏ó‡∏© ‡∏à‡∏≠‡∏á‡πÄ‡∏ß‡∏£ ‡∏≠‡∏≤‡∏Ü‡∏≤‡∏ï',
    
    // ‡∏û‡∏∏‡∏ò‡πÄ‡∏™‡∏ß‡∏¢ (Mercury) = 4
    '4-1': '‡∏™‡∏£‡∏£‡∏´‡∏≤‡∏ß‡πà‡∏≤‡∏à‡πâ‡∏≤‡∏á ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
    '4-2': '‡∏ñ‡∏π‡∏Å‡∏ú‡∏•‡∏±‡∏Å‡∏†‡∏≤‡∏£‡∏∞‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà‡∏ï‡∏ô',
    '4-3': '‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏µ‡∏Ñ‡∏ô‡∏´‡∏°‡∏±‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏õ‡∏£‡∏¥‡∏ß‡∏ï‡∏≤ ‡πÇ‡∏Å‡∏´‡∏Å‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏°',
    '4-4': '‡πÑ‡∏î‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏°‡∏≤‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏á',
    '4-5': '‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏ï‡πâ‡∏ô ‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠ ‡∏ï‡∏¥‡∏î‡∏≠‡∏≤‡∏°‡∏¥‡∏™‡∏™‡∏¥‡∏ô',
    '4-6': '‡∏ñ‡∏π‡∏Å‡∏õ‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏™‡∏µ‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå',
    '4-7': '‡πÄ‡∏Å‡∏¥‡∏î‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢ ‡πÑ‡∏Ç‡πâ‡πÄ‡∏à‡πá‡∏ö ‡πÄ‡∏™‡∏µ‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡∏∑‡πà‡∏ô',
    
    // ‡∏û‡∏§‡∏´‡∏±‡∏™‡πÄ‡∏™‡∏ß‡∏¢ (Jupiter) = 5
    '5-1': '‡∏°‡∏µ‡∏•‡∏≤‡∏†‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß',
    '5-2': '‡∏°‡∏±‡∏Å‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏π‡πà',
    '5-3': '‡∏°‡∏µ‡∏Ñ‡∏î‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ü‡πâ‡∏≠‡∏á',
    '5-4': '‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡∏´‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≤‡∏à‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£',
    '5-5': '‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏¢‡∏∑‡πà‡∏ô‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà',
    '5-6': '‡∏à‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ú‡∏•‡∏±‡∏Å‡∏î‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á ‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏±‡∏Å‡∏î‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏¢‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡∏±‡πâ‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ô‡πâ‡∏≥‡πÉ‡∏à‡∏°‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô ‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô',
    '5-7': '‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏π‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏ô‡∏∂‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏π‡∏Å‡∏à‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏Å‡πá‡∏à‡∏∞‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏ñ‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏ï‡πà‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏ñ‡πâ‡∏≤‡∏ö‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏†‡∏≤‡∏û‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏∏‡πà‡∏ô‡πÄ‡∏ä‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡πá‡πÑ‡∏î‡πâ',
    
    // ‡∏®‡∏∏‡∏Å‡∏£‡πå‡πÄ‡∏™‡∏ß‡∏¢ (Venus) = 6
    '6-1': '‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
    '6-2': '‡∏û‡∏ö‡πÄ‡∏à‡∏≠‡∏Ñ‡∏ô‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏à‡∏≤‡∏Å‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°',
    '6-3': '‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡πÇ‡∏¢‡∏Å‡∏¢‡πâ‡∏≤‡∏¢ ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏†‡∏±‡∏¢',
    '6-4': '‡∏ñ‡∏π‡∏Å‡∏Å‡∏î‡∏î‡∏±‡∏ô‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¥‡∏™‡∏£‡∏∞‡∏†‡∏≤‡∏û',
    '6-5': '‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á‡∏ú‡∏¥‡∏î‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏±‡∏Å‡∏Å‡∏±‡∏ô',
    '6-6': '‡∏°‡∏µ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥ ‡πÑ‡∏î‡πâ‡∏°‡∏£‡∏î‡∏Å',
    '6-7': '‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡πÅ‡∏¢‡∏Å',
    
    // ‡πÄ‡∏™‡∏≤‡∏£‡πå‡πÄ‡∏™‡∏ß‡∏¢ (Saturn) = 7
    '7-1': '‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡∏´‡πà‡∏≤‡∏á',
    '7-2': '‡∏û‡∏•‡∏±‡∏î‡∏û‡∏£‡∏≤‡∏Å‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢',
    '7-3': '‡∏ñ‡∏π‡∏Å‡∏Å‡∏µ‡∏î‡∏Å‡∏±‡∏ô‡∏Ç‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏á‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏¥‡∏™‡∏£‡∏∞',
    '7-4': '‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏£‡∏Å‡πÅ‡∏ã‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°',
    '7-5': '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏≥‡∏Ñ‡∏≤‡∏ç',
    '7-6': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
    '7-7': '‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£‡∏´‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏£‡∏¢‡∏®'
};

// Convert star number to star name
function getStarName(starNumber) {
    const starNames = {
        1: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå',
        2: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', 
        3: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£',
        4: '‡∏û‡∏∏‡∏ò',
        5: '‡∏û‡∏§‡∏´‡∏±‡∏™',
        6: '‡∏®‡∏∏‡∏Å‡∏£‡πå',
        7: '‡πÄ‡∏™‡∏≤‡∏£‡πå'
    };
    return starNames[starNumber] || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö';
}

// Test functions for debugging (can be called from browser console)
function testYamCalculation() {
    console.log('üß™ Testing Yam Calculation:');
    const result = calculateCurrentYam();
    console.table(result);
    return result;
}

function testStarInfluence(cardFile = '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞1.png') {
    console.log('üß™ Testing Star Influence for:', cardFile);
    const result = calculateStarInfluence(cardFile);
    console.table(result);
    return result;
}

function testCardNumbers() {
    console.log('üß™ Testing Card Numbers:');
    const testCards = ['‡∏≠‡∏±‡∏ï‡∏ï‡∏∞1.png', '‡∏´‡∏¥‡∏ô‡∏∞2.png', '‡∏ò‡∏ô‡∏±‡∏á3.png', '‡∏õ‡∏¥‡∏ï‡∏≤4.png', '‡∏°‡∏≤‡∏ï‡∏≤5.png', '‡∏•‡∏≤‡∏†‡∏∞6.png', '‡∏™‡∏±‡∏Å‡∏Å‡∏∞7.png'];
    testCards.forEach(card => {
        const number = getCardNumber(card);
        console.log(`${card} -> ${number}`);
    });
}

function testDifferentTimes() {
    console.log('üß™ Testing different times:');
    const testTimes = [
        { hour: 7, minute: 30, desc: 'Morning' },
        { hour: 12, minute: 0, desc: 'Noon' },
        { hour: 15, minute: 45, desc: 'Afternoon' },
        { hour: 19, minute: 15, desc: 'Evening' },
        { hour: 23, minute: 30, desc: 'Late Night' },
        { hour: 2, minute: 30, desc: 'Early Morning' }
    ];
    
    testTimes.forEach(test => {
        // Mock the current time
        const mockDate = new Date();
        mockDate.setHours(test.hour, test.minute, 0);
        
        console.log(`\n‚è∞ ${test.desc} (${test.hour.toString().padStart(2,'0')}:${test.minute.toString().padStart(2,'0')}):`);
        
        // Calculate manually for this time
        const currentTime = test.hour + (test.minute / 60);
        const thaiDay = mockDate.getDay() + 1;
        
        console.log(`   Current time decimal: ${currentTime.toFixed(2)}`);
        console.log(`   Thai day: ${thaiDay}`);
    });
}

// Global debug function - call debugStarSystem() in browser console
window.debugStarSystem = function() {
    console.clear();
    console.log('üåü ===========================================');
    console.log('üåü DEBUGGING STAR INFLUENCE SYSTEM');
    console.log('üåü ===========================================');
    
    testYamCalculation();
    console.log('');
    testCardNumbers();
    console.log('');
    testStarInfluence();
    console.log('');
    testDifferentTimes();
    
    console.log('üåü ===========================================');
    console.log('üåü To test with specific card, use:');
    console.log('üåü testStarInfluence("your-card-file.png")');
    console.log('üåü ===========================================');
};

// Calculate current Yam (‡∏¢‡∏≤‡∏°) based on Thai traditional time system
function calculateCurrentYam() {
    const now = new Date();
    const currentDay = now.getDay(); // 0=Sunday, 1=Monday, etc.
    const currentHour = now.getHours();
    const currentMinute = now.getMinutes();
    const currentTime = currentHour + (currentMinute / 60); // Convert to decimal hour
    
    // Convert JavaScript day (0-6) to Thai day (1-7)
    const thaiDay = currentDay + 1;
    
    // Define base Yam sequences
    const dayYamSequence = [1, 6, 4, 2, 7, 5, 3]; // ‡∏¢‡∏≤‡∏°‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô
    const nightYamSequence = [1, 5, 2, 6, 3, 7, 4]; // ‡∏¢‡∏≤‡∏°‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô
    
    // Adjust sequence based on current day
    function adjustSequenceForDay(sequence, day) {
        const dayIndex = day - 1; // Convert to 0-based index
        const adjustedSequence = [];
        
        for (let i = 0; i < sequence.length; i++) {
            let adjustedNumber = sequence[i] + dayIndex;
            // Wrap around if exceeds 7
            while (adjustedNumber > 7) {
                adjustedNumber = adjustedNumber - 7;
            }
            while (adjustedNumber < 1) {
                adjustedNumber = adjustedNumber + 7;
            }
            adjustedSequence.push(adjustedNumber);
        }
        
        return adjustedSequence;
    }
    
    // Determine if it's day or night time
    let yamSequence;
    let periodType;
    let periodIndex;
    
    if (currentTime >= 6 && currentTime < 18) {
        // Day time (06:00 - 18:00)
        yamSequence = adjustSequenceForDay(dayYamSequence, thaiDay);
        periodType = '‡∏¢‡∏≤‡∏°‡∏Å‡∏•‡∏≤‡∏á‡∏ß‡∏±‡∏ô';
        periodIndex = Math.floor((currentTime - 6) / 1.5);
        periodIndex = Math.max(0, Math.min(7, periodIndex));
    } else {
        // Night time (18:00 - 06:00)
        yamSequence = adjustSequenceForDay(nightYamSequence, thaiDay);
        periodType = '‡∏¢‡∏≤‡∏°‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô';
        
        if (currentTime >= 18) {
            // Evening/night (18:00 - 24:00) - periods 0-3
            periodIndex = Math.floor((currentTime - 18) / 1.5);
        } else {
            // Early morning (00:00 - 06:00) - periods 4-7
            periodIndex = Math.floor(currentTime / 1.5) + 4;
        }
        periodIndex = Math.max(0, Math.min(7, periodIndex));
    }
    
    // Get current Yam number (ensure we have a valid number)
    const yamNumber = yamSequence[periodIndex] || 1;
    
    // Helper function to format time
    function formatTime(hour) {
        const h = Math.floor(hour);
        const m = Math.round((hour % 1) * 60);
        return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}`;
    }
    
    // Generate time ranges for display
    let timeRanges = [];
    if (currentTime >= 6 && currentTime < 18) {
        // Day time ranges (06:00 - 18:00)
        for (let i = 0; i < 8; i++) {
            const startHour = 6 + (i * 1.5);
            const endHour = Math.min(6 + ((i + 1) * 1.5), 18);
            const startTime = formatTime(startHour);
            const endTime = formatTime(endHour);
            timeRanges.push(`${startTime}-${endTime}`);
        }
    } else {
        // Night time ranges (18:00 - 06:00)
        for (let i = 0; i < 8; i++) {
            let startHour = 18 + (i * 1.5);
            let endHour = 18 + ((i + 1) * 1.5);
            
            if (endHour <= 24) {
                // Same day
                timeRanges.push(`${formatTime(startHour)}-${formatTime(endHour)}`);
            } else {
                // Crosses midnight
                if (startHour < 24) {
                    timeRanges.push(`${formatTime(startHour)}-00:00`);
                } else {
                    startHour -= 24;
                    endHour -= 24;
                    timeRanges.push(`${formatTime(startHour)}-${formatTime(endHour)}`);
                }
            }
        }
    }
    
    // Thai day names
    const thaiDayNames = {
        1: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå',
        2: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
        3: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£',
        4: '‡∏û‡∏∏‡∏ò',
        5: '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ',
        6: '‡∏®‡∏∏‡∏Å‡∏£‡πå',
        7: '‡πÄ‡∏™‡∏≤‡∏£‡πå'
    };
    
    // Debug logging
    console.log('üïê ‡∏¢‡∏≤‡∏° Debug:', {
        currentTime: `${currentHour.toString().padStart(2, '0')}:${currentMinute.toString().padStart(2, '0')}`,
        currentDecimal: currentTime,
        thaiDay: thaiDay,
        dayName: thaiDayNames[thaiDay],
        periodType: periodType,
        periodIndex: periodIndex,
        yamSequence: yamSequence,
        yamNumber: yamNumber,
        timeRange: timeRanges[periodIndex]
    });
    
    return {
        yamNumber: yamNumber,
        periodType: periodType,
        periodIndex: periodIndex,
        time: timeRanges[periodIndex] || `${formatTime(currentTime)}-${formatTime(currentTime + 1.5)}`,
        dayName: thaiDayNames[thaiDay],
        periodName: `${periodType} ‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà ${periodIndex + 1}`,
        currentTime: currentTime,
        thaiDay: thaiDay,
        yamSequence: yamSequence
    };
}

// Calculate star influence between selected card and current time
function calculateStarInfluence(cardFile) {
    console.log('üåü Starting star influence calculation for:', cardFile);
    
    // Get current yam info
    const yamInfo = calculateCurrentYam();
    console.log('üïê Yam info:', yamInfo);
    
    // Get card number
    const cardNumber = getCardNumber(cardFile);
    console.log('üé¥ Card number:', cardNumber);
    
    // Validate inputs
    if (!cardNumber || cardNumber < 1 || cardNumber > 7) {
        console.error('‚ùå Invalid card number:', cardNumber);
        return {
            sevyStar: cardNumber || 1,
            taekStar: 1,
            sevyStarName: '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö',
            taekStarName: '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö',
            influence: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ - ‡πÄ‡∏•‡∏Ç‡πÑ‡∏û‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
            yamInfo
        };
    }
    
    if (!yamInfo || !yamInfo.yamNumber || yamInfo.yamNumber < 1 || yamInfo.yamNumber > 7) {
        console.error('‚ùå Invalid yam info:', yamInfo);
        return {
            sevyStar: cardNumber,
            taekStar: 1,
            sevyStarName: getStarName(cardNumber),
            taekStarName: '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö',
            influence: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
            yamInfo
        };
    }
    
    // Get star numbers
    const sevyStar = cardNumber; // ‡∏î‡∏≤‡∏ß‡πÄ‡∏™‡∏ß‡∏¢ (from card)
    const taekStar = yamInfo.yamNumber; // ‡∏î‡∏≤‡∏ß‡πÅ‡∏ó‡∏£‡∏Å (from current time)
    
    // Create lookup key
    const lookupKey = `${sevyStar}-${taekStar}`;
    const influence = STAR_INFLUENCE_TABLE[lookupKey];
    
    // Get star names  
    const sevyStarName = getStarName(sevyStar);
    const taekStarName = getStarName(taekStar);
    
    console.log('üåü Star influence calculation result:', {
        cardFile,
        cardNumber,
        sevyStar,
        taekStar,
        sevyStarName,
        taekStarName,
        lookupKey,
        influence: influence || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≥‡∏£‡∏≤',
        yamInfo: {
            yamNumber: yamInfo.yamNumber,
            periodType: yamInfo.periodType,
            time: yamInfo.time
        }
    });
    
    return {
        sevyStar,
        taekStar,
        sevyStarName,
        taekStarName,
        influence: influence || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≥‡∏£‡∏≤',
        yamInfo
    };
}

// Card Sharing
function shareCard() {
    if (!dailyCard) return;
    
    const shareData = {
        title: '‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á',
        text: `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏â‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÑ‡∏û‡πà ${dailyCard.name}: ${dailyCard.meaning}`,
        url: window.location.href
    };
    
    if (navigator.share) {
        navigator.share(shareData);
    } else {
        // Fallback for browsers that don't support Web Share API
        const text = `${shareData.title}\n${shareData.text}\n${shareData.url}`;
        navigator.clipboard.writeText(text).then(() => {
            showNotification('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß', 'success');
        });
    }
}

// Text-to-Speech
function readAloud() {
    if (!dailyCard) return;
    
    const text = `‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ${dailyCard.name}. ${dailyCard.meaning}`;
    
    if ('speechSynthesis' in window) {
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'th-TH';
        utterance.rate = 0.8;
        speechSynthesis.speak(utterance);
    }
}

// Journal Management
function saveToJournal() {
    if (!dailyCard) return;
    
    const today = new Date().toISOString().split('T')[0];
    const entry = {
        id: Date.now(),
        date: today,
        card: dailyCard,
        mood: 'happy',
        notes: `‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÑ‡∏û‡πà ${dailyCard.name} - ${dailyCard.meaning}`
    };
    
    journalEntries.unshift(entry);
    localStorage.setItem('journalEntries', JSON.stringify(journalEntries));
    
    showNotification('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß', 'success');
    
    if (currentTab === 'journal') {
        loadJournal();
    }
}

// Card Spreads
let currentSpread = null;
function startSpread(type) {
    const spreadTypes = {
        'davidstar': {
            title: '‡πÄ‡∏î‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå - ‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤',
            cards: 7,
            description: '‡πÑ‡∏û‡πà 7 ‡πÉ‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏î‡∏≤‡∏ß‡∏´‡∏Å‡πÅ‡∏â‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏ô 7 ‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏°: ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á',
            layout: 'star'
        }
    };
    
    const spread = spreadTypes[type];
    if (!spread) return;
    
    currentSpread = spread;
    
    // David Star special shuffling interface
    if (spread.layout === 'star') {
        startDavidStarShuffle();
    }
}



// David Star Shuffling System
let davidStarCards = [];
let davidStarPosition = 0;
let shuffledDeck = [];
let isShuffling = false;

const starPositionNames = [
    '‡∏ò‡∏ô‡∏±‡∏á - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡∏ß (‡∏à‡∏∏‡∏î‡∏ö‡∏ô)',
    '‡∏ç‡∏≤‡∏ï‡∏¥ - ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß (‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô)', 
    '‡∏ô‡∏≤‡∏ß‡∏±‡∏á - ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)',
    '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á - ‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏≤‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏†‡∏£‡∏£‡∏¢‡∏≤ (‡∏à‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏á)',
    '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á - ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á)',
    '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á (‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô)',
    '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ - ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô (‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á)'
];

function startDavidStarShuffle() {
    davidStarCards = [];
    davidStarPosition = 0;
    shuffledDeck = [...Object.keys(CARD_DATA)];
    
    showDavidStarPickInterface();
}

function shuffleDeck(times = 7) {
    isShuffling = true;
    updateShuffleDisplay();
    
    let shuffleCount = 0;
    const shuffleInterval = setInterval(() => {
        // Fisher-Yates shuffle algorithm
        for (let i = shuffledDeck.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]];
        }
        
        shuffleCount++;
        updateShuffleDisplay(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà... ${shuffleCount}/${times}`);
        
        if (shuffleCount >= times) {
            clearInterval(shuffleInterval);
            isShuffling = false;
            showCardPickOptions();
        }
    }, 300);
}

function showDavidStarPickInterface() {
    const resultDiv = document.getElementById('spreadResult');
    const titleDiv = document.getElementById('spreadTitle');
    const cardsDiv = document.getElementById('spreadCards');
    const interpretationDiv = document.getElementById('spreadInterpretation');
    
    titleDiv.textContent = `‡∏î‡∏≤‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå - ${starPositionNames[davidStarPosition]}`;
    
    cardsDiv.innerHTML = `
        <div class="david-star-shuffle-info">
            <h4>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${starPositionNames[davidStarPosition]}</h4>
            <p>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà ${davidStarPosition + 1} ‡∏à‡∏≤‡∏Å 7</p>
            <div class="shuffle-status" id="shuffleStatus">
                <button class="btn primary" onclick="autoPickDavidStarCard()" ${isShuffling ? 'disabled' : ''} style="font-size: 18px; padding: 15px 30px;">
                    <i class="fas fa-magic"></i> ‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
                </button>
                <p style="margin-top: 10px; color: #666; font-size: 14px;">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
            </div>
            <div class="card-pick-area" id="cardPickArea" style="display: none;">
                <!-- Card options will appear here after shuffling -->
            </div>
        </div>
    `;
    
    interpretationDiv.innerHTML = `
        <div class="david-star-progress">
            <h4>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤</h4>
            <div class="progress-cards">
                ${davidStarCards.map((card, index) => `
                    <div class="progress-card completed">
                        <div class="card-mini">
                            <img src="${card}" alt="${CARD_DATA[card].name}">
                        </div>
                        <p>${starPositionNames[index]}</p>
                    </div>
                `).join('')}
                <div class="progress-card current">
                    <div class="card-mini">
                        <img src="Card Back.png" alt="Current Position">
                    </div>
                    <p>${starPositionNames[davidStarPosition]}</p>
                </div>
                ${Array.from({length: 6 - davidStarPosition}, (_, index) => `
                    <div class="progress-card pending">
                        <div class="card-mini">
                            <img src="Card Back.png" alt="Pending">
                        </div>
                        <p>${starPositionNames[davidStarPosition + index + 1]}</p>
                    </div>
                `).join('')}
            </div>
        </div>
    `;
    
    resultDiv.style.display = 'block';
    resultDiv.scrollIntoView({ behavior: 'smooth' });
}

function updateShuffleDisplay(message = '‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà') {
    const shuffleStatus = document.getElementById('shuffleStatus');
    if (shuffleStatus) {
        if (isShuffling) {
            shuffleStatus.innerHTML = `
                <div class="shuffling-animation">
                    <i class="fas fa-sync fa-spin"></i> ${message}
                </div>
            `;
        } else {
            shuffleStatus.innerHTML = `
                <button class="btn primary" onclick="autoPickDavidStarCard()" ${isShuffling ? 'disabled' : ''} style="font-size: 18px; padding: 15px 30px;">
                    <i class="fas fa-magic"></i> ‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
                </button>
                <p style="margin-top: 10px; color: #666; font-size: 14px;">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
            `;
        }
    }
}

function showCardPickOptions() {
    const cardPickArea = document.getElementById('cardPickArea');
    
    cardPickArea.innerHTML = `
        <h4>‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</h4>
        <div style="text-align: center; padding: 20px;">
            <button class="btn primary" onclick="autoPickDavidStarCard()" style="font-size: 18px; padding: 15px 30px;">
                <i class="fas fa-magic"></i> ‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
            </button>
            <p style="margin-top: 15px; color: #666;">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</p>
        </div>
    `;
    
    cardPickArea.style.display = 'block';
}

// Auto pick function with 9-time shuffle and enhanced animations
function autoPickDavidStarCard() {
    const cardPickArea = document.getElementById('cardPickArea');
    
    // Show enhanced shuffling animation with round indicators
    cardPickArea.innerHTML = `
        <div class="david-star-shuffle-progress">
            <div style="font-size: 24px; margin-bottom: 20px;">
                <i class="fas fa-sync fa-spin" style="color: #ffd700;"></i>
            </div>
            <h4>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏±‡∏ö‡πÑ‡∏û‡πà 9 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á...</h4>
            <div class="shuffle-round-indicator" id="shuffleRounds">
                ${Array.from({length: 9}, (_, i) => `<div class="shuffle-round" data-round="${i}"></div>`).join('')}
            </div>
            <div id="shuffleProgress" style="margin: 20px 0;">
                <div style="background: rgba(255,255,255,0.2); border-radius: 10px; height: 12px;">
                    <div id="shuffleProgressBar" style="background: linear-gradient(90deg, #ffd700, #ff9f43); height: 100%; border-radius: 10px; width: 0%; transition: width 0.5s;"></div>
                </div>
                <p id="shuffleCount" style="margin-top: 10px; color: #ffd700; font-weight: 600;">0 / 9</p>
            </div>
            <p style="color: #a0a0a0; font-size: 14px;">‡πÑ‡∏û‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ${getPositionName(davidStarPosition)}</p>
        </div>
    `;

    // Add shake animation to the current position if cards are already laid out
    const existingLayout = document.querySelector('.david-star-layout');
    if (existingLayout) {
        const positionClasses = [
            'star-top', 'star-top-right', 'star-bottom-right', 
            'star-bottom', 'star-bottom-left', 'star-top-left', 'star-center'
        ];
        const currentPositionCard = existingLayout.querySelector(`.${positionClasses[davidStarPosition]}`);
        if (currentPositionCard) {
            currentPositionCard.classList.add('shuffling');
        }
    }
    
    // Perform 9 shuffles with enhanced animation
    let shuffleCount = 0;
    const shuffleInterval = setInterval(() => {
        // Mark current round
        const currentRound = document.querySelector(`[data-round="${shuffleCount}"]`);
        if (currentRound) {
            currentRound.classList.add('current');
        }
        
        // Fisher-Yates shuffle algorithm
        for (let i = shuffledDeck.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]];
        }
        
        shuffleCount++;
        const progress = (shuffleCount / 9) * 100;
        
        // Update progress
        document.getElementById('shuffleProgressBar').style.width = progress + '%';
        document.getElementById('shuffleCount').textContent = `${shuffleCount} / 9`;
        
        // Mark completed rounds
        const completedRound = document.querySelector(`[data-round="${shuffleCount - 1}"]`);
        if (completedRound) {
            completedRound.classList.remove('current');
            completedRound.classList.add('completed');
        }
        
        if (shuffleCount >= 9) {
            clearInterval(shuffleInterval);
            
            // Remove shake animation
            if (existingLayout) {
                const currentPositionCard = existingLayout.querySelector('.shuffling');
                if (currentPositionCard) {
                    currentPositionCard.classList.remove('shuffling');
                }
            }
            
            // Auto select a card after shuffling
            setTimeout(() => {
                autoSelectCard();
            }, 500);
        }
    }, 400); // Slightly slower for better visual effect
}

// Helper function to get position name in Thai
function getPositionName(position) {
    const positionNames = [
        '‡∏ò‡∏ô‡∏±‡∏á (‡∏à‡∏∏‡∏î‡∏ö‡∏ô)', '‡∏ç‡∏≤‡∏ï‡∏¥ (‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô)', '‡∏ô‡∏≤‡∏ß‡∏±‡∏á (‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)',
        '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á (‡∏à‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏á)', '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á (‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á)', '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ (‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô)', '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ (‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á)'
    ];
    return positionNames[position] || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á';
}

function autoSelectCard() {
    // Randomly select a card from the shuffled deck
    const randomIndex = Math.floor(Math.random() * shuffledDeck.length);
    const selectedCard = shuffledDeck[randomIndex];
    
    davidStarCards.push(selectedCard);
    
    // Remove selected card from deck
    shuffledDeck.splice(randomIndex, 1);
    
    // Show selected card briefly
    showSelectedCard(selectedCard);
    
    setTimeout(() => {
        davidStarPosition++;
        
        if (davidStarPosition >= 7) {
            // All cards selected, show final star layout
            displaySpreadResult(currentSpread, davidStarCards);
        } else {
            // Continue to next position
            showDavidStarPickInterface();
        }
    }, 2000);
}

function pickDavidStarCard(cardIndex) {
    // Get the shuffled card
    const selectedCard = shuffledDeck[cardIndex];
    davidStarCards.push(selectedCard);
    
    // Remove selected card from deck
    shuffledDeck.splice(cardIndex, 1);
    
    // Show selected card briefly
    showSelectedCard(selectedCard);
    
    setTimeout(() => {
        davidStarPosition++;
        
        if (davidStarPosition >= 7) {
            // All cards selected, show final star layout
            displaySpreadResult(currentSpread, davidStarCards);
        } else {
            // Continue to next position
            showDavidStarPickInterface();
        }
    }, 2000);
}

function showSelectedCard(cardFile) {
    const cardPickArea = document.getElementById('cardPickArea');
    cardPickArea.innerHTML = `
        <div class="selected-card-reveal">
            <h4>‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h4>
            <div class="revealed-card">
                <img src="${cardFile}" alt="${CARD_DATA[cardFile].name}">
                <h5>${CARD_DATA[cardFile].name}</h5>
                <p>${CARD_DATA[cardFile].meaning}</p>
            </div>
            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...</p>
        </div>
    `;
}

function displaySpreadResult(spread, cards) {
    const resultDiv = document.getElementById('spreadResult');
    const titleDiv = document.getElementById('spreadTitle');
    const cardsDiv = document.getElementById('spreadCards');
    const interpretationDiv = document.getElementById('spreadInterpretation');
    
    titleDiv.textContent = spread.title;
    
    cardsDiv.innerHTML = '';
    
    // Special handling for David Star layout
    if (spread.layout === 'star') {
        displayDavidStarLayout(cardsDiv, cards);
        interpretationDiv.innerHTML = generateDavidStarInterpretation(cards);
    } else {
        cards.forEach((cardFile, index) => {
            const cardElement = document.createElement('div');
            cardElement.className = 'card';
            cardElement.innerHTML = `<img src="${cardFile}" alt="${CARD_DATA[cardFile].name}">`;
            cardsDiv.appendChild(cardElement);
        });
        
        interpretationDiv.innerHTML = `
            <h4>‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°</h4>
            <p>${spread.description}</p>
            ${cards.map((cardFile, index) => `
                <div style="margin: 15px 0;">
                    <strong>‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà ${index + 1}: ${CARD_DATA[cardFile].name}</strong><br>
                    ${CARD_DATA[cardFile].meaning}
                </div>
            `).join('')}
        `;
    }
    
    resultDiv.style.display = 'block';
    resultDiv.scrollIntoView({ behavior: 'smooth' });
}

function displayDavidStarLayout(container, cards) {
    container.className = 'david-star-layout';
    
    const starPositions = [
        'star-top',
        'star-top-right', 
        'star-bottom-right',
        'star-bottom',
        'star-bottom-left',
        'star-top-left',
        'star-center'
    ];

    const positionNames = [
        '‡∏ò‡∏ô‡∏±‡∏á (‡∏à‡∏∏‡∏î‡∏ö‡∏ô)',
        '‡∏ç‡∏≤‡∏ï‡∏¥ (‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô)', 
        '‡∏ô‡∏≤‡∏ß‡∏±‡∏á (‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)',
        '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á (‡∏à‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏á)',
        '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á (‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á)',
        '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ (‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô)',
        '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ (‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á)'
    ];

    const positionMeanings = [
        '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏ê‡∏≤‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡∏ß ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢‡πÄ‡∏Å‡πà‡∏≤‡πÜ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ',
        '‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
        '‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        '‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏≤‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏†‡∏£‡∏£‡∏¢‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î',
        '‡∏ó‡∏µ‡πà‡πÜ‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ó‡∏µ‡πà‡πÜ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
        '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏°‡∏¥‡∏ï‡∏£‡∏™‡∏´‡∏≤‡∏¢ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£ ‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß',
        '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ô‡∏µ‡πâ'
    ];
    
    cards.forEach((cardFile, index) => {
        const cardElement = document.createElement('div');
        cardElement.className = `card ${starPositions[index]}`;
        cardElement.innerHTML = `<img src="${cardFile}" alt="${CARD_DATA[cardFile].name}">`;
        
        container.appendChild(cardElement);
    });
}

// David Star functions - tooltips removed

function generateDavidStarInterpretation(cards) {
    const positions = [
        {
            name: '‡∏ò‡∏ô‡∏±‡∏á - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡∏ß (‡∏à‡∏∏‡∏î‡∏ö‡∏ô)',
            meaning: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏ê‡∏≤‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ ‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡∏ß ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏£‡∏Ñ‡∏†‡∏±‡∏¢‡πÄ‡∏Å‡πà‡∏≤‡πÜ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ',
            card: cards[0]
        },
        {
            name: '‡∏ç‡∏≤‡∏ï‡∏¥ - ‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß (‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô)',
            meaning: '‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ç‡∏≠‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
            card: cards[1]
        },
        {
            name: '‡∏ô‡∏≤‡∏ß‡∏±‡∏á - ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á)',
            meaning: '‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏¢‡∏≤‡∏ô‡∏û‡∏≤‡∏´‡∏ô‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
            card: cards[2]
        },
        {
            name: '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á - ‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏≤‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏†‡∏£‡∏£‡∏¢‡∏≤ (‡∏à‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏á)',
            meaning: '‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á ‡∏Ñ‡∏π‡πà‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô ‡∏™‡∏≤‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏†‡∏£‡∏£‡∏¢‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î',
            card: cards[3]
        },
        {
            name: '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á - ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á)',
            meaning: '‡∏ó‡∏µ‡πà‡πÜ‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ó‡∏µ‡πà‡πÜ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
            card: cards[4]
        },
        {
            name: '‡∏™‡∏±‡∏Å‡∏Å‡∏∞ - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á (‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô)',
            meaning: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á ‡∏°‡∏¥‡∏ï‡∏£‡∏™‡∏´‡∏≤‡∏¢ ‡∏ö‡∏£‡∏¥‡∏ß‡∏≤‡∏£ ‡∏Ñ‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß',
            card: cards[5]
        },
        {
            name: '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞ - ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô (‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á)',
            meaning: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ô‡∏µ‡πâ',
            card: cards[6]
        }
    ];
    
    return `
        <div style="text-align: center; margin-bottom: 30px;">
            <h4 style="color: #ffd700; font-size: 22px; margin-bottom: 15px;">
                <i class="fas fa-star" style="margin-right: 10px;"></i>
                ‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå
                <i class="fas fa-star" style="margin-left: 10px;"></i>
            </h4>
            <div style="background: rgba(255, 215, 0, 0.1); padding: 15px; border-radius: 10px; border: 1px solid rgba(255, 215, 0, 0.3);">
                <p style="color: #e0e0e0; font-size: 16px; line-height: 1.6;">
                    üîÆ <strong>‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà:</strong> ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏î‡πâ‡∏≤‡∏ô<br>
                    ‚≠ê ‡πÑ‡∏û‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏≠‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏û‡πà‡∏£‡∏≠‡∏ö‡πÜ ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
                </p>
            </div>
        </div>
        
        <div style="margin-top: 30px; padding: 25px; background: linear-gradient(135deg, rgba(255, 215, 0, 0.1), rgba(255, 159, 67, 0.1)); border-radius: 20px; border: 2px solid rgba(255, 215, 0, 0.2);">
            <h4 style="color: #ffd700; text-align: center; margin-bottom: 20px; font-size: 18px;">
                <i class="fas fa-crown" style="margin-right: 8px;"></i>
                ‡∏™‡∏£‡∏∏‡∏õ‡∏î‡∏ß‡∏á‡∏ä‡∏∞‡∏ï‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå
            </h4>
            <div style="display: grid; grid-template-columns: auto 1fr; gap: 15px; align-items: center;">
                <div style="font-size: 40px;">üåü</div>
                <div>
                    <p style="color: #f8f9fa; font-size: 16px; line-height: 1.6; margin: 0;">
                        ‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß 7 ‡∏î‡∏ß‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡πÇ‡∏î‡∏¢‡πÑ‡∏û‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á 
                        <strong style="color: #ffd700;">"${CARD_DATA[cards[6]].name}"</strong> 
                        ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏™‡πà‡∏ß‡∏ô‡πÑ‡∏û‡πà‡∏£‡∏≠‡∏ö‡πÜ ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï 
                        ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡∏Ñ‡∏£‡∏≠‡∏á 
                        ‡∏ã‡∏∂‡πà‡∏á‡∏•‡πâ‡∏ß‡∏ô‡∏°‡∏µ‡∏≠‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏•‡∏ï‡πà‡∏≠‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                    </p>
                </div>
            </div>
        </div>

        <div style="margin-top: 25px; padding: 20px; background: rgba(255, 255, 255, 0.05); border-radius: 15px; border-left: 4px solid #ff6b6b;">
            <h5 style="color: #ff6b6b; margin-bottom: 15px; display: flex; align-items: center;">
                <i class="fas fa-lightbulb" style="margin-right: 8px;"></i>
                ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏ú‡∏•‡πÑ‡∏û‡πà
            </h5>
            <ul style="color: #d0d0d0; line-height: 1.8; margin: 0; padding-left: 20px;">
                <li><strong>‡πÑ‡∏û‡πà‡∏Å‡∏•‡∏≤‡∏á:</strong> ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πà‡∏ô‡πÅ‡∏ó‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏∞‡∏ï‡∏≤</li>
                <li><strong>‡πÑ‡∏û‡πà‡∏£‡∏≠‡∏ö‡∏ô‡∏≠‡∏Å:</strong> ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏á‡πà‡∏°‡∏∏‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏™‡∏±‡∏á‡∏Ñ‡∏°)</li>
                <li><strong>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°:</strong> ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÑ‡∏û‡πà‡∏ó‡∏±‡πâ‡∏á 7 ‡πÉ‡∏ö‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß</li>
                <li><strong>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:</strong> ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á</li>
            </ul>
        </div>

        <div style="margin-top: 30px;">
            <h4 style="color: #ffd700; text-align: center; margin-bottom: 25px; font-size: 20px;">
                <i class="fas fa-star-of-david" style="margin-right: 10px;"></i>
                ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏î‡∏ß‡∏¥‡∏î‡∏™‡∏ï‡∏≤‡∏£‡πå
            </h4>
            ${positions.map(position => `
                <div style="margin-bottom: 20px; padding: 20px; background: linear-gradient(135deg, rgba(255, 215, 0, 0.1), rgba(255, 255, 255, 0.8)); border-radius: 15px; border-left: 5px solid #ffd700;">
                    <h5 style="color: #1a1a1a; margin-bottom: 10px; font-size: 16px; font-weight: 700;">
                        ${position.name}
                    </h5>
                    <p style="color: #2c3e50; margin-bottom: 12px; font-size: 14px; line-height: 1.5;">
                        ${position.meaning}
                    </p>
                    <div style="background: rgba(255, 215, 0, 0.1); padding: 12px; border-radius: 8px;">
                        <h6 style="color: #d35400; margin: 0 0 8px 0; font-size: 14px;">
                            <i class="fas fa-magic" style="margin-right: 5px;"></i>
                            ‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: ${CARD_DATA[position.card].name}
                        </h6>
                        <p style="color: #34495e; margin: 0; font-size: 13px; line-height: 1.4;">
                            ${CARD_DATA[position.card].meaning}
                        </p>
                    </div>
                </div>
            `).join('')}
        </div>
    `;
}

// Initialize enhanced features
document.addEventListener('DOMContentLoaded', function() {
    // Load saved settings
    const savedTheme = localStorage.getItem('selectedTheme');
    if (savedTheme) {
        changeTheme(savedTheme);
        document.getElementById('themeSelect').value = savedTheme;
    }
    
    // Set initial language
    document.getElementById('languageSelect').value = currentLanguage;
    updateUILanguage(); // Apply initial language to all UI elements including 3-card section
    
    const savedJournal = localStorage.getItem('journalEntries');
    if (savedJournal) {
        journalEntries = JSON.parse(savedJournal);
    }
    
    // Setup settings event listeners
    document.getElementById('themeSelect').addEventListener('change', (e) => {
        changeTheme(e.target.value);
    });
    
    document.getElementById('languageSelect').addEventListener('change', (e) => {
        switchLanguage(e.target.value);
    });
    
    document.getElementById('soundToggle').addEventListener('change', (e) => {
        soundEnabled = e.target.checked;
    });
    
    document.getElementById('musicToggle').addEventListener('change', (e) => {
        musicEnabled = e.target.checked;
        const music = document.getElementById('backgroundMusic');
        if (musicEnabled && music.src) {
            music.play().catch(e => console.log('Background music not available'));
        } else {
            music.pause();
        }
    });
    
    // Setup journal date to today
    document.getElementById('journalDate').value = new Date().toISOString().split('T')[0];
    
    // Setup daily quote (use the new system instead)
    updateDailyQuote();
    
    // Add keyboard shortcut for reset (Ctrl+R or Cmd+R)
    document.addEventListener('keydown', (e) => {
        if ((e.ctrlKey || e.metaKey) && e.key === 'r' && e.shiftKey) {
            e.preventDefault();
            manualResetDailyCard();
        }
    });

    // Tooltips removed for simplicity
});

// Login Modal Functions
function openLoginModal() {
    const modal = document.getElementById('loginModal');
    modal.classList.add('open');
}

function closeLoginModal() {
    const modal = document.getElementById('loginModal');
    modal.classList.remove('open');
    
    // Reset forms
    document.getElementById('emailLoginForm').style.display = 'none';
    document.getElementById('registerForm').style.display = 'none';
}

function showEmailLogin() {
    document.getElementById('emailLoginForm').style.display = 'block';
    document.getElementById('registerForm').style.display = 'none';
}

function showRegisterForm() {
    document.getElementById('registerForm').style.display = 'block';
    document.getElementById('emailLoginForm').style.display = 'none';
}

// Social Login Functions
async function loginWithGoogle() {
    try {
        // Check if we have real Google OAuth setup
        const hasValidClientId = userManager.googleClientId && 
                                userManager.googleClientId !== "YOUR_GOOGLE_CLIENT_ID_HERE" && 
                                userManager.googleClientId.includes('.apps.googleusercontent.com');
        
        if (typeof google !== 'undefined' && hasValidClientId && !userManager.demoMode) {
            // Use real Google Sign-In
            google.accounts.id.prompt();
        } else {
            // Demo mode - simulate successful Google login
            console.log('Using demo Google login');
            const user = {
                id: 'google_demo_' + Date.now(),
                name: 'Demo Google User',
                email: 'demo@gmail.com',
                avatar: 'https://ui-avatars.com/api/?name=Google+User&background=4285f4&color=fff',
                provider: 'google',
                joinDate: new Date().toISOString(),
                verified: true
            };
            userManager.loginUser(user);
            showNotification('üéâ Demo Google login successful! To enable real Google OAuth, see GOOGLE_LOGIN_SETUP.md', 'success');
        }
    } catch (error) {
        console.error('Google login error:', error);
        // Fallback to demo mode on any error
        const user = {
            id: 'google_demo_' + Date.now(),
            name: 'Demo Google User',
            email: 'demo@gmail.com',
            avatar: 'https://ui-avatars.com/api/?name=Google+User&background=4285f4&color=fff',
            provider: 'google',
            joinDate: new Date().toISOString(),
            verified: true
        };
        userManager.loginUser(user);
        showNotification('üéâ Using demo Google login due to setup issue. Check console for details.', 'info');
    }
}

async function loginWithFacebook() {
    try {
        if (typeof FB !== 'undefined') {
            await userManager.handleFacebookSignIn();
        } else {
            // Fallback demo login
            const user = {
                id: 'facebook_demo_' + Date.now(),
                name: 'Demo Facebook User',
                email: 'demo@facebook.com',
                avatar: 'https://ui-avatars.com/api/?name=Facebook+User&background=1877f2&color=fff',
                provider: 'facebook',
                joinDate: new Date().toISOString()
            };
            userManager.loginUser(user);
        }
    } catch (error) {
        console.error('Facebook login error:', error);
        showNotification('Facebook login failed', 'error');
    }
}

async function loginWithLine() {
    try {
        // Demo LINE login
        const user = {
            id: 'line_demo_' + Date.now(),
            name: 'Demo LINE User',
            email: 'demo@line.me',
            avatar: 'https://ui-avatars.com/api/?name=LINE+User&background=00b900&color=fff',
            provider: 'line',
            joinDate: new Date().toISOString()
        };
        userManager.loginUser(user);
    } catch (error) {
        console.error('LINE login error:', error);
        showNotification('LINE login failed', 'error');
    }
}

async function loginWithEmail() {
    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;
    
    if (!email || !password) {
        showNotification('Please enter email and password', 'warning');
        return;
    }
    
    try {
        await userManager.handleEmailSignIn(email, password);
    } catch (error) {
        console.error('Email login error:', error);
        showNotification('Email login failed', 'error');
    }
}

async function registerWithEmail() {
    const name = document.getElementById('registerName').value;
    const email = document.getElementById('registerEmail').value;
    const password = document.getElementById('registerPassword').value;
    
    if (!name || !email || !password) {
        showNotification('Please fill in all fields', 'warning');
        return;
    }
    
    try {
        await userManager.handleEmailRegister(name, email, password);
    } catch (error) {
        console.error('Registration error:', error);
        showNotification('Registration failed', 'error');
    }
}

// User Panel Functions
function toggleUserPanel() {
    const userPanel = document.getElementById('userPanel');
    userPanel.classList.toggle('open');
}

function syncUserData() {
    userManager.syncUserData();
}

function exportUserData() {
    userManager.exportUserData();
}

function logoutUser() {
    if (confirm('Are you sure you want to logout?')) {
        userManager.logoutUser();
        toggleUserPanel();
    }
}

// Enhanced Card Interpretation Function
function getEnhancedCardInterpretation(cardData) {
    const cardName = cardData.name;
    const innerText = cardData.innerText;
    
    // Card theme interpretations based on card names
    const cardThemes = {
        '‡∏™‡∏±‡∏Å‡∏Å‡∏∞': {
            themes: ['‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á', '‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡∏¢‡πà‡∏≠‡∏á‡∏™‡∏£‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏ç', '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà', '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á'],
            context: '‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏ç‡∏≤‡∏ï‡∏¥ ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™ÿßÿ± ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡πÉ‡∏Å‡∏•‡πâ'
        },
        '‡∏ò‡∏ô‡∏±‡∏á': {
            themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á', '‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô', '‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô', '‡∏ê‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå'],
            context: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à'
        },
        '‡∏Å‡∏±‡∏°‡∏°‡∏∞': {
            themes: ['‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥', '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•', '‡∏ö‡∏∏‡∏ç‡∏Å‡∏∏‡∏®‡∏•', '‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô', '‡∏Å‡∏é‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏£‡∏£‡∏°'],
            context: '‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ'
        },
        '‡∏•‡∏≤‡∏†‡∏∞': {
            themes: ['‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö', '‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†', '‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç', '‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•'],
            context: '‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
        },
        '‡∏°‡∏≤‡∏ï‡∏≤': {
            themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å', '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤', '‡∏°‡∏≤‡∏£‡∏î‡∏≤', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô'],
            context: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏°‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÉ‡∏Ñ‡∏£‡πà'
        },
        '‡∏õ‡∏¥‡∏ï‡∏≤': {
            themes: ['‡∏≠‡∏≥‡∏ô‡∏≤‡∏à', '‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á', '‡∏ö‡∏¥‡∏î‡∏≤', '‡∏ú‡∏π‡πâ‡∏ô‡∏≥', '‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥'],
            context: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏û‡πà‡∏≠ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥'
        },
        '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞': {
            themes: ['‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô', '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï', '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á', '‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï'],
            context: '‡∏•‡∏π‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤'
        },
        '‡∏ç‡∏≤‡∏ï‡∏¥': {
            themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á', '‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô'],
            context: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏ç‡∏≤‡∏ï‡∏¥‡∏°‡∏¥‡∏ï‡∏£ ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå'
        },
        '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞': {
            themes: ['‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û', '‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠', '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô', '‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô', '‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô'],
            context: '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠'
        },
                 '‡∏≠‡∏£‡∏¥': {
             themes: ['‡∏®‡∏±‡∏ï‡∏£‡∏π', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á', '‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢', '‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ'],
             context: '‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ'
         },
         '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á': {
             themes: ['‡∏ö‡πâ‡∏≤‡∏ô', '‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á', '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß', '‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô'],
             context: '‡∏ö‡πâ‡∏≤‡∏ô ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢ ‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'
         },
         '‡∏ï‡∏ô‡∏∏': {
             themes: ['‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢', '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á', '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏ô‡πÄ‡∏≠‡∏á', '‡∏û‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢'],
             context: '‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏ô‡πÄ‡∏≠‡∏á'
         },
         '‡∏ó‡∏≤‡∏ô‡∏±‡∏á': {
             themes: ['‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤', '‡∏ö‡∏∏‡∏ç‡∏Å‡∏∏‡∏®‡∏•', '‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞'],
             context: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤'
         },
         '‡∏ó‡∏≤‡∏™‡∏≤': {
             themes: ['‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå', '‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠', '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô', '‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢'],
             context: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Ñ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
         },
         '‡∏ó‡∏≤‡∏™‡∏µ': {
             themes: ['‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô', '‡∏û‡∏•‡∏±‡∏á‡∏´‡∏ç‡∏¥‡∏á', '‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å'],
             context: '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ç‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π'
         },
         '‡∏ô‡∏≤‡∏ß‡∏±‡∏á': {
             themes: ['‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á', '‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢', '‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤', '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á', '‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏´‡∏°‡πà'],
             context: '‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏ß‡∏à'
         },
         '‡∏õ‡∏±‡∏ï‡∏ô‡∏¥': {
             themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å', '‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå', '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏Å‡∏±‡∏ô', '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'],
             context: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ñ‡∏π‡πà ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå'
         },
         '‡∏õ‡∏¥‡∏ï‡∏≤': {
             themes: ['‡∏ö‡∏¥‡∏î‡∏≤', '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à', '‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á', '‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥', '‡∏ú‡∏π‡πâ‡∏ô‡∏≥'],
             context: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏û‡πà‡∏≠ ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à'
         },
         '‡∏õ‡∏∏‡∏ï‡∏ï‡∏∞': {
             themes: ['‡∏•‡∏π‡∏Å‡∏´‡∏•‡∏≤‡∏ô', '‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á', '‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î', '‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï'],
             context: '‡∏•‡∏π‡∏Å ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á'
         },
         '‡∏û‡∏¢‡∏≤‡∏¢‡∏∞': {
             themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô', '‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏¢‡∏±‡∏ô'],
             context: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° ‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô'
         },
         '‡∏û‡∏±‡∏ô‡∏ò‡∏∏': {
             themes: ['‡πÄ‡∏ú‡πà‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå', '‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤', '‡∏°‡∏£‡∏î‡∏Å', '‡∏ï‡πâ‡∏ô‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î', '‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤'],
             context: '‡∏ä‡∏≤‡∏ï‡∏¥‡∏ï‡∏£‡∏∞‡∏Å‡∏π‡∏• ‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤ ‡∏°‡∏£‡∏î‡∏Å‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©'
         },
         '‡∏†‡∏£‡∏¥‡∏¢‡∏±‡∏á': {
             themes: ['‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏á‡∏£‡∏±‡∏Å‡∏†‡∏±‡∏Å‡∏î‡∏µ', '‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç'],
             context: '‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ñ‡∏π‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå'
         },
         '‡πÇ‡∏†‡∏Ñ‡∏≤': {
             themes: ['‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç', '‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏•‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏¥‡∏ô', '‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ö‡∏≤‡∏¢'],
             context: '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ ‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á'
         },
         '‡∏°‡∏£‡∏ì‡∏∞': {
             themes: ['‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏™‡∏¥‡πâ‡∏ô', '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á', '‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà', '‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡∏≤‡∏á', '‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà'],
             context: '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏™‡∏¥‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà'
         },
         '‡∏°‡∏±‡∏ä‡∏å‡∏¥‡∏°‡∏≤': {
             themes: ['‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡∏î‡∏µ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•'],
             context: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏• ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡∏î‡∏µ'
         },
         '‡∏°‡∏≤‡∏ï‡∏≤': {
             themes: ['‡∏°‡∏≤‡∏£‡∏î‡∏≤', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å', '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô'],
             context: '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡πÅ‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏î‡∏π ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å'
         },
         '‡∏´‡∏¥‡∏ô‡∏∞': {
             themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô', '‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏°', '‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö', '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤'],
             context: '‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô'
         },
         '‡∏≠‡∏±‡∏ï‡∏ï‡∏∞': {
             themes: ['‡∏ï‡∏±‡∏ß‡∏ï‡∏ô', '‡∏à‡∏¥‡∏ï‡πÉ‡∏à', '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á', '‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤'],
             context: '‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á'
         },
         '‡∏≠‡∏±‡∏ï‡∏ï‡∏≤': {
             themes: ['‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå', '‡∏Å‡∏≤‡∏£‡∏ï‡∏∑‡πà‡∏ô‡∏£‡∏π‡πâ', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á', '‡∏õ‡∏±‡∏ç‡∏ç‡∏≤'],
             context: '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏à‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤'
         },
         '‡∏Å‡∏î‡∏∏‡∏°‡∏†‡∏∞': {
             themes: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ö‡∏≤‡∏¢', '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç', '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï'],
             context: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á'
         }
     };
    
    // Word interpretation based on innerText
    const wordMeanings = {
        'superstar': '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ã‡∏∏‡∏õ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡∏™‡∏ï‡∏≤‡∏£‡πå ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà',
        'wealth': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏ê‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏î‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏',
        'mother': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤',
        'father': '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô',
        'friend': '‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
        'enemy': '‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢ ‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞ ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏±‡∏î‡πÅ‡∏¢‡πâ‡∏á',
        'child': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå',
        'profit': '‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ó‡∏µ‡πà‡∏î‡∏µ',
        'action': '‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô',
        'leadership': '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à',
        'bond': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à',
        'authority': '‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥ ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏á‡∏™‡πà‡∏á',
        'legacy': '‡∏°‡∏£‡∏î‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡∏á‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô',
        'effort': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏¢‡πà‡∏≠‡∏ó‡πâ‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡∏™‡∏π‡πà‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏¢‡∏±‡∏ô',
        'heritage': '‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏ô‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏Ñ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡πÉ‡∏ô‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏∑‡∏ö‡∏ó‡∏≠‡∏î',
        'companion': '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç',
        'inventory': '‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô',
        'ending': '‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡∏≤‡∏á‡∏≠‡∏î‡∏µ‡∏ï ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
        'balance': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏• ‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á',
        'gain': '‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ ‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≤‡∏î‡∏´‡∏°‡∏≤‡∏¢',
        'cooperation': '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û ‡∏û‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô',
        'recognition': '‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÉ‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏î‡∏µ',
        'humility': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ ‡∏Å‡∏≤‡∏£‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡∏ô‡πâ‡∏≠‡∏°‡∏ñ‡πà‡∏≠‡∏°‡∏ï‡∏ô',
        'challenge': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏™‡∏π‡∏à‡∏ô‡πå‡∏ï‡∏ô‡πÄ‡∏≠‡∏á',
        'self': '‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á',
        'soul': '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô',
        'growth': '‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏≤‡∏ß‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤',
                 'enlightenment': '‡∏Å‡∏≤‡∏£‡∏ï‡∏∑‡πà‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á ‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
         'treasure': '‡∏Ç‡∏∏‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á ‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏™‡∏°‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô',
         'fortune': '‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏≥‡∏£‡∏ß‡∏¢ ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
         'journey': '‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢ ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà',
         'adventure': '‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡∏Å‡πâ‡∏≤‡∏ß‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà',
         'property': '‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏ï‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà',
         'relatives': '‡∏ç‡∏≤‡∏ï‡∏¥‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î',
         'support': '‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Ñ‡∏ô‡∏´‡∏ô‡∏∏‡∏ô‡∏´‡∏•‡∏±‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß',
         'body': '‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
         'strength': '‡∏û‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏¥‡∏ï‡πÉ‡∏à ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ',
         'giving': '‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏ï‡∏ï‡∏≤‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏∏‡∏ç‡∏Å‡∏∏‡∏®‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ',
         'charity': '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ö‡∏∏‡∏ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏∑‡πâ‡∏≠‡πÄ‡∏ü‡∏∑‡πâ‡∏≠ ‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏Å‡πà‡∏ï‡∏±‡∏ß',
         'service': '‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏ó‡∏¥‡∏®‡∏ï‡∏ô',
         'loyalty': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏á‡∏£‡∏±‡∏Å‡∏†‡∏±‡∏Å‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏¢‡πå ‡∏Å‡∏≤‡∏£‡∏¢‡∏∂‡∏î‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
         'care': '‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏≤‡πÉ‡∏à‡πÉ‡∏™‡πà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡πà‡∏≠‡∏ô‡πÇ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á',
         'devotion': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∏‡∏ó‡∏¥‡∏®‡∏ï‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏™‡∏•‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç',
         'wife': '‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏ó‡πâ ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏π‡∏Å‡∏û‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á',
         'partnership': '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ï‡∏±‡∏ß ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á',
         'union': '‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á',
         'companion': '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡∏π‡πà‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô‡∏•‡∏∂‡∏Å‡∏ã‡∏∂‡πâ‡∏á',
         'faithfulness': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏á‡∏£‡∏±‡∏Å‡∏†‡∏±‡∏Å‡∏î‡∏µ‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
         'persistence': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏î‡∏ó‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡πÅ‡∏û‡πâ‡∏ï‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏™‡∏£‡∏£‡∏Ñ',
         'heritage': '‡∏°‡∏£‡∏î‡∏Å‡∏ó‡∏≤‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏Ñ‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡πÉ‡∏ô‡∏£‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡πâ‡∏≤',
         'ancestry': '‡∏ö‡∏£‡∏£‡∏û‡∏ö‡∏∏‡∏£‡∏∏‡∏©‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤ ‡∏†‡∏π‡∏°‡∏¥‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡πà‡∏≤‡∏¢‡∏ó‡∏≠‡∏î‡∏°‡∏≤',
         'inventory': '‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤',
         'enjoyment': '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏¥‡∏î‡πÄ‡∏û‡∏•‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï',
         'transformation': '‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏ä‡∏¥‡∏á',
         'moderation': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏¢‡∏Å‡∏•‡∏≤‡∏á ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏î‡∏∏‡∏•',
         'caregiver': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á',
         'learning': '‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏à‡∏ï‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏°‡πà ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏à‡∏≤‡∏Å‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
         'comfort': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô',
         'minimalist': '‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏¢‡∏∂‡∏î‡∏ï‡∏¥‡∏î',
         'productivity': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏ò‡∏£‡∏£‡∏°',
         'excellence': '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏¥‡∏®‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á ‡∏Å‡∏≤‡∏£‡∏°‡∏∏‡πà‡∏á‡∏°‡∏±‡πà‡∏ô‡∏™‡∏π‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå',
         'sanctuary': '‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡∏û‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö',
         'stability': '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏á‡∏ó‡∏ô ‡∏£‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
         'community': '‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏û‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô',
         'connection': '‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á'
     };
    
    // Get base card theme
    const baseCard = Object.keys(cardThemes).find(key => cardName.includes(key));
    const cardTheme = cardThemes[baseCard] || { themes: ['‡πÇ‡∏ä‡∏Ñ‡∏ä‡∏≤‡∏ï‡∏∞', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'], context: '‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' };
    
    // Get word meaning
    const wordKey = innerText ? innerText.toLowerCase() : '';
    const wordMeaning = wordMeanings[wordKey] || innerText;
    
    // Combine interpretations
    let enhancedDescription = cardData.description;
    
    if (wordMeaning && baseCard) {
        enhancedDescription += `\n\nüîÆ ‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°:\n‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "${innerText}" ‡∏ú‡∏™‡∏°‡∏ú‡∏™‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á${cardName} ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á${wordMeaning} ‡πÉ‡∏ô‡∏°‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á${cardTheme.context} `;
        
                 // Add specific guidance based on combination
         if (baseCard === '‡∏™‡∏±‡∏Å‡∏Å‡∏∞' && wordKey === 'superstar') {
             enhancedDescription += `‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡∏¢‡πà‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡πÉ‡∏ô‡∏ß‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ù‡∏π‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≤‡∏á‡∏à‡∏∞‡∏°‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥ ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡πÉ‡∏Å‡∏•‡πâ‡∏à‡∏∞‡∏ô‡∏≥‡πÇ‡∏ä‡∏Ñ‡∏°‡∏≤‡πÉ‡∏´‡πâ `;
         } else if (baseCard === '‡∏ò‡∏ô‡∏±‡∏á' && (wordKey === 'wealth' || wordKey === 'treasure' || wordKey === 'fortune')) {
             enhancedDescription += `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏á‡∏Ñ‡∏±‡πà‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏î‡∏µ ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏π‡∏ô `;
         } else if (baseCard === '‡∏•‡∏≤‡∏†‡∏∞' && (wordKey === 'profit' || wordKey === 'gain')) {
             enhancedDescription += `‡∏ú‡∏•‡∏Å‡∏≥‡πÑ‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡∏à‡∏∞‡∏°‡∏≤‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ó‡∏≤‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ `;
         } else if (baseCard === '‡πÄ‡∏Ñ‡∏´‡∏±‡∏á' && wordKey === 'property') {
             enhancedDescription += `‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏Ç‡∏™‡∏ö‡∏≤‡∏¢ `;
         } else if (baseCard === '‡∏ç‡∏≤‡∏ï‡∏¥' && (wordKey === 'relatives' || wordKey === 'community' || wordKey === 'connection')) {
             enhancedDescription += `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏à‡∏∞‡πÅ‡∏ô‡πà‡∏ô‡πÅ‡∏ü‡πâ‡∏ô ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ç‡∏≤‡∏ï‡∏¥‡∏°‡∏¥‡∏ï‡∏£ ‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏Å‡∏±‡∏ô‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à `;
         } else if (baseCard === '‡∏°‡∏≤‡∏ï‡∏≤' && (wordKey === 'mother' || wordKey === 'caregiver')) {
             enhancedDescription += `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏•‡∏±‡∏á‡πÉ‡∏à ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏à‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤ `;
         } else if (baseCard === '‡∏õ‡∏¥‡∏ï‡∏≤' && (wordKey === 'father' || wordKey === 'authority')) {
             enhancedDescription += `‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏≤‡∏£‡∏û ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏≥‡∏à‡∏∞‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô `;
         } else if (baseCard === '‡∏™‡∏´‡∏±‡∏ä‡∏ä‡∏∞' && (wordKey === 'friend' || wordKey === 'cooperation')) {
             enhancedDescription += `‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏∑‡∏≠‡∏à‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏°‡∏≤ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏•‡∏á‡∏ï‡∏±‡∏ß ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô `;
         } else if (baseCard === '‡∏≠‡∏£‡∏¥' && (wordKey === 'enemy' || wordKey === 'challenge')) {
             enhancedDescription += `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏à‡∏∞‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ `;
         }
        
        enhancedDescription += `‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á${cardTheme.context} ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏û‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á${cardTheme.themes.join(', ')} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`;
    }
    
    return enhancedDescription;
}

// Card Modal Functionality
function openCardModal(cardFile, cardName = '', cardMeaning = '') {
    const modal = document.getElementById('cardModal');
    const modalImage = document.getElementById('cardModalImage');
    const modalTitle = document.getElementById('cardModalTitle');
    const modalInnerText = document.getElementById('cardModalInnerText');
    const modalMeaning = document.getElementById('cardModalMeaning');
    const modalDescription = document.getElementById('cardModalDescription');
    
    // Get card data from CARD_DATA
    const cardData = getCardData(cardFile);
    
    if (cardData) {
        modalTitle.textContent = cardData.name;
        modalInnerText.textContent = cardData.innerText || '';
        modalMeaning.textContent = cardData.meaning;
        
        // Build enhanced description with card name meaning
        let enhancedDescription = '';
        
        // Add card name meaning if available
        if (cardData.cardNameMeaning) {
            enhancedDescription += `<div style="margin-bottom: 20px; padding: 15px; background: rgba(255, 215, 0, 0.15); border-radius: 10px; border-left: 4px solid #FFD700;">
                <strong>üìñ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏û‡πà:</strong><br>${cardData.cardNameMeaning}
            </div>`;
        }
        
        // Add enhanced interpretation
        const enhancedInterpretation = getEnhancedCardInterpretation(cardData);
        enhancedDescription += enhancedInterpretation;
        
        modalDescription.innerHTML = enhancedDescription.replace(/\n/g, '<br>');
    } else {
        // Fallback data if card not found
        modalTitle.textContent = cardName || '‡πÑ‡∏û‡πà‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß';
        modalInnerText.textContent = '';
        modalMeaning.textContent = cardMeaning || '‡πÑ‡∏û‡πà‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï';
        modalDescription.textContent = cardMeaning || '‡πÑ‡∏û‡πà‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï';
    }
    
    modalImage.src = cardFile;
    modalImage.alt = modalTitle.textContent;
    
    // Open modal with animation
    modal.style.display = 'flex';
    setTimeout(() => {
        modal.classList.add('open');
    }, 10);
    
    // Play sound effect
    playSound('cardFlipSound');
}

function closeCardModal() {
    const modal = document.getElementById('cardModal');
    modal.classList.remove('open');
    
    setTimeout(() => {
        modal.style.display = 'none';
    }, 300);
}

// Add click event to all cards for modal opening
function addCardModalListeners() {
    // Listen for card clicks in the main daily grid
    document.addEventListener('click', function(e) {
        const card = e.target.closest('.card');
        if (!card) return;
        
        const img = card.querySelector('img');
        if (!img) return;
        
        // Decode URL-encoded filename to match CARD_DATA keys
        const cardFile = decodeURIComponent(img.src.split('/').pop());
        
        // Only open modal if the card is revealed (has actual card image, not back)
        if (cardFile !== 'Card Back.png' && !cardFile.includes('Card Back')) {
            e.preventDefault();
            e.stopPropagation();
            
            // Don't open modal during card selection for daily reading
            if (hasPickedToday || card.classList.contains('flipped') || card.classList.contains('disabled')) {
                openCardModal(cardFile);
            }
        }
    });
    
    // Listen for history item clicks
    document.addEventListener('click', function(e) {
        const historyItem = e.target.closest('.history-item');
        if (!historyItem) return;
        
        const img = historyItem.querySelector('img');
        const title = historyItem.querySelector('h4');
        
        if (img && title) {
            e.preventDefault();
            e.stopPropagation();
            
            // Decode URL-encoded filename to match CARD_DATA keys
            const cardFile = decodeURIComponent(img.src.split('/').pop());
            const cardData = getCardData(cardFile);
            
            openCardModal(cardFile, title.textContent, cardData ? cardData.description || cardData.meaning : '');
        }
    });
    
    // Listen for spread cards clicks
    document.addEventListener('click', function(e) {
        const spreadCard = e.target.closest('.spread-cards .card');
        if (!spreadCard) return;
        
        const img = spreadCard.querySelector('img');
        if (!img) return;
        
        // Decode URL-encoded filename to match CARD_DATA keys
        const cardFile = decodeURIComponent(img.src.split('/').pop());
        
        // Only open modal if the card is revealed
        if (cardFile !== 'Card Back.png' && !cardFile.includes('Card Back')) {
            e.preventDefault();
            e.stopPropagation();
            openCardModal(cardFile);
        }
    });
    
    // Listen for journal entry card clicks
    document.addEventListener('click', function(e) {
        const journalCard = e.target.closest('.journal-entry img');
        if (!journalCard) return;
        
        e.preventDefault();
        e.stopPropagation();
        
        // Decode URL-encoded filename to match CARD_DATA keys
        const cardFile = decodeURIComponent(journalCard.src.split('/').pop());
        openCardModal(cardFile);
    });
    
    // Listen for meditation card clicks
    document.addEventListener('click', function(e) {
        const meditationCard = e.target.closest('#meditationCardImage');
        if (!meditationCard) return;
        
        e.preventDefault();
        e.stopPropagation();
        
        // Decode URL-encoded filename to match CARD_DATA keys
        const cardFile = decodeURIComponent(meditationCard.src.split('/').pop());
        openCardModal(cardFile);
    });
}

// Close modal when clicking outside the content
document.addEventListener('click', function(e) {
    const modal = document.getElementById('cardModal');
    if (e.target === modal) {
        closeCardModal();
    }
});

// Close modal with Escape key
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        const modal = document.getElementById('cardModal');
        if (modal.classList.contains('open')) {
            closeCardModal();
        }
    }
});

// Initialize card modal listeners when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    addCardModalListeners();
    
    // Debug: Check if we have three cards history data
    const threeCardsHistory = JSON.parse(localStorage.getItem('threeCardsHistory') || '[]');
    console.log('Three Cards History entries:', threeCardsHistory.length);
    if (threeCardsHistory.length > 0) {
        console.log('Latest entry:', threeCardsHistory[0]);
    }
    
    // If no test data exists, create some for demonstration
    if (threeCardsHistory.length === 0 && localStorage.getItem('createTestData') !== 'false') {
        console.log('Creating test three-cards history data...');
        createTestThreeCardsHistory();
    }
});

// Journal Section Management
function toggleJournalSection() {
    const journalSection = document.getElementById('journalSection');
    if (journalSection.style.display === 'none' || journalSection.style.display === '') {
        journalSection.style.display = 'block';
        setTimeout(() => {
            journalSection.classList.add('show');
        }, 10);
        
        // Load initial data
        switchJournalTab('all');
    } else {
        journalSection.classList.remove('show');
        setTimeout(() => {
            journalSection.style.display = 'none';
        }, 300);
    }
}

// Switch between journal tabs
function switchJournalTab(tabName) {
    // Hide all tab contents
    const tabContents = document.querySelectorAll('.journal-tab-content');
    tabContents.forEach(content => {
        content.classList.remove('active');
    });
    
    // Remove active class from all tab buttons
    const tabButtons = document.querySelectorAll('.journal-tab-btn');
    tabButtons.forEach(btn => {
        btn.classList.remove('active');
    });
    
    // Show selected tab content
    let activeContent;
    let activeButton;
    
    switch (tabName) {
        case 'all':
            activeContent = document.getElementById('allJournalContent');
            activeButton = document.querySelector('.journal-tab-btn[onclick*="all"]');
            if (typeof loadJournal === 'function') {
                loadJournal();
            }
            break;
        case 'daily':
            activeContent = document.getElementById('dailyJournalContent');
            activeButton = document.querySelector('.journal-tab-btn[onclick*="daily"]');
            loadDailyJournalHistory();
            break;
        case 'three-cards':
            activeContent = document.getElementById('threeCardsJournalContent');
            activeButton = document.querySelector('.journal-tab-btn[onclick*="three-cards"]');
            // Try to load three cards history
            setTimeout(() => {
                if (typeof loadThreeCardsHistory === 'function') {
                    loadThreeCardsHistory();
                } else {
                    // Fallback: load manually if function not available yet
                    loadThreeCardsHistoryFallback();
                }
            }, 100);
            break;
    }
    
    if (activeContent) {
        activeContent.classList.add('active');
    }
    if (activeButton) {
        activeButton.classList.add('active');
    }
}

// Load daily journal history (filtered for single cards only)
function loadDailyJournalHistory() {
    const allEntries = JSON.parse(localStorage.getItem('journalEntries') || '[]');
    const dailyEntries = allEntries.filter(entry => entry.type !== 'three-cards');
    
    const container = document.getElementById('dailyJournalEntries');
    container.innerHTML = '';
    
    if (dailyEntries.length === 0) {
        container.innerHTML = '<p style="text-align: center; color: #666;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</p>';
        return;
    }
    
    dailyEntries.forEach(entry => {
        const entryElement = document.createElement('div');
        entryElement.className = 'journal-entry fade-in';
        
        const date = new Date(entry.date).toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
        
        const moodEmoji = {
            'very-happy': 'üòÑ',
            'happy': 'üòä',
            'neutral': 'üòê',
            'sad': 'üòî',
            'very-sad': 'üò¢'
        };
        
        // Use the createSingleCardJournalEntry function from advanced-features.js
        if (typeof createSingleCardJournalEntry === 'function') {
            entryElement.innerHTML = createSingleCardJournalEntry(entry, date, moodEmoji);
        } else {
            // Fallback if function not available
            entryElement.innerHTML = `
                <div class="journal-entry-header">
                    <span class="journal-entry-date">${date}</span>
                    <span class="journal-entry-mood">${moodEmoji[entry.mood] || 'üòä'}</span>
                </div>
                <div class="journal-entry-card">
                    <img src="${entry.card.file}" alt="${entry.card.name}" class="card-mini-img">
                    <span>${entry.card.name}</span>
                </div>
                <div class="journal-entry-notes">${entry.notes || entry.card.meaning}</div>
            `;
        }
        
        container.appendChild(entryElement);
    });
}

// Fallback function to load three cards history if advanced-features.js not ready
function loadThreeCardsHistoryFallback() {
    const threeCardsHistory = JSON.parse(localStorage.getItem('threeCardsHistory') || '[]');
    const container = document.getElementById('threeCardsHistoryContainer');
    
    if (!container) {
        console.warn('Three Cards History container not found');
        return;
    }
    
    container.innerHTML = '';
    
    if (threeCardsHistory.length === 0) {
        container.innerHTML = `
            <div style="text-align: center; color: #666; padding: 40px;">
                <div style="font-size: 48px; margin-bottom: 20px;">üîÆ</div>
                <h4>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö</h4>
                <p>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö (‡∏≠‡∏î‡∏µ‡∏ï ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï) ‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å<br>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</p>
                <div style="margin-top: 20px;">
                    <button onclick="toggleJournalSection(); initializePick3Cards();" class="btn primary">
                        <i class="fas fa-cards"></i> ‡πÑ‡∏õ‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö
                    </button>
                </div>
            </div>
        `;
        return;
    }
    
    threeCardsHistory.forEach(entry => {
        const entryElement = document.createElement('div');
        entryElement.className = 'journal-entry fade-in';
        
        const date = new Date(entry.date).toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
        
        // Create a simplified three-cards entry
        const cards = entry.cards || {};
        const yamInfo = entry.yamInfo || {};
        const tableData = entry.tableData || {};
        const numericalAnalysis = entry.numericalAnalysis || {};
        
        let cardsHTML = '';
        if (cards.past && cards.present && cards.future) {
            cardsHTML = `
                <div class="three-cards-display-simple">
                    <div class="card-simple">
                        <img src="${cards.past.file}" alt="${cards.past.name}">
                        <span>‡∏≠‡∏î‡∏µ‡∏ï: ${cards.past.name}</span>
                    </div>
                    <div class="card-simple">
                        <img src="${cards.present.file}" alt="${cards.present.name}">
                        <span>‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${cards.present.name}</span>
                    </div>
                    <div class="card-simple">
                        <img src="${cards.future.file}" alt="${cards.future.name}">
                        <span>‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï: ${cards.future.name}</span>
                    </div>
                </div>
            `;
        }
        
                 let yamInfoHTML = '';
         if (yamInfo.yamNumber) {
             const yamInfluences = entry.yamInfluences || [];
             const yamMatchCount = numericalAnalysis.yamMatches || 0;
             
             yamInfoHTML = `
                 <div class="yam-info-simple">
                     <span class="yam-number">‡∏¢‡∏≤‡∏°: ${yamInfo.yamNumber}</span>
                     <span class="time-info">${yamInfo.dayName || ''} ${yamInfo.time || ''}</span>
                     ${yamMatchCount > 0 ? `<span class="yam-matches-badge">üåü ‡∏ï‡∏£‡∏á‡∏¢‡∏≤‡∏°: ${yamMatchCount}</span>` : ''}
                 </div>
                 ${yamInfluences.length > 0 ? `
                     <div class="yam-influences-simple">
                         ${yamInfluences.map(inf => `
                             <span class="influence-badge">
                                 ${inf.positionThai}: ‚≠ê${inf.yamSevy} üåü${inf.yamTaek}
                             </span>
                         `).join('')}
                     </div>
                 ` : ''}
             `;
         }
        
        let tableHTML = '';
        if (tableData.columnSums && tableData.columnSums.length > 0) {
            tableHTML = `
                <div class="table-info-simple">
                    <span>üìä ‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:</span>
                    <div class="sums-display">
                        ${tableData.columnSums.map((sum, index) => 
                            `<span class="sum-value ${tableData.highlightedNumbers && tableData.highlightedNumbers.includes(sum) ? 'highlighted' : ''}">${sum}</span>`
                        ).join(' | ')}
                    </div>
                    ${numericalAnalysis.yamMatches ? `<small>üåü ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°: ${numericalAnalysis.yamMatches} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</small>` : ''}
                </div>
            `;
        }
        
        entryElement.innerHTML = `
            <div class="journal-entry-header">
                <span class="journal-entry-date">${date}</span>
                <span class="journal-entry-type">üîÆ ‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö</span>
            </div>
            ${cardsHTML}
            ${yamInfoHTML}
            ${tableHTML}
            <div class="journal-entry-summary">
                <p>${entry.summary || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏£‡∏∏‡∏õ'}</p>
            </div>
            <div class="entry-actions-simple">
                <button class="btn mini" onclick="showThreeCardsDetails('${entry.date}')">
                    <i class="fas fa-eye"></i> ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                </button>
            </div>
        `;
        
        container.appendChild(entryElement);
    });
}

// Show three cards details (simple version)
function showThreeCardsDetails(entryDate) {
    const threeCardsHistory = JSON.parse(localStorage.getItem('threeCardsHistory') || '[]');
    const entry = threeCardsHistory.find(e => e.date === entryDate);
    if (!entry) return;
    
    let detailsHTML = `
        <div style="max-height: 400px; overflow-y: auto; padding: 20px;">
            <h4>üîÆ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏û‡πà 3 ‡πÉ‡∏ö</h4>
            <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${new Date(entry.date).toLocaleDateString('th-TH')}</p>
    `;
    
    if (entry.cards) {
        detailsHTML += `
            <div class="cards-detail">
                <h5>‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</h5>
                <ul>
                    <li><strong>‡∏≠‡∏î‡∏µ‡∏ï:</strong> ${entry.cards.past?.name || 'N/A'} - ${entry.cards.past?.meaning || ''}</li>
                    <li><strong>‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> ${entry.cards.present?.name || 'N/A'} - ${entry.cards.present?.meaning || ''}</li>
                    <li><strong>‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï:</strong> ${entry.cards.future?.name || 'N/A'} - ${entry.cards.future?.meaning || ''}</li>
                </ul>
            </div>
        `;
    }
    
    if (entry.yamInfo) {
        detailsHTML += `
            <div class="yam-detail">
                <h5>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≤‡∏°:</h5>
                <p><strong>‡∏¢‡∏≤‡∏°:</strong> ${entry.yamInfo.yamNumber}</p>
                <p><strong>‡∏ß‡∏±‡∏ô:</strong> ${entry.yamInfo.dayName}</p>
                <p><strong>‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${entry.yamInfo.time}</p>
            </div>
        `;
    }
    
    if (entry.tableData && entry.tableData.columnSums) {
        detailsHTML += `
            <div class="table-detail">
                <h5>‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:</h5>
                <p><strong>‡∏ú‡∏•‡∏£‡∏ß‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå:</strong> ${entry.tableData.columnSums.join(', ')}</p>
                ${entry.numericalAnalysis?.yamMatches ? `<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏°:</strong> ${entry.numericalAnalysis.yamMatches} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</p>` : ''}
            </div>
        `;
    }
    
    detailsHTML += `
            <div class="summary-detail">
                <h5>‡∏™‡∏£‡∏∏‡∏õ:</h5>
                <p>${entry.summary || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏£‡∏∏‡∏õ'}</p>
            </div>
        </div>
    `;
    
    // Show in alert for now (can be improved with modal later)
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100%; height: 100%; 
        background: rgba(0,0,0,0.5); z-index: 10000; display: flex; 
        align-items: center; justify-content: center;
    `;
    
    const content = document.createElement('div');
    content.style.cssText = `
        background: white; border-radius: 15px; max-width: 600px; 
        width: 90%; max-height: 80%; overflow-y: auto; position: relative;
    `;
    
    content.innerHTML = `
        ${detailsHTML}
        <div style="padding: 20px; text-align: center; border-top: 1px solid #eee;">
            <button onclick="this.closest('.modal-overlay').remove()" class="btn primary">‡∏õ‡∏¥‡∏î</button>
        </div>
    `;
    
    modal.className = 'modal-overlay';
    modal.appendChild(content);
    document.body.appendChild(modal);
    
    // Close when clicking outside
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// Star helper functions for Star Sevy-Taek system
function getStarName(number) {
    const starNames = {
        1: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå',
        2: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå', 
        3: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£',
        4: '‡∏û‡∏∏‡∏ò',
        5: '‡∏û‡∏§‡∏´‡∏±‡∏™',
        6: '‡∏®‡∏∏‡∏Å‡∏£‡πå',
        7: '‡πÄ‡∏™‡∏≤‡∏£‡πå'
    };
    return starNames[number] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
}

function getStarKeyFromNumber(number) {
    const starKeys = {
        1: 'sun',
        2: 'moon',
        3: 'mars', 
        4: 'mercury',
        5: 'jupiter',
        6: 'venus',
        7: 'saturn'
    };
    return starKeys[number] || 'sun';
}

// Debug function to check database
function debugStarDatabase() {
    if (typeof STAR_SEVY_TAEK_DATABASE === 'undefined') {
        console.error('STAR_SEVY_TAEK_DATABASE is not loaded!');
        return false;
    }
    
    console.log('Database loaded successfully');
    console.log('Available interpretations:', Object.keys(STAR_SEVY_TAEK_DATABASE.interpretations).length);
    console.log('Sample interpretations:');
    
    // Show a few sample interpretations
    const sampleKeys = ['moon-mercury', 'sun-venus', 'mars-jupiter'];
    sampleKeys.forEach(key => {
        const interpretation = STAR_SEVY_TAEK_DATABASE.interpretations[key];
        if (interpretation) {
            console.log(`${key}: ${interpretation.substring(0, 50)}...`);
        } else {
            console.log(`${key}: NOT FOUND`);
        }
    });
    
    return true;
}

// Test function for Star Sevy-Taek
function testStarSevyTaek() {
    console.log('=== Testing Star Sevy-Taek System ===');
    
    if (typeof STAR_SEVY_TAEK_DATABASE === 'undefined') {
        console.error('‚ùå STAR_SEVY_TAEK_DATABASE is not loaded!');
        return;
    }
    
    // Test specific interpretation
    const testKey = 'moon-mercury';
    const interpretation = STAR_SEVY_TAEK_DATABASE.interpretations[testKey];
    
    console.log('‚úÖ Database loaded successfully');
    console.log(`üîç Testing key: ${testKey}`);
    console.log(`üìñ Interpretation found: ${interpretation ? 'YES' : 'NO'}`);
    
    if (interpretation) {
        console.log(`üìù Full text (${interpretation.length} characters):`);
        console.log(interpretation);
        console.log('---');
    }
    
    // Test star key conversion
    console.log('üåü Star key conversions:');
    console.log('2 (Moon) ->', getStarKeyFromNumber(2));
    console.log('4 (Mercury) ->', getStarKeyFromNumber(4));
    
    return interpretation;
}

// Call debug function on load
window.addEventListener('load', () => {
    setTimeout(() => {
        debugStarDatabase();
        testStarSevyTaek();
    }, 1000);
});

// Make test function globally available
window.testStarSevyTaek = testStarSevyTaek;